{"version":3,"sources":["store/actions/actions.js","store/actions/buildBurger.js","store/actions/placeOrder.js","store/actions/fetchOrders.js","axios/auth.js","store/actions/authenticate.js","containers/Wrapper/Wrapper.js","components/BurgerIngredients/BurgerIngredients.module.css","axios/orders.js","components/BuildControl/BuildControl.module.css","components/Spinner/Spinner.js","components/Button/Button.js","components/Backdrop/Backdrop.js","components/Modal/Modal.js","components/NavigationItems/NavigationItems.module.css","components/Burger/Burger.module.css","components/Toolbar/Toolbar.module.css","components/BuildControls/BuildControls.module.css","components/Button/Button.module.css","containers/withErrorHandler/withErrorHandler.js","hooks/httpErrorHandler.js","components/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","assets/icons/burger-logo.png","components/Backdrop/Backdrop.module.css","components/Spinner/Spinner.module.css","components/Logo/Logo.js","components/NavigationItem/NavigationItem.js","components/NavigationItems/NavigationItems.js","components/DrawerToggle/DrawerToggle.js","components/Toolbar/Toolbar.js","components/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/BuildControl/BuildControl.js","components/BuildControls/BuildControls.js","components/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Logout/Logout.js","containers/App/App.js","serviceWorker.js","store/reducers/buildBurger.js","store/reducers/placeOrder.js","store/reducers/fetchOrders.js","store/reducers/authenticate.js","index.js"],"names":["SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","ADD_INGREDIENT","REMOVE_INGREDIENT","INIT_ORDER","CANCELED_ORDER","CHECKOUT_BURGER","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","addIngredient","ingredient","type","actions","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","initOrder","canceledOrder","checkoutBurger","purchaseBurger","orderData","token","post","purchaseBurgerFail","fetchOrders","userId","queryParams","res","orders","fetchedOrders","key","unshift","id","err","instance","create","baseURL","authSuccess","authData","checkAuthTimeout","expirationTime","setTimeout","logout","localStorage","removeItem","checkAuth","getItem","expirationDate","Date","idToken","localId","expiry","getTime","auth","email","password","isSignUp","returnSecureToken","apiKey","endPoints","signUp","signIn","expiresIn","setItem","authFail","aux","props","children","module","exports","spinner","className","classes","Spinner","button","Button","btnType","join","onClick","clicked","disabled","backdrop","show","Backdrop","React","memo","modalClosed","prevProps","nextProps","withErrorHandler","WrappedComponent","httpClient","useState","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","useEffect","eject","useHttpErrorHandler","confirmError","Wrapper","Modal","message","BurgerIngredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burgerClasses","Burger","burgerScroll","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","igArray","currentIg","concat","length","burgerP","logo","src","burgerLogo","alt","navigationItem","to","link","exact","activeClassName","navigationItems","navClass","side","NavigationItems","NavigationItems__side","sideDrawerClose","NavigationItem","isAuthenticated","drawerToggle","toolbar","Toolbar","DrawerToggle","drawerToggleClicked","Logo","tool","DesktopOnly","sideDrawer","open","closed","Layout","useSelector","state","authenticate","sideDrawerShown","showSideDrawer","SideDrawer","control","BuildControl","Label","label","Less","removed","More","added","controls","buildControls","buttonStatus","orderStatus","statusKey","overallStatus","currentButtonStatus","BuildControls","price","toFixed","ingredientAdded","ingredientRemoved","OrderButton","ordered","OrderSummary","continueHandler","loginHandler","ingredientSummary","style","textTransform","cancelOrder","continueOrder","useDispatch","onInitIngredients","useCallback","onCanceledOrder","ings","buildBurger","totalPrice","placeOrder","handleCancelPurchase","disabledInfo","orderSummary","ingName","history","replace","Logout","onLogout","Checkout","lazy","Orders","Auth","App","onPageLoadSignUp","fallback","path","component","BurgerBuilder","routes","Boolean","window","location","hostname","match","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","deepClone","object","JSON","parse","stringify","reducer","action","purchasing","loading","purchased","fetching","composeEnhancers","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.8b661f5a.chunk.js","sourcesContent":["export const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n\r\nexport const INIT_ORDER = 'INIT_ORDER';\r\nexport const CANCELED_ORDER = 'CANCELED_ORDER';\r\nexport const CHECKOUT_BURGER = 'CHECKOUT_BURGER';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDER_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDER_FAIL';\r\n\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actions.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nconst fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actions.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const addIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.ADD_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.REMOVE_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch  => (\r\n       axios.get('/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed())\r\n        })\r\n    )\r\n}","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\n\r\nconst purchaseBurgerStart = () => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_SUCCESS,\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const initOrder = () => {\r\n    return {\r\n        type: actions.INIT_ORDER\r\n    }\r\n}\r\n\r\n\r\nexport const canceledOrder = () => {\r\n    return {\r\n        type: actions.CANCELED_ORDER\r\n    }\r\n}\r\n\r\nexport const checkoutBurger = () => {\r\n    return {\r\n        type: actions.CHECKOUT_BURGER\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData,token) => {\r\n    return dispatch => {\r\n        \r\n        dispatch(purchaseBurgerStart())\r\n        axios.post('/orders.json?auth=' + token,orderData)\r\n        .then(response => {\r\n            dispatch(purchaseBurgerSuccess())\r\n        })\r\n        .catch(error => {\r\n            dispatch(purchaseBurgerFail(error))\r\n        })\r\n    }\r\n}","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\nconst fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\n\r\nconst fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nconst fetchOrdersStart = () => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const fetchOrders = (token,userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart())\r\n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\r\n        axios.get(`/orders.json${queryParams}`)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data){\r\n                    fetchedOrders.unshift({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err))\r\n            })\r\n    }\r\n}","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE'\r\n});\r\n\r\n\r\nexport default instance;","import * as actions from './actions';\r\nimport axios from '../../axios/auth'\r\n\r\nconst authStart = () => {\r\n    return {\r\n        type: actions.AUTH_START\r\n    }\r\n}\r\n\r\n\r\nconst authSuccess = (authData) => {\r\n    return {\r\n        type: actions.AUTH_SUCCESS,\r\n        authData: authData\r\n    }\r\n}\r\n\r\n\r\nconst authFail = (error) => {\r\n    return {\r\n        type: actions.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\nconst checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        },expirationTime * 900)\r\n    }\r\n}\r\n\r\n\r\n//exports\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId')\r\n    return {\r\n        type: actions.AUTH_LOGOUT\r\n    }\r\n};\r\n\r\n\r\nexport const checkAuth = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n            \r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n\r\n            if (expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess({idToken: token, localId: userId}))\r\n                const expiry = (expirationDate.getTime() - new Date().getTime())/1000;\r\n                dispatch(checkAuthTimeout(expiry))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\nexport const auth = (email,password,isSignUp) =>{\r\n    return dispatch => {\r\n        dispatch(authStart())\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        const apiKey = 'AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE';\r\n\r\n        const endPoints = {\r\n            signUp : `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`,\r\n            signIn : `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`\r\n        }\r\n    \r\n        axios.post((isSignUp? endPoints.signUp : endPoints.signIn), authData)\r\n            .then(response => {\r\n                const expirationDate = new Date( new Date().getTime() + new Date(response.data.expiresIn*1000).getTime())\r\n                localStorage.setItem('token',response.data.idToken)\r\n                localStorage.setItem('expirationDate',expirationDate)\r\n                localStorage.setItem('userId',response.data.localId)\r\n\r\n                dispatch(checkAuthTimeout(response.data.expiresIn))\r\n                dispatch(authSuccess(response.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(authFail(error.response.data.error))\r\n            })\r\n    }\r\n}","\r\n\r\n\r\nconst aux = (props) => {\r\n    return props.children\r\n}\r\n\r\nexport default aux;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__2ZP9H\",\"BreadTop\":\"BurgerIngredients_BreadTop__1NwWx\",\"Seeds1\":\"BurgerIngredients_Seeds1__3TBcT\",\"Seeds2\":\"BurgerIngredients_Seeds2__1NoW7\",\"Meat\":\"BurgerIngredients_Meat__2qrZI\",\"Cheese\":\"BurgerIngredients_Cheese__2G8sW\",\"Salad\":\"BurgerIngredients_Salad__cDm6D\",\"Bacon\":\"BurgerIngredients_Bacon__2V3rE\"};","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-builder-12ae6.firebaseio.com'\r\n});\r\n\r\n\r\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3i9Ic\",\"Label\":\"BuildControl_Label__2LmF9\",\"Less\":\"BuildControl_Less__3x6Vt\",\"More\":\"BuildControl_More__oZbFL\"};","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\n\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <div className={classes.Spinner}>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default spinner ;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => {\r\n    return(\r\n        <button\r\n            className={[classes.Button, classes[props.btnType]].join(' ')}\r\n            onClick={props.clicked}\r\n            type={props.type}\r\n            disabled={props.disabled}\r\n        >\r\n        {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport default button;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\n\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n    )\r\n}\r\n\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport './modal.scss'\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n\r\nconst Modal = props => {\r\n    return(\r\n        <Wrapper>\r\n            <Backdrop show={props.show} clicked={props.modalClosed}/>\r\n            <div \r\n                className={props.show? 'modal modal--show': 'modal'}\r\n            >\r\n                {props.children}\r\n            </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\n\r\n\r\nfunction memoCondition(prevProps,nextProps){\r\n    const result = (nextProps.show === prevProps.show ) && (nextProps.children === prevProps.children)\r\n    return result\r\n    \r\n}\r\n\r\nexport default React.memo(Modal,memoCondition);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2lUmQ\",\"NavigationItems__side\":\"NavigationItems_NavigationItems__side__1H79u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1ZMx7\",\"burgerP\":\"Burger_burgerP__2OCWF\",\"burgerScroll\":\"Burger_burgerScroll__1r98W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2UdKM\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3yDdd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3uydx\",\"instruction\":\"BuildControls_instruction__lhqOz\",\"OrderButton\":\"BuildControls_OrderButton__hHPA0\",\"enable\":\"BuildControls_enable__rfqPn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__37ErL\",\"Success\":\"Button_Success__2P7Ld\",\"Danger\":\"Button_Danger__PdNGn\"};","import React from 'react';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport useHttpErrorHandler from '../../hooks/httpErrorHandler'\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return props => {\r\n      const [error, confirmError] = useHttpErrorHandler(axios);\r\n        return(\r\n            <Wrapper>\r\n               <Modal \r\n                    show={error}\r\n                    modalClosed={confirmError}\r\n               >\r\n                   {error ? error.message : null}\r\n               </Modal>\r\n               <WrappedComponent {...props}/>\r\n           </Wrapper>\r\n            )\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","\r\nimport {useState,useEffect} from 'react';\r\n\r\nexport default httpClient => {\r\n    const [error, setError] = useState(null)\r\n\r\n        const reqInterceptor = httpClient.interceptors.request.use(req => {\r\n            setError(null)\r\n            return req;\r\n        })\r\n        const resInterceptor = httpClient.interceptors.response.use(res => res, err => {\r\n            setError(err)\r\n        })\r\n\r\n        useEffect(() => {\r\n            //....\r\n            return () => {\r\n                httpClient.interceptors.request.eject(reqInterceptor);\r\n                httpClient.interceptors.response.eject(resInterceptor);\r\n            }\r\n        // eslint-disable-next-line\r\n        },[reqInterceptor,resInterceptor]) \r\n\r\n        const confirmError = () => {\r\n            setError(null)\r\n        }\r\n\r\n    return [error,confirmError]\r\n}","import React from 'react';\r\nimport classes from './BurgerIngredients.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BurgerIngredient = props => {\r\n    let ingredient = null;\r\n\r\n        switch(props.type){\r\n            case('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            \r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            \r\n            case('meat'):\r\n                ingredient = <div className={classes.Meat}></div>\r\n                break;\r\n            \r\n            case('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            \r\n            case('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>\r\n                break;\r\n            \r\n            case('salad'):\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            \r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n}\r\n\r\n\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from '../BurgerIngredients/BurgerIngredients';\r\n\r\nconst burgerClasses = [classes.Burger, classes.burgerScroll];\r\nconst burger = (props) =>{\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_,i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        })\r\n    })\r\n    .reduce((igArray,currentIg)=>{\r\n        return igArray.concat(currentIg)\r\n    },[]);\r\n\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients = <p className={classes.burgerP}>Feel free to add ingredients</p>\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className={burgerClasses.join(' ')}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default burger;","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3r8A1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__1udTu\",\"lds-ripple\":\"Spinner_lds-ripple__2LAf1\"};","import React from 'react';\r\nimport burgerLogo from '../../assets/icons/burger-logo.png';\r\nimport './logo.scss';\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className={'logo'}>\r\n            <img src={burgerLogo} alt=\"brand-logo\" className={'logo__img'} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logo;","import React from 'react';\r\nimport './navigationitem.scss'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst navigationItem = (props) =>{\r\n    return(\r\n        <li className={'navigation-item'}>\r\n            <NavLink \r\n                to={props.link}\r\n                exact\r\n                activeClassName={'active'}\r\n            >{props.children}</NavLink>\r\n        </li>\r\n    )\r\n    \r\n}\r\n\r\nexport default navigationItem;\r\n\r\n","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from '../NavigationItem/NavigationItem';\r\n\r\n\r\nconst navigationItems = (props) =>{\r\n\r\n    let navClass = [];\r\n    if(props.side){\r\n        navClass = [classes.NavigationItems, classes.NavigationItems__side].join(' ');\r\n    }else{\r\n        navClass = [classes.NavigationItems]\r\n    }\r\n\r\n\r\n    return(\r\n        <ul className={navClass}  onClick={props.sideDrawerClose}>\r\n            \r\n            <NavigationItem link='/'>\r\n                Burger Builder\r\n            </NavigationItem>\r\n\r\n            {props.isAuthenticated?<NavigationItem link=\"/orders\" >\r\n                Orders\r\n            </NavigationItem> : null}\r\n\r\n            <NavigationItem link={props.isAuthenticated ? '/logout' : '/auth'} >\r\n                {props.isAuthenticated ? 'Logout': 'Login'}\r\n            </NavigationItem>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport './drawertoggle.scss';\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        // <div onClick={props.clicked}>MENU</div>\r\n        <div onClick={props.clicked} className={'drawertoggle'}>\r\n            <div className={'drawertoggle__bar'}></div>\r\n            <div className={'drawertoggle__bar'}></div>\r\n            <div className={'drawertoggle__bar'}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'; \r\nimport DrawerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => {\r\n\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n            <Logo tool/>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems isAuthenticated={props.isAuthenticated}/>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default toolbar;\r\n\r\n","import React from 'react';\r\nimport './sidedrawer.scss';\r\n\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\n\r\nconst sideDrawer = (props ) => {\r\n    return(\r\n        <Wrapper>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={props.open? 'sidedrawer sidedrawer--open' : 'sidedrawer sidedrawer--close'}>\r\n                <nav>\r\n                    <NavigationItems side isAuthenticated={props.isAuthenticated} sideDrawerClose={props.closed}/> \r\n                </nav>\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\n\r\nexport default sideDrawer;","import React, {useState} from 'react';\r\nimport './layout.scss';\r\nimport Toolbar from '../../components/Toolbar/Toolbar'; \r\nimport SideDrawer from '../../components/SideDrawer/SideDrawer';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst Layout = props => {\r\n    const isAuthenticated = useSelector(state => state.authenticate.token !== null)\r\n    const [sideDrawerShown, showSideDrawer] = useState(false)\r\n\r\n    const closeSideDrawer = () => {\r\n        showSideDrawer(false)\r\n    }\r\n\r\n    const toggleSideDrawer = () => {\r\n        showSideDrawer(!sideDrawerShown)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Toolbar \r\n                drawerToggleClicked={toggleSideDrawer}\r\n                isAuthenticated={isAuthenticated}/>\r\n            <SideDrawer \r\n                isAuthenticated={isAuthenticated}\r\n                open={sideDrawerShown} \r\n                closed={closeSideDrawer}/>\r\n            <main className={'main'}>\r\n            {props.children}\r\n            </main>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Layout;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst control = (props) => {\r\n    return(\r\n        <div className = {classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n\r\n            <button \r\n                className={classes.Less} \r\n                onClick={props.removed}\r\n                disabled={props.disabled}\r\n            >\r\n            Less\r\n            </button>\r\n\r\n            <button \r\n                className={classes.More} \r\n                onClick={props.added}\r\n            >\r\n            More\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default control;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from '../BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\n\r\nconst buildControls = (props) => {\r\n\r\n    const buttonStatus = {...props.disabled}\r\n    const orderStatus = !(Object.keys(buttonStatus).map(statusKey=>{\r\n        return (!buttonStatus[statusKey])\r\n    }).reduce((overallStatus, currentButtonStatus)=>{\r\n        return (overallStatus || currentButtonStatus)\r\n    },false))\r\n\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className={classes.BuildControls}>\r\n            <p>Current price: <strong>${props.price.toFixed(2)}</strong></p>\r\n            {controls.map(control => {\r\n                return (\r\n                <BuildControl \r\n                    key={control.label}\r\n                    label={control.label}\r\n                    added={()=>props.ingredientAdded(control.type)}\r\n                    removed={()=>props.ingredientRemoved(control.type)}\r\n                    disabled={props.disabled[control.type]}\r\n                />\r\n                )\r\n            })}\r\n            \r\n            \r\n            <button \r\n                className={classes.OrderButton} \r\n                disabled={orderStatus} \r\n                onClick={props.ordered}>ORDER NOW</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport './ordersummary.scss'\r\nimport Button from '../Button/Button';\r\n\r\n\r\nconst OrderSummary = props => {\r\n\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform:'capitalize'}}>\r\n                    {igKey}\r\n                </span> : {props.ingredients[igKey]}\r\n            </li>\r\n            )\r\n        })\r\n\r\n        const continueButton = function(isAuthenticated, continueHandler, loginHandler){\r\n            if(isAuthenticated){\r\n                return <Button btnType=\"Success\" clicked={continueHandler}>Continue</Button>\r\n            }else{\r\n                return <Button btnType=\"Success\" clicked={loginHandler}>Login</Button>\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div className={'ordersummary'}>\r\n                <h3 className={'ordersummary__heading'}>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients :</p>\r\n                <ul className={'ordersummary__items'}>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p className={'ordersummary__info'}><strong>Total Price: ${props.price.toFixed(2)}</strong></p>\r\n                {props.isAuthenticated?null : <p className={\"ordersummary__info\"}>Please login in to continue</p>}\r\n                <Button btnType=\"Danger\" clicked={props.cancelOrder}>Cancel</Button>\r\n                {continueButton(props.isAuthenticated,props.continueOrder,props.loginHandler)}\r\n                {/* <Button btnType=\"Success\" clicked={props.continueOrder}>Continue</Button> */}\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nexport default OrderSummary;","import React, {useEffect,useCallback} from 'react';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport axios from '../../axios/orders';\r\nimport BuildControls from '../../components/BuildControls/BuildControls';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport OrderSummary from '../../components/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports';\r\n\r\nconst BurgerBuilder = props => {\r\n\r\n    const dispatch = useDispatch();\r\n    // eslint-disable-next-line\r\n    const onInitIngredients = useCallback(() => dispatch(actions.initIngredients()),[])\r\n    const onIngredientAdded = (ingName) => dispatch(actions.addIngredient(ingName))\r\n    const onIngredientRemoved = (ingName) => dispatch(actions.removeIngredient(ingName))\r\n    const onInitOrder = () => dispatch(actions.initOrder())\r\n    const onCanceledOrder = () => dispatch(actions.canceledOrder())\r\n\r\n        \r\n    const ings = useSelector(state => state.buildBurger.ingredients)\r\n    const price = useSelector(state => state.buildBurger.totalPrice)\r\n    const ordered = useSelector(state => state.placeOrder.ordered)\r\n    const error = useSelector(state => state.buildBurger.error)\r\n    const isAuthenticated = useSelector(state => state.authenticate.token !== null)\r\n\r\n    useEffect(() => {\r\n        onInitIngredients()\r\n    },[onInitIngredients])\r\n\r\n    const handlePurchase = () => {onInitOrder()}\r\n    const handleCancelPurchase = () => {onCanceledOrder()}\r\n    const handleContinuePurchase = () => {\r\n        onCanceledOrder(); //sets order status to false\r\n        props.history.replace('/checkout')\r\n    }\r\n\r\n    const handlePurchaseLogin = () => {props.history.replace('/auth')}\r\n\r\n    const disabledInfo = {\r\n        ...ings\r\n    }\r\n\r\n    for (let key in disabledInfo){\r\n        disabledInfo[key] = (disabledInfo[key] <= 0)\r\n    }\r\n\r\n    let orderSummary = null;\r\n    let burger = error ? <p>Ingredients can't be loaded :(</p> : <Spinner/>\r\n    if(ings){\r\n        burger = (\r\n            <Wrapper>\r\n                <Burger ingredients={ings}/>\r\n                <BuildControls\r\n                    ingredientAdded={onIngredientAdded}\r\n                    ingredientRemoved={onIngredientRemoved}\r\n                    disabled={disabledInfo}\r\n                    price={price}\r\n                    ordered={handlePurchase}\r\n                />\r\n            </Wrapper>\r\n        )\r\n\r\n        orderSummary = (\r\n            <OrderSummary \r\n                cancelOrder={handleCancelPurchase}\r\n                ingredients={ings}\r\n                continueOrder={handleContinuePurchase}\r\n                loginHandler={handlePurchaseLogin}\r\n                price={price}\r\n                isAuthenticated={isAuthenticated}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Modal show={ordered} modalClosed={handleCancelPurchase}>\r\n                {orderSummary}\r\n            </Modal>\r\n\r\n            {burger}\r\n            \r\n        </Wrapper>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default withErrorHandler(BurgerBuilder,axios);","import React,{ useEffect,useCallback} from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport * as actions from '../../store/actions/exports'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst Logout = props => {\r\n    const dispatch = useDispatch();\r\n    const onLogout = useCallback(() => dispatch(actions.logout()),[dispatch])\r\n\r\n    useEffect(() => {\r\n        onLogout()\r\n    },[onLogout])\r\n\r\n    return (\r\n        <Redirect to=\"/\" />\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Logout;","import React, {useEffect, Suspense, useCallback} from 'react';\r\nimport Layout from '../Layout/Layout';\r\nimport BurgerBuilder from '../BurgerBuilder/BurgerBuilder';\r\nimport Logout from '../Logout/Logout';\r\nimport {Route, Switch,Redirect} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports'\r\nimport Spinner from '../../components/Spinner/Spinner'\r\n\r\nconst Checkout = React.lazy(() => {return import ('../Checkout/Checkout')})\r\nconst Orders = React.lazy(() => {return import ('../Orders/Orders')})\r\nconst Auth = React.lazy(() => {return import ('../Auth/Auth')})\r\n\r\n\r\nconst App = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const onPageLoadSignUp = useCallback(() => dispatch(actions.checkAuth()),[dispatch])\r\n  const isAuthenticated = useSelector(state => state.authenticate.token !== null)\r\n\r\n  useEffect(() => {\r\n    onPageLoadSignUp();\r\n  },[onPageLoadSignUp])\r\n\r\n  const routes = function (isAuthenticated){\r\n    if(isAuthenticated){\r\n      return (\r\n          <>\r\n            {/* <Route path=\"/checkout\" render={() => <Checkout/>}/> */}\r\n            <Route path=\"/checkout\" component={Checkout}/>\r\n            <Route path=\"/orders\" component={Orders}/>\r\n            <Route path=\"/logout\" component={Logout}/>\r\n            <Route path=\"/\" exact component={BurgerBuilder}/>\r\n            <Redirect to =\"/\" />\r\n          </>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n          <Route path=\"/auth\" component={Auth} />\r\n          <Route path=\"/\" exact component={BurgerBuilder}/>\r\n          <Redirect to = \"/\"/>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Layout>\r\n      <Switch>\r\n        <Suspense fallback={<Spinner/>}>\r\n          {routes(isAuthenticated)}\r\n        </Suspense>\r\n      </Switch>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n}\r\n\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n\r\n        case actions.SET_INGREDIENTS:{\r\n            const _ = deepClone(state);\r\n            if(!_.ingredients){\r\n                _.ingredients = {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat\r\n                    }\r\n\r\n                _.error = false;\r\n                _.purchasing = false;\r\n                return _\r\n\r\n            } else {\r\n                _.error = false;\r\n                return _\r\n            }\r\n        }\r\n              \r\n        \r\n        case actions.FETCH_INGREDIENTS_FAILED:{\r\n            const _ = deepClone(state)\r\n            _.error = true;\r\n            return _;       \r\n        }\r\n\r\n        case actions.ADD_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] ++;  \r\n            _.totalPrice += INGREDIENT_PRICES[action.ingredient];\r\n\r\n            return _;\r\n        }\r\n\r\n        case actions.REMOVE_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] --;   \r\n            _.totalPrice -= INGREDIENT_PRICES[action.ingredient];        \r\n            return _;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    purchased: false,\r\n    ordered: false\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case actions.INIT_ORDER: {\r\n            const _ = deepClone(state)\r\n            _.ordered = true\r\n            return _\r\n            \r\n        }\r\n\r\n        case actions.CANCELED_ORDER: {\r\n            const _ = deepClone(state)\r\n            _.ordered = false\r\n            return _\r\n                \r\n        }\r\n\r\n        case actions.CHECKOUT_BURGER: {\r\n            const _ = deepClone(state);\r\n            _.purchased = false\r\n            return _\r\n        }\r\n\r\n        case actions.PURCHASE_BURGER_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            _.purchased = true;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_START:{\r\n            const _ = deepClone(state);\r\n            _.loading = true;\r\n            return _;\r\n        }\r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    fetching: true,\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        \r\n        case actions.FETCH_ORDERS_START:\r\n            const _ = deepClone(state);\r\n            _.fetching = true;\r\n            return _;\r\n\r\n\r\n        case actions.FETCH_ORDERS_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.orders = action.orders;\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.FETCH_ORDERS_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n        \r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actions.AUTH_START:{\r\n            const _ = deepClone(state);\r\n            _.loading = true;\r\n            _.error = null;\r\n            return _;\r\n        }\r\n\r\n        case actions.AUTH_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.token = action.authData.idToken\r\n            _.userId = action.authData.localId\r\n            _.error = null\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.AUTH_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.error = action.error\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.AUTH_LOGOUT:{\r\n            const _ = deepClone(state);\r\n            _.token = null\r\n            _.userId = null\r\n            return _;\r\n        }\r\n        \r\n        default: \r\n            return (state)\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/index.scss';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, combineReducers, compose} from 'redux';\r\n// import reducer from './store/reducer';\r\nimport buildBurger from './store/reducers/buildBurger'\r\nimport placeOrder from './store/reducers/placeOrder'\r\nimport fetchOrders from './store/reducers/fetchOrders'\r\nimport authenticate from './store/reducers/authenticate'\r\nimport thunk from 'redux-thunk';\r\n\r\n//Basic redux setup\r\n// const store = createStore(burgerBuilderReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconst composeEnhancers = (process.env.NODE_ENV === 'development'? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  buildBurger: buildBurger,\r\n  placeOrder: placeOrder,\r\n  fetchOrders: fetchOrders,\r\n  authenticate: authenticate\r\n})\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n      applyMiddleware(thunk)\r\n    ));\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter  basename=\"/burgerbuilder\">\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>//disabled to show popUp :(\r\n    <>\r\n      {app}\r\n    </>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}