{"version":3,"sources":["components/BurgerIngredients/BurgerIngredients.module.css","components/Input/Input.module.css","components/SideDrawer/SideDrawer.module.css","components/BuildControl/BuildControl.module.css","components/Logo/Logo.module.css","components/Burger/Burger.module.css","components/OrderSummary/OrderSummary.module.css","components/Toolbar/Toolbar.module.css","components/NavigationItem/NavigationItem.module.css","components/BuildControls/BuildControls.module.css","components/Button/Button.module.css","containers/Layout/Layout.module.css","assets/icons/burger-logo.png","components/NavigationItems/NavigationItems.module.css","components/DrawerToggle/DrawerToggle.module.css","components/Backdrop/Backdrop.module.css","components/Modal/Modal.module.css","components/Spinner/Spinner.module.css","components/CheckoutSummary/CheckoutSummary.module.css","containers/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Wrapper/Wrapper.js","components/Logo/Logo.js","components/NavigationItem/NavigationItem.js","components/NavigationItems/NavigationItems.js","components/DrawerToggle/DrawerToggle.js","components/Toolbar/Toolbar.js","components/Backdrop/Backdrop.js","components/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/BuildControl/BuildControl.js","components/BuildControls/BuildControls.js","components/Modal/Modal.js","components/Button/Button.js","components/OrderSummary/OrderSummary.js","axios-orders.js","components/Spinner/Spinner.js","containers/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/CheckoutSummary/CheckoutSummary.js","components/Input/Input.js","containers/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","tool","Logo__tool","Logo__side","join","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","_","SideDrawer","Close","open","Open","Wrapper","closed","side","Layout","state","showSideDrawer","sideDrawerClosedHandler","bind","sideDrawerToggleHandler","this","setState","prevState","main","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burgerClasses","Burger","burgerScroll","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","i","key","reduce","igArray","currentIg","concat","length","burgerP","control","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","buttonStatus","orderStatus","statusKey","overallStatus","currentButtonStatus","BuildControls","price","toFixed","ingredientAdded","ingredientRemoved","OrderButton","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","modalHeading","orderList","orderP","cancelOrder","continueOrder","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","errorConfirmedHandler","message","INGREDIENT_PRICES","salad","cheese","meat","bacon","totalPrice","purchasing","loading","addIngredientHandler","removeIngredientHandler","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","get","then","data","catch","queryParams","push","encodeURIComponent","queryString","history","pathname","search","updatedCount","updatedIngredients","priceAddition","newPrice","oldCount","priceDeduction","disabledInfo","orderSummary","Spinner","checkoutSummary","CheckoutSummary","width","height","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputtype","InputElement","Input","ContactData","name","email","address","street","postalCode","orderHandler","event","preventDefault","console","log","order","customer","zipCode","country","post","replace","form","placeholder","Checkout","checkoutCancelledHandler","checkoutContinuedHandler","query","URLSearchParams","location","entries","entry","path","match","render","amount","ingredientOutput","display","border","padding","Order","marginBottom","orders","fetchedOrders","id","err","App","component","Orders","BurgerBuilder","Boolean","window","hostname","app","basename","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b388922b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__3iOFo\",\"BreadTop\":\"BurgerIngredients_BreadTop__2b5kG\",\"Seeds1\":\"BurgerIngredients_Seeds1__10oV4\",\"Seeds2\":\"BurgerIngredients_Seeds2__3Cgi_\",\"Meat\":\"BurgerIngredients_Meat__3Lg32\",\"Cheese\":\"BurgerIngredients_Cheese__2NFYG\",\"Salad\":\"BurgerIngredients_Salad__QngSB\",\"Bacon\":\"BurgerIngredients_Bacon__2ICDg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2fCFW\",\"Label\":\"Input_Label__1q7UR\",\"InputElement\":\"Input_InputElement__2q7Cn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__P9c2i\",\"Open\":\"SideDrawer_Open__3vNMY\",\"Close\":\"SideDrawer_Close__39mlF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__6NGBu\",\"Label\":\"BuildControl_Label__Mefbx\",\"Less\":\"BuildControl_Less__3ZqhY\",\"More\":\"BuildControl_More__3p2VI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3Zlr2\",\"Logo__side\":\"Logo_Logo__side__1pZXx\",\"Logo__tool\":\"Logo_Logo__tool__29NMs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__3Ygrm\",\"burgerP\":\"Burger_burgerP__-C8aN\",\"burgerScroll\":\"Burger_burgerScroll__oKrnC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderList\":\"OrderSummary_orderList__2IXvs\",\"modalHeading\":\"OrderSummary_modalHeading__3lnYR\",\"orderP\":\"OrderSummary_orderP__ODlUo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1mUvC\",\"DesktopOnly\":\"Toolbar_DesktopOnly__vZgRS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3Jr9R\",\"active\":\"NavigationItem_active__3odWB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2ggwP\",\"OrderButton\":\"BuildControls_OrderButton__1XlTk\",\"enable\":\"BuildControls_enable__1Z1hn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Zc-p\",\"Success\":\"Button_Success__2VP4c\",\"Danger\":\"Button_Danger__3pzSR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__tQatf\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2b3Uo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__11B7y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2qVQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2nnKT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__IJ3pq\",\"lds-facebook\":\"Spinner_lds-facebook__TFyXD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__6r4fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__31I5X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__jtRYE\"};","\r\n\r\n\r\nconst aux = (props) => {\r\n    return props.children\r\n}\r\n\r\nexport default aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/icons/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className={[classes.Logo, props.tool ? classes.Logo__tool : classes.Logo__side].join(' ') }>\r\n            <img src={burgerLogo} alt=\"brand-logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst navigationItem = (props) =>{\r\n    return(\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink \r\n                to={props.link}\r\n                exact\r\n                activeClassName={classes.active}\r\n            >{props.children}</NavLink>\r\n        </li>\r\n    )\r\n    \r\n}\r\n\r\nexport default navigationItem;\r\n\r\n","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from '../NavigationItem/NavigationItem';\r\n\r\n\r\nconst navigationItems = () =>{\r\n    return(\r\n        <ul className={classes.NavigationItems}>\r\n            <NavigationItem link='/'>\r\n                Burger Builder\r\n            </NavigationItem>\r\n\r\n            <NavigationItem link=\"/orders\">\r\n                Orders\r\n            </NavigationItem>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        // <div onClick={props.clicked}>MENU</div>\r\n        <div onClick={props.clicked} className={classes.DrawerToggle}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'; \r\nimport DrawerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => {\r\n\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n            <Logo tool/>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems/>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default toolbar;\r\n\r\n","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\n\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n    )\r\n}\r\n\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport _ from './SideDrawer.module.css';\r\n\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\n\r\nconst sideDrawer = (props ) => {\r\n    let attachedClasses = [_.SideDrawer, _.Close ];\r\n\r\n    if(props.open){\r\n        attachedClasses = [_.SideDrawer, _.Open ];\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <Logo side/>\r\n                <nav>\r\n                    <NavigationItems/>\r\n                </nav>\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Toolbar/Toolbar'; \r\nimport SideDrawer from '../../components/SideDrawer/SideDrawer';\r\n\r\n\r\nclass Layout extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            showSideDrawer: false\r\n        }\r\n\r\n        this.sideDrawerClosedHandler = this.sideDrawerClosedHandler.bind(this);\r\n        this.sideDrawerToggleHandler = this.sideDrawerToggleHandler.bind(this);\r\n\r\n    }\r\n\r\n\r\n    sideDrawerClosedHandler(){\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler(){\r\n        this.setState((prevState)=>{\r\n            return(\r\n                {showSideDrawer: !prevState.showSideDrawer}\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Wrapper>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.main}>\r\n                {this.props.children}\r\n                </main>\r\n            </Wrapper>\r\n  \r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Layout ;","import React, { Component } from 'react';\r\nimport classes from './BurgerIngredients.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n        let ingredient = null;\r\n\r\n        switch(this.props.type){\r\n            case('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            \r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            \r\n            case('meat'):\r\n                ingredient = <div className={classes.Meat}></div>\r\n                break;\r\n            \r\n            case('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            \r\n            case('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>\r\n                break;\r\n            \r\n            case('salad'):\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            \r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from '../BurgerIngredients/BurgerIngredients';\r\n\r\nconst burgerClasses = [classes.Burger, classes.burgerScroll];\r\nconst burger = (props) =>{\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_,i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        })\r\n    })\r\n    .reduce((igArray,currentIg)=>{\r\n        return igArray.concat(currentIg)\r\n    },[]);\r\n\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients = <p className={classes.burgerP}>Feel free to add ingredients</p>\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className={burgerClasses.join(' ')}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst control = (props) => {\r\n    return(\r\n        <div className = {classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n\r\n            <button \r\n                className={classes.Less} \r\n                onClick={props.removed}\r\n                disabled={props.disabled}\r\n            >\r\n            Less\r\n            </button>\r\n\r\n            <button \r\n                className={classes.More} \r\n                onClick={props.added}\r\n            >\r\n            More\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default control;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from '../BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\n\r\nconst buildControls = (props) => {\r\n\r\n    const buttonStatus = {...props.disabled}\r\n    const orderStatus = !(Object.keys(buttonStatus).map(statusKey=>{\r\n        return (!buttonStatus[statusKey])\r\n    }).reduce((overallStatus, currentButtonStatus)=>{\r\n        return (overallStatus || currentButtonStatus)\r\n    },false))\r\n\r\n    return (\r\n        <div className={classes.BuildControls}>\r\n            <p>Current price: <strong>${props.price.toFixed(2)}</strong></p>\r\n            {controls.map(control => {\r\n                return (\r\n                <BuildControl \r\n                    key={control.label}\r\n                    label={control.label}\r\n                    added={()=>props.ingredientAdded(control.type)}\r\n                    removed={()=>props.ingredientRemoved(control.type)}\r\n                    disabled={props.disabled[control.type]}\r\n                />\r\n                )\r\n            })}\r\n\r\n\r\n            <button className={classes.OrderButton} disabled={orderStatus} onClick={props.ordered}>ORDER NOW</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component{\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return (nextProps.show !== this.props.show || nextProps.children !== this.props.children)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Wrapper>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => {\r\n    return(\r\n        <button\r\n            className={[classes.Button, classes[props.btnType]].join(' ')}\r\n            onClick={props.clicked}\r\n        >\r\n        {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport default button;","import React, {Component} from 'react';\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\nimport classes from './OrderSummary.module.css';\r\nimport Button from '../Button/Button';\r\n\r\n\r\n\r\nclass OrderSummary extends Component{\r\n\r\n    render(){\r\n\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map(igKey => {\r\n            return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform:'capitalize'}}>\r\n                    {igKey}\r\n                </span> : {this.props.ingredients[igKey]}\r\n            </li>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <Wrapper>\r\n                <h3 className={classes.modalHeading}>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients :</p>\r\n                <ul className={classes.orderList}>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p className={classes.orderP}><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.cancelOrder}>Cancel</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.continueOrder}>Continue</Button>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default OrderSummary;","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-builder-12ae6.firebaseio.com'\r\n});\r\n\r\n\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\n\r\n\r\nconst spinner = () => {\r\n    return (\r\n        \r\n        <div className={classes.Loader}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default spinner ;","import React, { Component } from 'react';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return (\r\n        class extends Component{\r\n            constructor(props){\r\n                super(props)\r\n                \r\n                this.state = {\r\n                    error: null\r\n                }\r\n\r\n            }\r\n\r\n            \r\n            componentWillMount(){\r\n                this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                    this.setState({error: null});\r\n                    return req;\r\n                })\r\n\r\n                this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                    this.setState({error: error});\r\n                })\r\n            }\r\n\r\n            componentWillUnmount(){\r\n                axios.interceptors.request.eject(this.reqInterceptor);\r\n                axios.interceptors.response.eject(this.resInterceptor);\r\n            }\r\n            \r\n\r\n            errorConfirmedHandler(){\r\n                this.setState({error: null})\r\n            }\r\n        \r\n\r\n            render(){\r\n                return(\r\n                <Wrapper>\r\n                   <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                   >\r\n                       {this.state.error ? this.state.error.message : null}\r\n                   </Modal>\r\n                   <WrappedComponent {...this.props}/>\r\n               </Wrapper>\r\n                )\r\n            }\r\n       \r\n\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport default withErrorHandler;","import React, {Component} from 'react';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/BuildControls/BuildControls';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport OrderSummary from '../../components/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            ingredients:null, \r\n            totalPrice: 4,\r\n            purchasing: false,\r\n            loading: false,\r\n            error: false\r\n        }\r\n\r\n        this.addIngredientHandler = this.addIngredientHandler.bind(this);\r\n        this.removeIngredientHandler = this.removeIngredientHandler.bind(this);\r\n        this.purchaseHandler = this.purchaseHandler.bind(this);\r\n        this.purchaseCancelHandler = this.purchaseCancelHandler.bind(this);\r\n        this.purchaseContinueHandler = this.purchaseContinueHandler.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        axios.get('/ingredients.json')\r\n            .then(response => {\r\n                this.setState({ingredients: response.data})\r\n            })\r\n            .catch(error => {\r\n                this.setState({error: true})\r\n            })\r\n    }\r\n\r\n    purchaseHandler(){ \r\n        this.setState({purchasing: true})\r\n    }\r\n\r\n    purchaseCancelHandler(){\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n    purchaseContinueHandler(){\r\n\r\n        const queryParams = [];\r\n\r\n        queryParams.push(`price=${this.state.totalPrice.toFixed(2)}`)\r\n        for(let ingredient in this.state.ingredients){\r\n            queryParams.push(encodeURIComponent(ingredient) + \r\n                '=' +\r\n                 encodeURIComponent(this.state.ingredients[ingredient]))\r\n        }\r\n        const queryString = queryParams.join('&');\r\n\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?' + queryString\r\n        });\r\n        \r\n    }\r\n\r\n    addIngredientHandler(type){\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients  = {\r\n            ...this.state.ingredients\r\n        };\r\n\r\n        updatedIngredients[type] = updatedCount;\r\n\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIngredients\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    removeIngredientHandler(type){\r\n        const oldCount = this.state.ingredients[type];\r\n\r\n        if (oldCount <= 0){return}//do nothing \r\n\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients  = {\r\n            ...this.state.ingredients\r\n        };\r\n\r\n        updatedIngredients[type] = updatedCount;\r\n\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n\r\n        this.setState({\r\n            totalPrice: newPrice,\r\n            ingredients: updatedIngredients\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        \r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = (disabledInfo[key] <= 0)\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        \r\n       \r\n\r\n\r\n        let burger = this.state.error ? <p>Ingredients can't be loaded :(</p> : <Spinner/>\r\n\r\n        if(this.state.ingredients){\r\n            burger = (\r\n                <Wrapper>\r\n                    <Burger ingredients={this.state.ingredients}/>\r\n                    <BuildControls\r\n                        ingredientAdded={this.addIngredientHandler}\r\n                        ingredientRemoved={this.removeIngredientHandler}\r\n                        disabled={disabledInfo}\r\n                        price={this.state.totalPrice}\r\n                        ordered={this.purchaseHandler}\r\n                    />\r\n                </Wrapper>\r\n            )\r\n\r\n            orderSummary = (\r\n                <OrderSummary \r\n                    cancelOrder={this.purchaseCancelHandler}\r\n                    ingredients={this.state.ingredients}\r\n                    continueOrder={this.purchaseContinueHandler}\r\n                    price={this.state.totalPrice}\r\n                />\r\n            )\r\n        }\r\n        \r\n        if(this.state.loading){\r\n            orderSummary = <Spinner/>\r\n        }\r\n\r\n        return (\r\n            <Wrapper>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n\r\n                {burger}\r\n                \r\n            </Wrapper>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default withErrorHandler(BurgerBuilder,axios);","import React from 'react';\r\nimport Burger from '../Burger/Burger'; \r\nimport Button from '../Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h2>We hope it tastes well!</h2>\r\n            <div style={{width: '30rem', height: '30rem', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}\r\n                >Cancel</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}\r\n                >Continue</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n\r\n    switch(props.inputtype){\r\n        case('input'):\r\n            inputElement = <input className={classes.InputElement} {...props}/>\r\n            break;\r\n        \r\n        case('textarea'):\r\n            inputElement = <textarea className={classes.InputElement} {...props}/>\r\n            break;\r\n\r\n        default:\r\n            inputElement = <input className={classes.InputElement} {...props}/>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default input;","import React, {Component} from 'react';\r\nimport Button from '../../components/Button/Button';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport Input from '../../components/Input/Input';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nclass ContactData extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            address: {\r\n                street: '',\r\n                postalCode: ''\r\n            },\r\n            loading: false\r\n        }\r\n\r\n        this.orderHandler = this.orderHandler.bind(this);\r\n\r\n    }\r\n\r\n    orderHandler(event){\r\n        event.preventDefault();\r\n        console.log(this.props)\r\n\r\n        this.setState({loading: true})\r\n        // alert('You continue!');\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,\r\n            //dummy customer data\r\n            customer: {\r\n                name: 'Rafael M',\r\n\r\n                address: {\r\n                    street: 'Test Street',\r\n                    zipCode: '15145',\r\n                    country: 'China'\r\n                },\r\n\r\n                email: 'test@test.com'\r\n\r\n            }\r\n        }\r\n\r\n        axios.post('/orders.json',order)\r\n            .then(response => {\r\n                this.setState({loading: false})\r\n                this.props.history.replace('/');\r\n            })\r\n            .catch(error => {\r\n                this.setState({loading: false})\r\n            });\r\n    \r\n    }\r\n \r\n    render(){\r\n        let form = (\r\n            <form>\r\n                    <Input inputtype=\"input\" type='text' name=\"name\" placeholder=\"Your name\"/>\r\n                    <Input inputtype=\"input\" type='email' name=\"email\" placeholder=\"Your email\"/>\r\n                    <Input inputtype=\"input\" type='text' name=\"street\" placeholder=\"Street\"/>\r\n                    <Input inputtype=\"input\" type='text' name=\"postal\" placeholder=\"Postal Code\"/>\r\n                    <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if(this.state.loading){\r\n            form = <Spinner/>\r\n        }\r\n\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your contact data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ContactData;","import React, {Component} from 'react';\r\nimport CheckoutSummary from '../../components/CheckoutSummary/CheckoutSummary';\r\nimport {Route} from 'react-router-dom';\r\nimport ContactData from '../ContactData/ContactData';\r\n\r\n\r\nclass Checkout extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state={\r\n            ingredients: {},\r\n            totalPrice: 0\r\n        }\r\n\r\n        this.checkoutCancelledHandler = this.checkoutCancelledHandler.bind(this);\r\n        this.checkoutContinuedHandler = this.checkoutContinuedHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const ingredients = {};\r\n        let price = 0;\r\n        for (let entry of query.entries()){\r\n            if(entry[0] ==='price'){\r\n                price = entry[1];\r\n            }else{\r\n                ingredients[entry[0]] = +entry[1];\r\n            }\r\n        }\r\n\r\n        this.setState({ingredients: ingredients, totalPrice: price});\r\n    }\r\n\r\n\r\n\r\n    checkoutCancelledHandler(){\r\n        this.props.history.replace('/');\r\n    }\r\n\r\n    checkoutContinuedHandler(){\r\n        this.props.history.replace('/checkout/contact-data')\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <CheckoutSummary \r\n                    ingredients={this.state.ingredients}\r\n                    checkoutCancelled={this.checkoutCancelledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler}\r\n                    />\r\n                \r\n                <Route \r\n                    path={this.props.match.path + '/contact-data'} \r\n                    render={(props) => {\r\n                        return(\r\n                            <ContactData \r\n                                ingredients={this.state.ingredients} \r\n                                price={this.state.totalPrice}\r\n                                {...props}\r\n                                />\r\n                        )\r\n                    }}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Checkout;","import React from 'react';\r\nimport classes from './Order.module.css'\r\n\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredient in props.ingredients){\r\n        ingredients.push({\r\n                name: ingredient,\r\n                amount: props.ingredients[ingredient]\r\n            }\r\n        )\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ingredient => {\r\n        return <span \r\n            key={ingredient.name}\r\n            style={{\r\n                textTransform: \"capitalize\",\r\n                display: 'inline-block',\r\n                margin: '0 .8rem',\r\n                border: '1px solid gray',\r\n                padding: '0.5rem'\r\n            }}\r\n            >{ingredient.name} : {ingredient.amount} </span>\r\n    })\r\n\r\n    return(\r\n        <div className={classes.Order}>\r\n            <p style={{marginBottom: '1.2rem'}}>Ingredients: {ingredientOutput}</p>\r\n            <p>Price : <strong>$ {props.price}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order;","import React, {Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            orders: [],\r\n            loading: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data){\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n\r\n                console.log(fetchedOrders);\r\n\r\n                this.setState({loading: false,orders:fetchedOrders})\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => {\r\n                this.setState({loading: false})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.orders.map(order => {\r\n                    return (\r\n                        <Order \r\n                            key={order.id}\r\n                            ingredients={order.ingredients}\r\n                            price={order.price}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withErrorHandler(Orders,axios);","import React, {Component} from 'react';\r\nimport Layout from '../Layout/Layout';\r\nimport BurgerBuilder from '../BurgerBuilder/BurgerBuilder';\r\nimport Checkout from '../Checkout/Checkout';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Orders from '../Orders/Orders';\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return(\r\n      <Layout>\r\n          <Switch>\r\n            <Route path=\"/checkout\" component={Checkout}/>\r\n            <Route path=\"/orders\" component={Orders}/>\r\n            <Route path=\"/\" exact component={BurgerBuilder}/>\r\n\r\n            {/* <BurgerBuilder/> */}\r\n            {/* <Checkout/> */}\r\n          </Switch>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/index.css';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\n\r\nconst app = (\r\n  <BrowserRouter  basename=\"/burger-builder-dev\">\r\n    <App/>\r\n  </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {app}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}