{"version":3,"sources":["components/BurgerIngredients/BurgerIngredients.module.css","components/SideDrawer/SideDrawer.module.css","components/BuildControl/BuildControl.module.css","components/Logo/Logo.module.css","components/NavigationItems/NavigationItems.module.css","components/Burger/Burger.module.css","components/OrderSummary/OrderSummary.module.css","components/Input/Input.module.css","components/Toolbar/Toolbar.module.css","components/NavigationItem/NavigationItem.module.css","components/BuildControls/BuildControls.module.css","components/Button/Button.module.css","containers/Layout/Layout.module.css","assets/icons/burger-logo.png","components/DrawerToggle/DrawerToggle.module.css","components/Backdrop/Backdrop.module.css","components/Modal/Modal.module.css","components/Spinner/Spinner.module.css","components/CheckoutSummary/CheckoutSummary.module.css","containers/ContactData/ContactData.module.css","containers/Auth/Auth.module.css","components/Order/Order.module.css","containers/Wrapper/Wrapper.js","components/Logo/Logo.js","components/NavigationItem/NavigationItem.js","components/NavigationItems/NavigationItems.js","components/DrawerToggle/DrawerToggle.js","components/Toolbar/Toolbar.js","components/Backdrop/Backdrop.js","components/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","axios/orders.js","components/BuildControl/BuildControl.js","components/BuildControls/BuildControls.js","components/Modal/Modal.js","components/Button/Button.js","components/OrderSummary/OrderSummary.js","components/Spinner/Spinner.js","containers/withErrorHandler/withErrorHandler.js","axios/auth.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/buildBurger.js","store/actions/actions.js","components/CheckoutSummary/CheckoutSummary.js","components/Input/Input.js","containers/ContactData/ContactData.js","store/actions/placeOrder.js","containers/Checkout/Checkout.js","containers/Auth/Auth.js","store/actions/authenticate.js","components/Order/Order.js","containers/Orders/Orders.js","store/actions/fetchOrders.js","containers/App/App.js","serviceWorker.js","store/reducers/buildBurger.js","store/reducers/placeOrder.js","store/reducers/fetchOrders.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","tool","Logo__tool","Logo__side","join","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","navClass","side","NavigationItems","NavigationItems__side","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Wrapper","closed","Layout","state","showSideDrawer","sideDrawerClosedHandler","bind","sideDrawerToggleHandler","this","setState","prevState","main","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burgerClasses","Burger","burgerScroll","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","igArray","currentIg","concat","length","burgerP","instance","axios","create","baseURL","control","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","buttonStatus","orderStatus","statusKey","overallStatus","currentButtonStatus","BuildControls","price","toFixed","ingredientAdded","ingredientRemoved","OrderButton","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","modalHeading","orderList","orderP","cancelOrder","continueOrder","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitIngredients","history","push","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","connect","buildBurger","totalPrice","dispatch","ingName","get","then","data","catch","checkoutSummary","CheckoutSummary","width","height","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","valid","touched","Invalid","elementType","elementConfig","name","value","onChange","changed","options","option","displayValue","Input","ContactData","Orderfield","config","validation","orderForm","placeholder","required","street","zipCode","minLength","maxLength","country","email","deliveryMethod","loading","orderHandler","inputChangedHandler","submitScreen","event","updatedOrderForm","updatedFormElement","target","validate","preventDefault","formData","formElement","order","orderData","onOrderBurger","rules","trim","accumulator","currentValue","entries","formElementsArray","id","form","onSubmit","purchased","placeOrder","post","console","log","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","checkoutContinuedHandler","replace","onCheckout","summary","path","match","component","Auth","submitHandler","onAuth","password","authData","returnSecureToken","authSuccess","authFail","amount","ingredientOutput","display","border","padding","Order","marginBottom","Orders","onFetchOrders","orders","fetching","fetchOrders","fetchedOrders","unshift","err","App","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","deepClone","object","JSON","parse","stringify","reducer","action","newStateSet","newStateFail","newStateAdd","newStateRemove","newStateCheckout","newStateSuccess","newStateStart","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.001f7ae4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__3zF01\",\"BreadTop\":\"BurgerIngredients_BreadTop__3sCTY\",\"Seeds1\":\"BurgerIngredients_Seeds1__xKZZ6\",\"Seeds2\":\"BurgerIngredients_Seeds2__Z6pTk\",\"Meat\":\"BurgerIngredients_Meat__3OBSu\",\"Cheese\":\"BurgerIngredients_Cheese__2fKmi\",\"Salad\":\"BurgerIngredients_Salad__Ql7hY\",\"Bacon\":\"BurgerIngredients_Bacon__sHKle\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1VD6N\",\"Open\":\"SideDrawer_Open__3LrRs\",\"Close\":\"SideDrawer_Close__2wOkv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2o153\",\"Label\":\"BuildControl_Label__3QAPB\",\"Less\":\"BuildControl_Less__23Zxr\",\"More\":\"BuildControl_More__3uB6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2uxJp\",\"Logo__side\":\"Logo_Logo__side__11d_m\",\"Logo__tool\":\"Logo_Logo__tool__2paG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2sZVS\",\"NavigationItems__side\":\"NavigationItems_NavigationItems__side__3OQxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2a_kD\",\"burgerP\":\"Burger_burgerP__12kEg\",\"burgerScroll\":\"Burger_burgerScroll__2NZvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderList\":\"OrderSummary_orderList__2CHsg\",\"modalHeading\":\"OrderSummary_modalHeading__119jQ\",\"orderP\":\"OrderSummary_orderP__jEnBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__p21gR\",\"InputElement\":\"Input_InputElement__UBrJ2\",\"Invalid\":\"Input_Invalid__24OEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__8WdYz\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1OCzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__bGPUT\",\"active\":\"NavigationItem_active__1aB3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__ovV3e\",\"OrderButton\":\"BuildControls_OrderButton__1S8U9\",\"enable\":\"BuildControls_enable__3wfMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__qowU_\",\"Success\":\"Button_Success__2obg7\",\"Danger\":\"Button_Danger__2VmjK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2zuhm\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__twHUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3jnYo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3qgHf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__29RnS\",\"lds-facebook\":\"Spinner_lds-facebook__1ps-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__bBdiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2yx8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2Lsa5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2jlGl\"};","\r\n\r\n\r\nconst aux = (props) => {\r\n    return props.children\r\n}\r\n\r\nexport default aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/icons/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className={[classes.Logo, props.tool ? classes.Logo__tool : classes.Logo__side].join(' ') }>\r\n            <img src={burgerLogo} alt=\"brand-logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst navigationItem = (props) =>{\r\n    return(\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink \r\n                to={props.link}\r\n                exact\r\n                activeClassName={classes.active}\r\n            >{props.children}</NavLink>\r\n        </li>\r\n    )\r\n    \r\n}\r\n\r\nexport default navigationItem;\r\n\r\n","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from '../NavigationItem/NavigationItem';\r\n\r\n\r\nconst navigationItems = (props) =>{\r\n\r\n    let navClass = [];\r\n    if(props.side){\r\n        navClass = [classes.NavigationItems, classes.NavigationItems__side].join(' ');\r\n    }else{\r\n        navClass = [classes.NavigationItems]\r\n    }\r\n\r\n    return(\r\n        <ul className={navClass}>\r\n            <NavigationItem link='/'>\r\n                Burger Builder\r\n            </NavigationItem>\r\n\r\n            <NavigationItem link=\"/orders\">\r\n                Orders\r\n            </NavigationItem>\r\n\r\n            <NavigationItem link=\"/auth\">\r\n                Auth\r\n            </NavigationItem>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        // <div onClick={props.clicked}>MENU</div>\r\n        <div onClick={props.clicked} className={classes.DrawerToggle}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'; \r\nimport DrawerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => {\r\n\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n            <Logo tool/>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems/>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default toolbar;\r\n\r\n","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\n\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n    )\r\n}\r\n\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport classes from './SideDrawer.module.css';\r\n\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\n\r\nconst sideDrawer = (props ) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close ];\r\n\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open ];\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <Logo side/>\r\n                <nav>\r\n                    <NavigationItems side/>\r\n                </nav>\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Toolbar/Toolbar'; \r\nimport SideDrawer from '../../components/SideDrawer/SideDrawer';\r\n\r\n\r\nclass Layout extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            showSideDrawer: false\r\n        }\r\n\r\n        this.sideDrawerClosedHandler = this.sideDrawerClosedHandler.bind(this);\r\n        this.sideDrawerToggleHandler = this.sideDrawerToggleHandler.bind(this);\r\n\r\n    }\r\n\r\n\r\n    sideDrawerClosedHandler(){\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler(){\r\n        this.setState((prevState)=>{\r\n            return(\r\n                {showSideDrawer: !prevState.showSideDrawer}\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Wrapper>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.main}>\r\n                {this.props.children}\r\n                </main>\r\n            </Wrapper>\r\n  \r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Layout ;","import React, { Component } from 'react';\r\nimport classes from './BurgerIngredients.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n        let ingredient = null;\r\n\r\n        switch(this.props.type){\r\n            case('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            \r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            \r\n            case('meat'):\r\n                ingredient = <div className={classes.Meat}></div>\r\n                break;\r\n            \r\n            case('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            \r\n            case('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>\r\n                break;\r\n            \r\n            case('salad'):\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            \r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from '../BurgerIngredients/BurgerIngredients';\r\n\r\nconst burgerClasses = [classes.Burger, classes.burgerScroll];\r\nconst burger = (props) =>{\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_,i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        })\r\n    })\r\n    .reduce((igArray,currentIg)=>{\r\n        return igArray.concat(currentIg)\r\n    },[]);\r\n\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients = <p className={classes.burgerP}>Feel free to add ingredients</p>\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className={burgerClasses.join(' ')}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default burger;","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-builder-12ae6.firebaseio.com'\r\n});\r\n\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst control = (props) => {\r\n    return(\r\n        <div className = {classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n\r\n            <button \r\n                className={classes.Less} \r\n                onClick={props.removed}\r\n                disabled={props.disabled}\r\n            >\r\n            Less\r\n            </button>\r\n\r\n            <button \r\n                className={classes.More} \r\n                onClick={props.added}\r\n            >\r\n            More\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default control;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from '../BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\n\r\nconst buildControls = (props) => {\r\n\r\n    const buttonStatus = {...props.disabled}\r\n    const orderStatus = !(Object.keys(buttonStatus).map(statusKey=>{\r\n        return (!buttonStatus[statusKey])\r\n    }).reduce((overallStatus, currentButtonStatus)=>{\r\n        return (overallStatus || currentButtonStatus)\r\n    },false))\r\n\r\n    return (\r\n        <div className={classes.BuildControls}>\r\n            <p>Current price: <strong>${props.price.toFixed(2)}</strong></p>\r\n            {controls.map(control => {\r\n                return (\r\n                <BuildControl \r\n                    key={control.label}\r\n                    label={control.label}\r\n                    added={()=>props.ingredientAdded(control.type)}\r\n                    removed={()=>props.ingredientRemoved(control.type)}\r\n                    disabled={props.disabled[control.type]}\r\n                />\r\n                )\r\n            })}\r\n\r\n\r\n            <button className={classes.OrderButton} disabled={orderStatus} onClick={props.ordered}>ORDER NOW</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component{\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return (nextProps.show !== this.props.show || nextProps.children !== this.props.children)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Wrapper>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => {\r\n    return(\r\n        <button\r\n            className={[classes.Button, classes[props.btnType]].join(' ')}\r\n            onClick={props.clicked}\r\n            type={props.type}\r\n            disabled={props.disabled}\r\n        >\r\n        {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport default button;","import React, {Component} from 'react';\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\nimport classes from './OrderSummary.module.css';\r\nimport Button from '../Button/Button';\r\n\r\n\r\n\r\nclass OrderSummary extends Component{\r\n\r\n    render(){\r\n\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map(igKey => {\r\n            return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform:'capitalize'}}>\r\n                    {igKey}\r\n                </span> : {this.props.ingredients[igKey]}\r\n            </li>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <Wrapper>\r\n                <h3 className={classes.modalHeading}>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients :</p>\r\n                <ul className={classes.orderList}>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p className={classes.orderP}><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.cancelOrder}>Cancel</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.continueOrder}>Continue</Button>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\n\r\n\r\nconst spinner = () => {\r\n    return (\r\n        \r\n        <div className={classes.Loader}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default spinner ;","import React, { Component } from 'react';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return (\r\n        class extends Component{\r\n            constructor(props){\r\n                super(props)\r\n                \r\n                this.state = {\r\n                    error: null\r\n                }\r\n\r\n                this.errorConfirmedHandler = this.errorConfirmedHandler.bind(this);\r\n\r\n            }\r\n\r\n            \r\n            componentWillMount(){\r\n                this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                    this.setState({error: null});\r\n                    return req;\r\n                })\r\n\r\n                this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                    this.setState({error: error});\r\n                })\r\n            }\r\n\r\n            componentWillUnmount(){\r\n                axios.interceptors.request.eject(this.reqInterceptor);\r\n                axios.interceptors.response.eject(this.resInterceptor);\r\n            }\r\n            \r\n\r\n            errorConfirmedHandler(){\r\n                this.setState({error: null})\r\n            }\r\n        \r\n\r\n            render(){\r\n                return(\r\n                <Wrapper>\r\n                   <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                   >\r\n                       {this.state.error ? this.state.error.message : null}\r\n                   </Modal>\r\n                   <WrappedComponent {...this.props}/>\r\n               </Wrapper>\r\n                )\r\n            }\r\n       \r\n\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE'\r\n});\r\n\r\n\r\nexport default instance;","import React, {Component} from 'react';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport axios from '../../axios/orders';\r\nimport BuildControls from '../../components/BuildControls/BuildControls';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport OrderSummary from '../../components/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as buildBurger from '../../store/actions/exports';\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            purchasing: false,\r\n        }\r\n\r\n        this.purchaseHandler = this.purchaseHandler.bind(this);\r\n        this.purchaseCancelHandler = this.purchaseCancelHandler.bind(this);\r\n        this.purchaseContinueHandler = this.purchaseContinueHandler.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.props.onInitIngredients();\r\n    }\r\n    \r\n\r\n    purchaseHandler(){ \r\n        this.setState({purchasing: true})\r\n    }\r\n\r\n    purchaseCancelHandler(){\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n    purchaseContinueHandler(){\r\n        this.props.history.push('/checkout')\r\n\r\n    }\r\n\r\n    render(){\r\n        \r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        }\r\n\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = (disabledInfo[key] <= 0)\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded :(</p> : <Spinner/>\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n                <Wrapper>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.price}\r\n                        ordered={this.purchaseHandler}\r\n                    />\r\n                </Wrapper>\r\n            )\r\n\r\n            orderSummary = (\r\n                <OrderSummary \r\n                    cancelOrder={this.purchaseCancelHandler}\r\n                    ingredients={this.props.ings}\r\n                    continueOrder={this.purchaseContinueHandler}\r\n                    price={this.props.price}\r\n                />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Wrapper>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n\r\n                {burger}\r\n                \r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings : state.buildBurger.ingredients,\r\n        price: state.buildBurger.totalPrice,\r\n        error: state.buildBurger.error\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded : (ingName) => dispatch(buildBurger.addIngredient(ingName)),\r\n        onIngredientRemoved : (ingName) => dispatch(buildBurger.removeIngredient(ingName)),\r\n        onInitIngredients : () => dispatch(buildBurger.initIngredients()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actions.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\n\r\nconst fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actions.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const addIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.ADD_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.REMOVE_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch  => (\r\n       axios.get('/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed())\r\n        })\r\n    )\r\n}","export const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n\r\nexport const CHECKOUT_BURGER = 'CHECKOUT_BURGER';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDER_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDER_FAIL';\r\n\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';","import React from 'react';\r\nimport Burger from '../Burger/Burger'; \r\nimport Button from '../Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h2>We hope it tastes well!</h2>\r\n            <div style={{width: '30rem', height: '30rem', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}\r\n                type=\"button\"\r\n                disabled={false}\r\n                >Cancel</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}\r\n                type=\"button\"\r\n                disabled={false}\r\n                >Continue</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(!props.valid && props.touched){\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch(props.elementType){\r\n        case('input'):\r\n            inputElement = <input \r\n                            className={inputClasses.join(' ')} \r\n                            {...props.elementConfig}\r\n                            name={props.name}\r\n                            value={props.value}\r\n                            onChange={props.changed} />\r\n                            \r\n            break;\r\n\r\n        case('email'):\r\n        inputElement = <input \r\n                        className={inputClasses.join(' ')} \r\n                        {...props.elementConfig}\r\n                        name={props.name}\r\n                        value={props.value}\r\n                        onChange={props.changed} />\r\n                        \r\n        break;\r\n\r\n        case('password'):\r\n        inputElement = <input \r\n                        className={inputClasses.join(' ')} \r\n                        {...props.elementConfig}\r\n                        name={props.name}\r\n                        value={props.value}\r\n                        onChange={props.changed} />\r\n                        \r\n        break;\r\n        \r\n        case('textarea'):\r\n            inputElement = <textarea \r\n                            className={inputClasses.join(' ')} \r\n                            {...props.elementConfig}\r\n                            name={props.name}\r\n                            value={props.value} \r\n                            onChange={props.changed}/>\r\n            break;\r\n\r\n\r\n        case('select'):\r\n        inputElement = <select\r\n                            className={inputClasses.join(' ')} \r\n                            name={props.name}\r\n                            value={props.value}\r\n                            onChange={props.changed}>\r\n                            {props.elementConfig.options.map(option => {\r\n                                return(\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.displayValue}\r\n                                    </option>\r\n                                )\r\n                                \r\n                            })}\r\n                       </select>\r\n            break;\r\n\r\n\r\n        default:\r\n            inputElement = <input \r\n                            className={inputClasses.join(' ')} \r\n                            {...props.elementConfig}\r\n                            name={props.name}\r\n                            value={props.value}\r\n                            onChange={props.changed} />\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            {/* <label className={classes.Label}>{props.label}</label> */}\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default input;","import React, {Component, Fragment} from 'react';\r\nimport Button from '../../components/Button/Button';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport Input from '../../components/Input/Input';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../axios/orders';\r\nimport {connect} from 'react-redux';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/exports';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass ContactData extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        function Orderfield(type,config,validation,value){\r\n            \r\n                this.touched = false;\r\n                this.elementType = type;\r\n                this.elementConfig = config;\r\n                this.validation = validation;   \r\n                this.value = value;\r\n                \r\n        }\r\n\r\n        const zipCodeValidation = {\r\n            required:true,\r\n            minLength: 5,\r\n            maxLength: 5,\r\n            valid:false\r\n        }\r\n\r\n        const deliveryConfig = {\r\n            options:[\r\n                {value: 'fastest', displayValue:'Fastest'},\r\n                {value: 'cheapest',displayValue:'Cheapest'}\r\n            ]\r\n        }\r\n\r\n        this.state = {\r\n            orderForm: {\r\n                name: new Orderfield('input',{type:'text', placeholder:'Your Name'},{required:true,valid:false},''),\r\n                street: new Orderfield('input',{type:'text', placeholder:'Street'},{required:true,valid:false},''),\r\n                zipCode: new Orderfield('input',{type:'text', placeholder:'ZIP Code'}, zipCodeValidation,''),\r\n                country: new Orderfield('input',{type:'text', placeholder:'Country'},{required:true,valid:false},''),\r\n                email: new Orderfield('email',{type:'email', placeholder:'Email'},{required:true,valid:false},''),\r\n                deliveryMethod:new Orderfield('select',deliveryConfig,{required:true,valid:true},'fastest')   \r\n            },\r\n            loading: false\r\n        }\r\n        \r\n\r\n       \r\n\r\n        this.orderHandler = this.orderHandler.bind(this);\r\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\r\n        this.submitScreen = this.submitScreen.bind(this);\r\n\r\n    }\r\n    \r\n\r\n\r\n    inputChangedHandler(event){\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[event.target.name]\r\n        }\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.validation.valid = this.validate(updatedFormElement.value,updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[event.target.name] = updatedFormElement; \r\n        this.setState({orderForm: updatedOrderForm});\r\n    }\r\n\r\n    orderHandler(event){\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElement in this.state.orderForm){\r\n            formData[formElement] = this.state.orderForm[formElement].value;\r\n        }\r\n    \r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price.toFixed(2),\r\n            orderData: formData\r\n        }\r\n\r\n        this.props.onOrderBurger(order)\r\n    }\r\n\r\n    validate(value,rules){\r\n\r\n        const isValid = [\r\n            rules.required? (value.trim() !== '') : true,\r\n            rules.minLength? (value.length >= rules.minLength) : true,\r\n            rules.maxLength? (value.length <= rules.maxLength) : true \r\n        ].reduce((accumulator,currentValue) => accumulator && currentValue)\r\n\r\n        return isValid\r\n    }\r\n\r\n    submitScreen(){\r\n        const entries = {\r\n            ...this.state.orderForm\r\n        }\r\n\r\n        const validation = [\r\n            ...Object.keys(entries)\r\n            ].map(key => {\r\n                return entries[key].validation.valid\r\n            }).reduce((accumulator,currentValue) => {\r\n                return accumulator && currentValue\r\n            })\r\n        \r\n        return validation;\r\n    }\r\n \r\n    render(){\r\n        \r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n            });\r\n\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                    {formElementsArray.map(formElement => {\r\n                        return (\r\n                            <Input \r\n                                key={formElement.id}\r\n                                elementType={formElement.config.elementType}\r\n                                elementConfig={formElement.config.elementConfig}\r\n                                name={formElement.id}\r\n                                value={formElement.config.value}\r\n                                changed={this.inputChangedHandler}\r\n                                valid={formElement.config.validation.valid}\r\n                                touched={formElement.config.touched}\r\n                                />\r\n                        )\r\n                    })}\r\n                    <Button type='submit' btnType=\"Success\" clicked={this.orderHandler} disabled={!this.submitScreen()}>ORDER</Button>\r\n            </form>\r\n        );\r\n\r\n        if(this.props.loading){\r\n            form = <Spinner/>\r\n        }\r\n\r\n        return(\r\n            <Fragment>\r\n                {this.props.purchased ? <Redirect to=\"/\"/> : null }\r\n                <div className={classes.ContactData}>\r\n                    <h4>Enter your contact data</h4>\r\n                    {form}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.buildBurger.ingredients,\r\n        price: state.buildBurger.totalPrice,\r\n        loading: state.placeOrder.loading,\r\n        purchased: state.placeOrder.purchased\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n     onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData, axios));","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\n\r\nconst purchaseBurgerStart = () => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_SUCCESS,\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const checkoutBurger = () => {\r\n    return {\r\n        type: actions.CHECKOUT_BURGER\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart())\r\n\r\n        axios.post('/orders.json',orderData)\r\n        .then(response => {\r\n            console.log('post response---',response)\r\n            dispatch(purchaseBurgerSuccess())\r\n        })\r\n        .catch(error => {\r\n            dispatch(purchaseBurgerFail(error))\r\n        })\r\n    }\r\n}","import React, {Component, Fragment} from 'react';\r\nimport CheckoutSummary from '../../components/CheckoutSummary/CheckoutSummary';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport ContactData from '../ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports';\r\n\r\nclass Checkout extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n     \r\n        this.checkoutCancelledHandler = this.checkoutCancelledHandler.bind(this);\r\n        this.checkoutContinuedHandler = this.checkoutContinuedHandler.bind(this);\r\n    }\r\n\r\n\r\n\r\n    checkoutCancelledHandler(){\r\n        this.props.history.replace('/');\r\n    }\r\n\r\n    checkoutContinuedHandler(){\r\n        this.props.onCheckout()\r\n        this.props.history.replace('/checkout/contact-data')\r\n    }\r\n\r\n    render(){\r\n        let summary = <Redirect to =\"/\"/>\r\n        if(this.props.ings){\r\n            summary  = <Fragment><CheckoutSummary \r\n                            ingredients={this.props.ings}\r\n                            checkoutCancelled={this.checkoutCancelledHandler}\r\n                            checkoutContinued={this.checkoutContinuedHandler}\r\n                        />\r\n                        <Route \r\n                            path={this.props.match.path + '/contact-data'} \r\n                            component={ContactData}\r\n                        /></Fragment>\r\n                                    \r\n                       \r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {summary}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.buildBurger.ingredients,\r\n        purchased: state.placeOrder.purchased\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n    return {\r\n        onCheckout: () => dispatch(actions.checkoutBurger())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchtoProps)(Checkout);","import React, {Component} from 'react';\r\nimport Button from '../../components/Button/Button';\r\nimport Input from '../../components/Input/Input';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/exports';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Auth extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        function Orderfield(type,config,validation,value){\r\n            \r\n                this.touched = false;\r\n                this.elementType = type;\r\n                this.elementConfig = config;\r\n                this.validation = validation;   \r\n                this.value = value;\r\n                \r\n        }\r\n\r\n        const passwordValidation = {\r\n            required:true,\r\n            minLength: 6,\r\n            valid:false\r\n        }\r\n\r\n    \r\n        this.state = {\r\n            orderForm: {\r\n                email: new Orderfield('email',{type:'email', placeholder:'Email'},{required:true,valid:false},''),\r\n                password: new Orderfield('password',{type:'password', placeholder:'Password'},passwordValidation,'')\r\n            }\r\n        }\r\n        \r\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\r\n        this.submitScreen = this.submitScreen.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n\r\n    }\r\n    \r\n    inputChangedHandler(event){\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[event.target.name]\r\n        }\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.validation.valid = this.validate(updatedFormElement.value,updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[event.target.name] = updatedFormElement; \r\n        this.setState({orderForm: updatedOrderForm});\r\n    }\r\n\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.orderForm.email.value,this.state.orderForm.password.value)\r\n    }\r\n\r\n    validate(value,rules){\r\n\r\n        const isValid = [\r\n            rules.required? (value.trim() !== '') : true,\r\n            rules.minLength? (value.length >= rules.minLength) : true,\r\n            rules.maxLength? (value.length <= rules.maxLength) : true \r\n        ].reduce((accumulator,currentValue) => accumulator && currentValue)\r\n\r\n        return isValid\r\n    }\r\n\r\n    submitScreen(){\r\n        const entries = {\r\n            ...this.state.orderForm\r\n        }\r\n\r\n        const validation = [\r\n            ...Object.keys(entries)\r\n            ].map(key => {\r\n                return entries[key].validation.valid\r\n            }).reduce((accumulator,currentValue) => {\r\n                return accumulator && currentValue\r\n            })\r\n        \r\n        return validation;\r\n    }\r\n \r\n    render(){\r\n\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n            });\r\n\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.submitHandler}>\r\n                    {formElementsArray.map(formElement => {\r\n                        return (\r\n                            <Input \r\n                                key={formElement.id}\r\n                                elementType={formElement.config.elementType}\r\n                                elementConfig={formElement.config.elementConfig}\r\n                                name={formElement.id}\r\n                                value={formElement.config.value}\r\n                                changed={this.inputChangedHandler}\r\n                                valid={formElement.config.validation.valid}\r\n                                touched={formElement.config.touched}\r\n                                />\r\n                        )\r\n                    })}\r\n                    <Button type='submit' btnType=\"Success\" clicked={this.orderHandler} disabled={!this.submitScreen()}>SUBMIT</Button>\r\n            </form>\r\n        );\r\n\r\n\r\n        return(\r\n\r\n                <div className={classes.Auth}>\r\n                    <h4>Enter your login info</h4>\r\n                    {form}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email,password) => dispatch(actions.auth(email,password))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(Auth);","import * as actions from './actions';\r\nimport axios from '../../axios/auth';\r\n\r\nconst authStart = () => {\r\n    return {\r\n        type: actions.AUTH_START\r\n    }\r\n}\r\n\r\n\r\nconst authSuccess = (authData) => {\r\n    return {\r\n        type: actions.AUTH_SUCCESS,\r\n        authData: authData\r\n    }\r\n}\r\n\r\n\r\nconst authFail = (error) => {\r\n    return {\r\n        type: actions.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\n//exports\r\nexport const auth = (email,password) =>{\r\n    return dispatch => {\r\n        dispatch(authStart())\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        console.log(authData)\r\n    \r\n        axios.post('',authData)\r\n            .then(response => {\r\n                console.log(response)\r\n                dispatch(authSuccess(response.data))\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                dispatch(authFail(error))\r\n            })\r\n    }\r\n}","import React from 'react';\r\nimport classes from './Order.module.css'\r\n\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredient in props.ingredients){\r\n        ingredients.push({\r\n                name: ingredient,\r\n                amount: props.ingredients[ingredient]\r\n            }\r\n        )\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ingredient => {\r\n        return <span \r\n            key={ingredient.name}\r\n            style={{\r\n                textTransform: \"capitalize\",\r\n                display: 'inline-block',\r\n                margin: '0 .8rem',\r\n                border: '1px solid gray',\r\n                padding: '0.5rem'\r\n            }}\r\n            >{ingredient.name} : {ingredient.amount} </span>\r\n    })\r\n\r\n    return(\r\n        <div className={classes.Order}>\r\n            <p style={{marginBottom: '1.2rem'}}>Ingredients: {ingredientOutput}</p>\r\n            <p>Price : <strong>$ {props.price}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order;","import React, {Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios/orders';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nclass Orders extends Component{\r\n  \r\n    componentDidMount(){\r\n        this.props.onFetchOrders()\r\n    }\r\n\r\n    render(){\r\n        let orders = <Spinner/>;\r\n        if (!this.props.fetching){\r\n            orders = this.props.orders.map(order => {\r\n                        return (\r\n                            <Order \r\n                                key={order.id}\r\n                                ingredients={order.ingredients}\r\n                                price={order.price}\r\n                            />\r\n                        )\r\n                    }) \r\n        }\r\n        return(\r\n          <div>\r\n              {orders}\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.fetchOrders.orders,\r\n        loading: state.fetchOrders.fetching\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchOrders: () => dispatch(actions.fetchOrders())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\nconst fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\n\r\nconst fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nconst fetchOrdersStart = () => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart())\r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                console.log(res)\r\n                const fetchedOrders = [];\r\n                for (let key in res.data){\r\n                    fetchedOrders.unshift({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                console.log(fetchedOrders)\r\n                dispatch(fetchOrdersSuccess(fetchedOrders))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err))\r\n            })\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Layout from '../Layout/Layout';\r\nimport BurgerBuilder from '../BurgerBuilder/BurgerBuilder';\r\nimport Checkout from '../Checkout/Checkout';\r\nimport Auth from '../Auth/Auth';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Orders from '../Orders/Orders';\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return(\r\n      <Layout>\r\n          <Switch>\r\n            <Route path=\"/checkout\" component={Checkout}/>\r\n            <Route path=\"/orders\" component={Orders}/>\r\n            <Route path=\"/auth\" component={Auth}/>\r\n            <Route path=\"/\" exact component={BurgerBuilder}/>\r\n\r\n            {/* <BurgerBuilder/> */}\r\n            {/* <Checkout/> */}\r\n          </Switch>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n}\r\n\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n\r\n        case actions.SET_INGREDIENTS:\r\n            const newStateSet = deepClone(state);\r\n            if(!newStateSet.ingredients){\r\n                newStateSet.ingredients = {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat\r\n                    }\r\n\r\n                newStateSet.error = false;\r\n                newStateSet.purchasing = false;\r\n                return newStateSet\r\n\r\n            } else {\r\n                newStateSet.error = false;\r\n                return newStateSet\r\n            }\r\n              \r\n        \r\n        case actions.FETCH_INGREDIENTS_FAILED:\r\n            const newStateFail = deepClone(state)\r\n            newStateFail.error = true;\r\n            return newStateFail;       \r\n        case actions.ADD_INGREDIENT:\r\n            const newStateAdd = deepClone(state);\r\n            newStateAdd.ingredients[action.ingredient] ++;  \r\n            newStateAdd.totalPrice += INGREDIENT_PRICES[action.ingredient];\r\n\r\n            return newStateAdd;\r\n\r\n        case actions.REMOVE_INGREDIENT:\r\n            const newStateRemove = deepClone(state);\r\n            newStateRemove.ingredients[action.ingredient] --;   \r\n            newStateRemove.totalPrice -= INGREDIENT_PRICES[action.ingredient];        \r\n            return newStateRemove;\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case actions.CHECKOUT_BURGER: \r\n            const newStateCheckout = deepClone(state);\r\n            newStateCheckout.purchased = false\r\n            return newStateCheckout\r\n\r\n        case actions.PURCHASE_BURGER_SUCCESS:\r\n            const newStateSuccess = deepClone(state);\r\n            newStateSuccess.loading = false;\r\n            newStateSuccess.purchased = true;\r\n            return newStateSuccess\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_FAIL:\r\n            const newStateFail = deepClone(state);\r\n            newStateFail.loading = false;\r\n            return newStateFail\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_START:\r\n            const newStateStart = deepClone(state);\r\n            newStateStart.loading = true;\r\n            return newStateStart;\r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    fetching: false,\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        \r\n        case actions.FETCH_ORDERS_START:\r\n            const newStateStart = deepClone(state);\r\n            newStateStart.fetching = true;\r\n            return newStateStart;\r\n\r\n\r\n        case actions.FETCH_ORDERS_SUCCESS:\r\n            const newStateSuccess = deepClone(state);\r\n            newStateSuccess.orders = action.orders;\r\n            newStateSuccess.fetching = false;\r\n            return newStateSuccess\r\n\r\n        \r\n        case actions.FETCH_ORDERS_FAIL:\r\n            const newStateFail = deepClone(state);\r\n            newStateFail.fetching = false;\r\n            return newStateFail\r\n\r\n        \r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/index.css';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, combineReducers, compose} from 'redux';\r\n// import reducer from './store/reducer';\r\nimport buildBurger from './store/reducers/buildBurger'\r\nimport placeOrder from './store/reducers/placeOrder'\r\nimport fetchOrders from './store/reducers/fetchOrders'\r\nimport thunk from 'redux-thunk';\r\n\r\n//Basic redux setup\r\n// const store = createStore(burgerBuilderReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  buildBurger: buildBurger,\r\n  placeOrder: placeOrder,\r\n  fetchOrders: fetchOrders\r\n})\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n      applyMiddleware(thunk)\r\n    ));\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter  basename=\"/burger-builder-dev\">\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {app}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}