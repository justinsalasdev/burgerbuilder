{"version":3,"sources":["store/actions/actions.js","recycle/Spinner/Spinner.js","store/actions/login.js","store/actions/buildBurger.js","store/actions/placeOrder.js","store/actions/fetchOrders.js","store/actions/signup.js","store/actions/updateProfile.js","recycle/Backdrop/Backdrop.js","recycle/Alert/Alert.js","hooks/useAlert.js","containers/BurgerIngredient/BurgerIngredient.js","containers/Burger/Burger.js","containers/Logo/Logo.js","containers/NavigationItems/NavigationItems.js","containers/DrawerToggle/DrawerToggle.js","containers/Toolbar/Toolbar.js","containers/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","containers/BuildControl/BuildControl.js","containers/BuildControls/BuildControls.js","containers/OrderPrompt/OrderPrompt.js","containers/BurgerBuilder/BurgerBuilder.js","containers/App/App.js","serviceWorker.js","store/reducers/buildBurger.js","store/reducers/placeOrder.js","store/reducers/fetchOrders.js","store/reducers/login.js","store/reducers/signup.js","store/reducers/updateProfile.js","index.js"],"names":["SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","ADD_INGREDIENT","REMOVE_INGREDIENT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","LOGIN_START","LOGIN_STORE","PROFILE_STORE","PROFILE_FAIL","LOGIN_FAIL","LOGOUT","SIGNUP_START","SIGNUP_END","SIGNUP_CONFLICT","PROFILE_EDIT_START","PROFILE_SAVE_START","PROFILE_SAVE_END","PROFILE_SAVE_FAILED","PROFILE_EDIT_END","Spinner","className","logoutTimer","addIngredient","ingredient","type","actions","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","error","errorMessage","catch","alert","notifyFailure","checkOutMessage","purchaseBurger","orderData","idToken","showAlert","endPoint","post","fetchOrders","token","userId","queryParams","res","orders","fetchedOrders","key","unshift","id","err","storeLoginData","setLogoutTimer","expiration","setTimeout","logout","storeUserData","userData","handleLoginFailure","clearTimeout","localStorage","removeItem","refreshAuth","localToken","expirationDate","Date","getItem","JSON","parse","expiry","getTime","login","loginData","returnSecureToken","localId","expiresIn","getUserData","setItem","Object","assign","stringify","conflictMessage","message","handleLoginConflict","endSignup","endType","signup","formData","email","password","name","country","zipCode","contactNumber","signUpData","postSignupData","console","log","postUserData","deleteSignupData","handleSignupConflict","startEdit","handleSaveFail","endEdit","updateProfile","history","config","method","headers","params","auth","updatedUserData","replace","Backdrop","props","clicked","onClick","Alert","closeAlert","children","useAlert","initialState","useState","BurgerIngredient","burger","transformedIngredients","keys","map","igKey","Array","_","i","reduce","igArray","currentIg","concat","length","Logo","NavigationItems","closeSideDrawer","useDispatch","useHistory","isAuthenticated","useSelector","state","to","exact","activeClassName","href","e","preventDefault","drawerToggle","toggleSideDrawer","Toolbar","DrawerToggle","SideDrawer","sideDrawerOpen","side","Layout","showSideDrawer","control","label","disabled","controls","BuildControls","startOrder","price","buttonStatus","orderStatus","statusKey","overallStatus","currentButtonStatus","BuildControl","OrderPrompt","cancelOrder","goToLogin","BurgerBuilder","alertShown","buildBurger","totalPrice","toFixed","useEffect","disabledInfo","push","Burger","ingName","style","color","Checkout","React","lazy","Orders","Login","Signup","EditProfile","StaticProfile","App","reduxToken","fallback","path","component","routes","Boolean","window","location","hostname","match","INGREDIENT_PRICES","salad","cheese","meat","bacon","deepClone","object","reducer","action","purchasing","loading","purchased","fetching","editing","composeEnhancers","compose","rootReducer","combineReducers","placeOrder","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a48048c.chunk.js","sourcesContent":["export const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDER_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDER_FAIL';\r\n\r\n\r\n//login------------------------------------------\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_STORE = 'LOGIN_STORE';\r\nexport const PROFILE_STORE = 'PROFILE_STORE';\r\nexport const LOGIN_END = 'LOGIN_END'\r\nexport const PROFILE_FAIL = 'PROFILE_FAIL';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const LOGIN_BROKE = 'LOGIN_BROKE';\r\n\r\n\r\n\r\n\r\nexport const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_END = 'SIGNUP_END';\r\nexport const SIGNUP_CONFLICT = 'SIGNUP_CONFLICT';\r\n\r\n\r\nexport const PROFILE_EDIT_START = 'PROFILE_EDIT';\r\nexport const PROFILE_SAVE_START = 'PROFILE_START_SAVE';\r\nexport const PROFILE_SAVE_END = 'PROFILE_STARTEND';\r\nexport const PROFILE_SAVE_FAILED = 'PROFILE_SAVE_FAILED';\r\nexport const PROFILE_EDIT_END = 'PROFILE_EDIT_END';\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './spinner.scss'\r\n\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='spinner'>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Spinner ;","import * as actions from './actions';\r\nimport axios from 'axios';\r\n\r\n\r\n//-------------------------------------------------------\r\nconst startLogin = () => {\r\n    return {\r\n        type: actions.LOGIN_START\r\n    }\r\n}\r\n\r\nconst storeLoginData = (idToken,userId) => {\r\n    return {\r\n        type: actions.LOGIN_STORE,\r\n        idToken,\r\n        userId\r\n    }\r\n}\r\n\r\nvar logoutTimer;\r\nconst setLogoutTimer = (expiration) => {\r\n    return dispatch => {\r\n        logoutTimer = setTimeout(() => {\r\n            dispatch(logout())\r\n        },expiration*1000)\r\n    } \r\n}\r\n\r\nexport const getUserData = (idToken, userId) => {\r\n    const queryParams = `?auth=${idToken}&orderBy=\"userId\"&equalTo=\"${userId}\"`\r\n    const endPoint = `https://react-burger-builder-12ae6.firebaseio.com/users.json${queryParams}`\r\n    return axios.get(endPoint)\r\n}\r\n\r\nexport const storeUserData = (userData) => {\r\n    return {\r\n        type: actions.PROFILE_STORE,\r\n        userData\r\n    }\r\n}\r\n\r\n\r\nconst handleLoginFailure = (errorMessage) => {\r\n    return {\r\n        type: actions.PROFILE_FAIL,\r\n        errorMessage\r\n    }\r\n}\r\n\r\nconst handleLoginConflict = (conflictMessage) => {\r\n    return {\r\n        type: actions.LOGIN_FAIL,\r\n        conflictMessage\r\n    }\r\n}\r\n\r\n\r\n//--------------------------------------------------------------------------------------\r\n\r\n//exports\r\nexport const logout = () => {\r\n    clearTimeout(logoutTimer)\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('userData')\r\n    return {\r\n        type: actions.LOGOUT\r\n    }\r\n};\r\n\r\n\r\nexport const  refreshAuth = (localToken) => {\r\n    return dispatch => {\r\n        if(!localToken){\r\n            return\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if (expirationDate <= new Date()){\r\n\r\n                dispatch(logout());\r\n\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                const userData = JSON.parse(localStorage.getItem('userData'))\r\n                const expiry = (expirationDate.getTime() - new Date().getTime())/1000;\r\n\r\n                dispatch(storeUserData(userData))\r\n                dispatch(storeLoginData(localToken,userId))\r\n                dispatch(setLogoutTimer(expiry))\r\n                \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\nexport const login = (loginData,showAlert) =>{\r\n    let userId = null;\r\n    let idToken = null;\r\n    let expiry = null;\r\n\r\n    return dispatch => {\r\n        dispatch(startLogin())\r\n        \r\n        const apiKey = 'AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE';\r\n        const endPoint = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`\r\n\r\n        axios.post(endPoint, {...loginData,returnSecureToken: true})\r\n            .then( //user is authenticated but defer saving of credentials until userData is retrieved\r\n                response => {\r\n\r\n                    userId = response.data.localId\r\n                    idToken = response.data.idToken\r\n                    expiry = response.data.expiresIn\r\n                   \r\n                    getUserData(idToken,userId)\r\n                        .then( //userData is retrieved --> may not save login credentials\r\n                            response => {\r\n\r\n                                const expirationDate = new Date( new Date().getTime() + new Date(expiry*1000).getTime())\r\n\r\n                                localStorage.setItem('token',idToken)\r\n                                localStorage.setItem('expirationDate',expirationDate)\r\n                                localStorage.setItem('userId',userId)\r\n\r\n                                const userData = {};\r\n                                for (const id in response.data){\r\n                                    Object.assign(userData,{...response.data[id], id:id})\r\n                                }\r\n                                localStorage.setItem('userData',JSON.stringify(userData))\r\n                                dispatch(storeLoginData(idToken,userId))\r\n                                dispatch(setLogoutTimer(expiry))\r\n                                dispatch(storeUserData(userData))\r\n\r\n                            },\r\n                            () => {\r\n                                dispatch(handleLoginFailure(\"Failed to login due to some errors :(\"))\r\n                                showAlert(true)\r\n                            }\r\n                        )\r\n                },\r\n                error => {\r\n                    const conflictMessage = error.response.data.error.message\r\n                    dispatch(handleLoginConflict(conflictMessage))\r\n                }) \r\n                .catch(() => {\r\n                    dispatch(handleLoginFailure(\"Network Error! Failed to login :(\"))\r\n                    showAlert(true)\r\n                })\r\n    }\r\n}","import * as actions from './actions';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actions.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nconst fetchIngredientsFailed = (errorMessage) => {\r\n    return {\r\n        type: actions.FETCH_INGREDIENTS_FAILED,\r\n        errorMessage\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const addIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.ADD_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.REMOVE_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch  => (\r\n       axios.get('https://react-burger-builder-12ae6.firebaseio.com/ingredients.json')\r\n        .then(\r\n            response => {\r\n                dispatch(setIngredients(response.data))\r\n            },\r\n            error => {\r\n                dispatch(fetchIngredientsFailed(\"Can't initialize burger builder app :(\"))\r\n            }\r\n        )\r\n        .catch(error => {\r\n            alert(error)\r\n        })\r\n    )\r\n}","import * as actions from './actions';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nconst startPurchase = () => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\n\r\nconst notifySuccess = (checkOutMessage) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_SUCCESS,\r\n        checkOutMessage\r\n    }\r\n}\r\n\r\n\r\nconst notifyFailure = (checkOutMessage) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_FAIL,\r\n        checkOutMessage\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData,idToken,showAlert) => {\r\n    return dispatch => {\r\n\r\n        const endPoint = 'https://react-burger-builder-12ae6.firebaseio.com/orders.json?auth=' + idToken\r\n        \r\n        dispatch(startPurchase())\r\n        axios.post(endPoint, orderData)\r\n        .then(\r\n            () => {\r\n                dispatch(notifySuccess('Thank you for purchasing!'))\r\n                showAlert(true)\r\n            },\r\n            () => {\r\n                dispatch(notifyFailure('Failed to place your order :( Please try again'))\r\n                showAlert(true)\r\n            }\r\n        )\r\n        .catch(() => {\r\n            dispatch(notifyFailure('Network Error! Failed to place your order :('))\r\n        })\r\n    }\r\n}","import * as actions from './actions';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\n\r\nconst fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nconst fetchOrdersStart = () => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const fetchOrders = (token,userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart())\r\n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\r\n        axios.get(`https://react-burger-builder-12ae6.firebaseio.com/orders.json${queryParams}`)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data){\r\n                    fetchedOrders.unshift({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err))\r\n            })\r\n    }\r\n}","import * as actions from './actions';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst startSignup = () => {\r\n    return {\r\n        type: actions.SIGNUP_START\r\n    }\r\n    \r\n}\r\nconst endSignup = (endType) => {\r\n    return {\r\n        type: actions.SIGNUP_END,\r\n        endType\r\n    }\r\n}\r\n \r\nconst handleSignupConflict = (conflictMessage) => {\r\n    return {\r\n        type: actions.SIGNUP_CONFLICT,\r\n        conflictMessage\r\n    }\r\n}\r\n\r\nconst apiKey = 'AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE';\r\nconst postUserData = (userData,idToken) => {\r\n    const queryParams = `?auth=${idToken}`\r\n    return axios.post(`https://react-burger-builder-12ae6.firebaseio.com/users.json${queryParams}`, userData)\r\n}\r\n\r\nconst postSignupData = (signUpData) => {\r\n    const endPoint = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`\r\n    return axios.post(endPoint, {...signUpData, returnSecureToken: true})\r\n}\r\n    \r\nconst deleteSignupData = (idToken) => {\r\n    const endPoint = `https://identitytoolkit.googleapis.com/v1/accounts:delete?key=${apiKey}`\r\n    return axios.post(endPoint, {idToken})\r\n}\r\n\r\n//exports\r\nexport const signup = (formData,showAlert) => {\r\n    const {\r\n        email,\r\n        password,\r\n        name,\r\n        country,\r\n        zipCode,\r\n        contactNumber,\r\n    } = formData\r\n\r\n    let token = null;\r\n    const signUpData = {email,password};\r\n    const userData = {name,country,zipCode,contactNumber};\r\n     \r\n    return dispatch => {\r\n\r\n        dispatch(startSignup())\r\n        \r\n        postSignupData(signUpData)\r\n            .then(\r\n                response => {\r\n                    console.log(response)\r\n                    const idToken = response.data.idToken;\r\n                    const userId = response.data.localId;\r\n                    token = idToken;\r\n\r\n                    postUserData({...userData, userId},idToken)\r\n                        .then(\r\n                            () => {dispatch(endSignup('userSaved'));showAlert(true);},\r\n                            error => {\r\n                                console.log(error.response.data.error)\r\n                                deleteSignupData(token)\r\n                                    .then(\r\n                                        () => {dispatch(endSignup('signupFailed')); showAlert(true)},\r\n                                        () => {dispatch(endSignup('userNotSaved')); showAlert(true)}\r\n                                    )\r\n                            }   \r\n                        )\r\n                },\r\n                error => {\r\n                    const conflictMessage = error.response.data.error.message\r\n                    dispatch(handleSignupConflict(conflictMessage))\r\n                }\r\n            )\r\n            .catch(() => {dispatch(endSignup('signupFailed')); showAlert(true)})\r\n    }\r\n}\r\n\r\n    \r\n\r\n       ","import * as actions from './actions';\r\nimport {storeUserData} from './login';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const startEdit = () => {\r\n    return {\r\n        type: actions.PROFILE_EDIT_START\r\n    }\r\n    \r\n}\r\n\r\nconst startSavingProfile = () => {\r\n    return {\r\n        type: actions.PROFILE_SAVE_START\r\n    }\r\n}\r\n\r\nconst endSavingProfile = () => {\r\n    return {\r\n        type: actions.PROFILE_SAVE_END\r\n    }\r\n}\r\n\r\nexport const handleSaveFail = (errorMessage) => {\r\n    return {\r\n        type: actions.PROFILE_SAVE_FAILED,\r\n        errorMessage\r\n    }\r\n}\r\n\r\n\r\nexport const endEdit = () => {\r\n    return {\r\n        type: actions.PROFILE_EDIT_END\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const updateProfile = (formData,id,userId,idToken,showAlert,history) => {\r\n    \r\n    const config = {\r\n        method: 'post',\r\n        headers:{\r\n            'X-HTTP-Method-Override':'PATCH'\r\n        },\r\n        params: {\r\n            auth: idToken,\r\n\r\n        }\r\n    }\r\n    const endPoint = `https://react-burger-builder-12ae6.firebaseio.com/users/${id}.json`;\r\n\r\n    return dispatch => {\r\n        dispatch(startSavingProfile())\r\n        axios.post(endPoint,formData,config)\r\n            .then(\r\n                response => {\r\n                    const updatedUserData = {...response.data,userId:userId,id:id}\r\n                    console.log(updatedUserData)\r\n                    localStorage.setItem('userData', JSON.stringify(updatedUserData))\r\n                    dispatch(storeUserData(response.data))\r\n                    dispatch(endSavingProfile())\r\n                    history.replace('/profile')\r\n                },\r\n                () => {\r\n                    dispatch(handleSaveFail('Failed to save changes'))\r\n                    showAlert(true);\r\n                }\r\n            )\r\n            .catch(() => {\r\n                dispatch(handleSaveFail('Failed to save changes'))\r\n                    showAlert(true);\r\n            })\r\n    }\r\n}\r\n\r\n    \r\n\r\n       ","import React from 'react';\r\nimport './backdrop.scss';\r\n\r\n\r\n\r\nconst Backdrop = (props) => {\r\n    const {clicked} = props;\r\n    return (\r\n        <div className='backdrop' onClick={clicked}></div>\r\n    )\r\n}\r\n\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport './alert.scss';\r\nimport Backdrop from '../../recycle/Backdrop/Backdrop';\r\n\r\n\r\nconst Alert = props => {\r\n\r\n    const {closeAlert} = props;\r\n\r\n    return(\r\n        <>\r\n            <Backdrop clicked={closeAlert}/>\r\n            <div className='alert'>\r\n                {props.children}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Alert;","import {useState} from 'react';\r\n\r\nconst useAlert = (initialState) => {\r\n    const [alertShown,showAlert] = useState(initialState);\r\n    return [alertShown,showAlert]\r\n}\r\n\r\nexport default useAlert;","import React from 'react';\r\nimport './burger-ingredient.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BurgerIngredient = props => {\r\n    let ingredient = null;\r\n\r\n        switch(props.type){\r\n            case('bread-bottom'):\r\n                ingredient = <div className='bread-bottom'></div>;\r\n                break;\r\n            \r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className='bread-top'>\r\n                        <div className='seeds1'></div>\r\n                        <div className='seeds2'></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            \r\n            case('meat'):\r\n                ingredient = <div className='meat'></div>\r\n                break;\r\n            \r\n            case('cheese'):\r\n                ingredient = <div className='cheese'></div>\r\n                break;\r\n            \r\n            case('bacon'):\r\n                ingredient = <div className='bacon'></div>\r\n                break;\r\n            \r\n            case('salad'):\r\n                ingredient = <div className='salad'></div>\r\n                break;\r\n            \r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n}\r\n\r\n\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport './burger.scss';\r\nimport '../../recycle/Scrollbar/scrollbar.scss';\r\nimport BurgerIngredient from '../BurgerIngredient/BurgerIngredient';\r\n\r\n\r\nconst burger = (props) =>{\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_,i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        })\r\n    })\r\n    .reduce((igArray,currentIg)=>{\r\n        return igArray.concat(currentIg)\r\n    },[]);\r\n\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients = <p className='burger__instruction'>FEEL FREE TO ADD INGREDIENTS</p>\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className='burger scrollbar'>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default burger;","import React from 'react';\r\nimport './logo.scss';\r\n\r\nconst Logo = (props) => {\r\n    return (\r\n        <div className='logo'></div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React  from 'react';\r\nimport './navigationitems.scss'\r\nimport '../../recycle/Link/link.scss'\r\nimport {NavLink,useHistory} from 'react-router-dom';\r\n// import NavigationItem from '../NavigationItem/NavigationItem';\r\nimport * as actions from '../../store/actions/exports';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\n\r\n\r\nconst NavigationItems = (props) =>{\r\n    const {closeSideDrawer} = props;\r\n    \r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const idToken = useSelector(state => state.login.idToken);\r\n    const isAuthenticated = idToken !== null;\r\n\r\n    return(\r\n        <ul className='navigation-items'  onClick={closeSideDrawer}>\r\n            \r\n            <li className={'navigation-item'}>\r\n                <NavLink \r\n                    to='/'\r\n                    exact\r\n                    className='link--nav'\r\n                    activeClassName={'active'}\r\n                >Burger Builder</NavLink>\r\n            </li>\r\n\r\n            {!isAuthenticated ? null:\r\n            <li className={'navigation-item'}>\r\n                <NavLink \r\n                    to='/profile'\r\n                    exact\r\n                    className='link--nav'\r\n                    activeClassName={'active'}\r\n                >Profile</NavLink>\r\n            </li>}\r\n\r\n              \r\n            {!isAuthenticated? null:\r\n            <li className={'navigation-item'}>\r\n                <NavLink \r\n                    to='/orders'\r\n                    exact\r\n                    className='link--nav'\r\n                    activeClassName={'active'}\r\n                >Orders</NavLink>\r\n            </li>}\r\n\r\n            {isAuthenticated ? null:\r\n            <li className={'navigation-item'}>\r\n                <NavLink \r\n                    to={'/login'}\r\n                    exact\r\n                    className='link--nav'\r\n                    activeClassName={'active'}\r\n                >Login</NavLink>\r\n            </li>}   \r\n\r\n            {!isAuthenticated ? null:\r\n            <li className={'navigation-item'}>\r\n                <a href='/'\r\n                    className='link--nav'\r\n                    onClick={(e) => {\r\n                        e.preventDefault()\r\n                        dispatch(actions.logout())\r\n                        history.replace('/')\r\n                    }}\r\n                >Logout</a>\r\n            </li>}\r\n\r\n\r\n           \r\n        </ul>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport './drawertoggle.scss';\r\n\r\nconst drawerToggle = (props) => {\r\n    const {toggleSideDrawer} = props;\r\n    return (\r\n        // <div onClick={props.clicked}>MENU</div>\r\n        <div onClick={toggleSideDrawer} className='drawertoggle'>\r\n            <div className={'drawertoggle__bar'}></div>\r\n            <div className={'drawertoggle__bar'}></div>\r\n            <div className={'drawertoggle__bar'}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport './toolbar.scss';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'; \r\nimport DrawerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst Toolbar = (props) => {\r\n\r\n    const {toggleSideDrawer} = props;\r\n\r\n    return (\r\n        <div className='toolbar'>\r\n            <DrawerToggle toggleSideDrawer={toggleSideDrawer}/>\r\n            <Logo/>\r\n            <nav className='toolbar__nav'>\r\n                <NavigationItems/>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar;\r\n\r\n","import React from 'react';\r\nimport './sidedrawer.scss';\r\n\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../recycle/Backdrop/Backdrop';\r\n\r\nconst SideDrawer = (props ) => {\r\n\r\n    const {\r\n        sideDrawerOpen,\r\n        closeSideDrawer,\r\n        isAuthenticated} = props;\r\n\r\n    return(\r\n        <>\r\n            {sideDrawerOpen?<Backdrop clicked={closeSideDrawer}/>:null}\r\n            <div className={sideDrawerOpen? 'sidedrawer--open' : 'sidedrawer--close'}>\r\n                <nav>\r\n                    <NavigationItems side isAuthenticated={isAuthenticated} closeSideDrawer={closeSideDrawer}/> \r\n                </nav>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default SideDrawer;","import React, {useState} from 'react';\r\nimport './layout.scss';\r\nimport Toolbar from '../Toolbar/Toolbar'; \r\nimport SideDrawer from '../SideDrawer/SideDrawer';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst Layout = props => {\r\n    const {children} = props;\r\n    const isAuthenticated = useSelector(state => state.login.idToken !== null)\r\n    const [sideDrawerOpen, showSideDrawer] = useState(false)\r\n\r\n    const closeSideDrawer = () => {\r\n        showSideDrawer(false)\r\n    }\r\n\r\n    const toggleSideDrawer = () => {\r\n        showSideDrawer(!sideDrawerOpen)\r\n    }\r\n\r\n    return(\r\n        <div className=\"app\">\r\n            <Toolbar toggleSideDrawer={toggleSideDrawer} isAuthenticated={isAuthenticated}/>\r\n            <SideDrawer isAuthenticated={isAuthenticated} sideDrawerOpen={sideDrawerOpen} closeSideDrawer={closeSideDrawer}/>\r\n            <main className='main'>\r\n                {children}\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport '../../recycle/Button/button.scss'\r\nimport './build-control.scss';\r\n\r\nconst control = (props) => {\r\n\r\n    const {label,removeIngredient,disabled,addIngredient} = props;\r\n    return(\r\n        <div className ='build-control'>\r\n            <div className='build-control__label'>{label}</div>\r\n            <button \r\n                className='button--less build-control__button' \r\n                onClick={removeIngredient}\r\n                disabled={disabled}\r\n            >\r\n            Less\r\n            </button>\r\n\r\n            <button \r\n                className='button--more build-control__button'\r\n                onClick={addIngredient}\r\n            >\r\n            More\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default control;","import React from 'react';\r\nimport '../../recycle/Button/button.scss';\r\nimport './build-controls.scss';\r\nimport BuildControl from '../BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\nconst BuildControls = (props) => {\r\n    const {\r\n        startOrder,\r\n        disabled,\r\n        price,\r\n        addIngredient,\r\n        removeIngredient,\r\n    } = props;\r\n\r\n    const buttonStatus = {...disabled}\r\n    const orderStatus = !(Object.keys(buttonStatus).map(statusKey=>{\r\n        return (!buttonStatus[statusKey])\r\n    }).reduce((overallStatus, currentButtonStatus)=>{\r\n        return (overallStatus || currentButtonStatus)\r\n    },false))\r\n\r\n    return (\r\n        <div className='build-controls'>\r\n            <p className='build-controls__price'>Current price: <span>${price}</span></p>\r\n            {controls.map(control => {\r\n                return (\r\n                <BuildControl \r\n                    key={control.label}\r\n                    label={control.label}\r\n                    addIngredient={() => addIngredient(control.type)}\r\n                    removeIngredient={() => removeIngredient(control.type)}\r\n                    disabled={disabled[control.type]}\r\n                />\r\n                )\r\n            })}\r\n            \r\n            \r\n            <button \r\n                className='button--success build-controls__order'\r\n                disabled={orderStatus} \r\n                onClick={startOrder}>Order now!</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BuildControls;","import React from 'react';\r\nimport '../../recycle/Button/button.scss'\r\nimport './order-prompt.scss';\r\n\r\nconst OrderPrompt = props => {\r\n    const {cancelOrder,goToLogin} = props;\r\n    return (\r\n        <div className='order-prompt'>\r\n            <p className='order-prompt__toolkit'>Please login to continue</p>\r\n            <button type=\"button\" className='button--failed order-prompt__button' onClick={cancelOrder}>Cancel</button>\r\n            <button type=\"button\" className='button--success order-prompt__button' onClick={goToLogin}>Login</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default OrderPrompt\r\n\r\n","import React, {useEffect} from 'react';\r\nimport Burger from '../../containers/Burger/Burger';\r\nimport BuildControls from '../../containers/BuildControls/BuildControls';\r\nimport Alert from '../../recycle/Alert/Alert';\r\nimport Spinner from '../../recycle/Spinner/Spinner';\r\nimport OrderPrompt from '../OrderPrompt/OrderPrompt';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport useAlert from '../../hooks/useAlert';\r\nimport * as actions from '../../store/actions/exports';\r\n\r\n\r\nconst BurgerBuilder = props => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [alertShown,showAlert] = useAlert(false);\r\n    const addIngredient = (ingName) => dispatch(actions.addIngredient(ingName))\r\n    const removeIngredient = (ingName) => dispatch(actions.removeIngredient(ingName))\r\n\r\n        \r\n    const ingredients = useSelector(state => state.buildBurger.ingredients)\r\n    const price = useSelector(state => state.buildBurger.totalPrice.toFixed(2))\r\n    const errorMessage = useSelector(state => state.buildBurger.errorMessage)\r\n    const isAuthenticated = useSelector(state => state.login.idToken !== null)\r\n\r\n    useEffect(() => {\r\n        if(!ingredients){\r\n            dispatch(actions.initIngredients())\r\n        }\r\n    // eslint-disable-next-line\r\n    },[])\r\n\r\n    const startOrder = () => (isAuthenticated && props.history.push('/checkout')) || showAlert(true)\r\n    const cancelOrder = () => showAlert(false)\r\n    const goToLogin = () => {\r\n        props.history.push('/login');\r\n        showAlert(false)\r\n    }\r\n\r\n    const disabledInfo = {...ingredients}\r\n\r\n    for (let key in disabledInfo){\r\n        disabledInfo[key] = (disabledInfo[key] <= 0)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {!alertShown? null:\r\n            <Alert closeAlert={cancelOrder}>\r\n                <OrderPrompt cancelOrder={cancelOrder} goToLogin={goToLogin}/>\r\n            </Alert>}\r\n\r\n\r\n            {(ingredients && (\r\n                <>\r\n                    <Burger ingredients={ingredients}/>\r\n                    <BuildControls\r\n                        addIngredient={addIngredient}\r\n                        removeIngredient={removeIngredient}\r\n                        disabled={disabledInfo}\r\n                        price={price}\r\n                        startOrder={startOrder}\r\n                    />\r\n                </>\r\n            ))\r\n            || (errorMessage && <p style={{color:'lightgrey'}}>{errorMessage}</p>)\r\n            || <Spinner/> \r\n            }\r\n           \r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default BurgerBuilder;","import React, {Suspense,useEffect} from 'react';\r\nimport Layout from '../Layout/Layout';\r\nimport BurgerBuilder from '../BurgerBuilder/BurgerBuilder';\r\nimport {Route, Switch,Redirect} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports'\r\nimport Spinner from '../../recycle/Spinner/Spinner'\r\n\r\nconst Checkout = React.lazy(() => import ('../Checkout/Checkout'))\r\nconst Orders = React.lazy(() => import ('../Orders/Orders'))\r\nconst Login = React.lazy(() => import ('../Login/Login'))\r\nconst Signup = React.lazy(() => import ('../Signup/Signup'))\r\nconst EditProfile = React.lazy(() => import('../EditProfile/EditProfile'))\r\nconst StaticProfile = React.lazy(() => import('../StaticProfile/StaticProfile'))\r\n\r\nconst App = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const reduxToken = useSelector(state => state.login.idToken);\r\n\r\n  const localToken = localStorage.getItem('token');  \r\n  useEffect(() => {\r\n      dispatch(actions.refreshAuth(localToken))\r\n  // eslint-disable-next-line \r\n  },[])\r\n\r\n\r\n\r\n  const isAuthenticated = reduxToken !== null;\r\n\r\n\r\n  const routes = function (isAuthenticated){\r\n    if(isAuthenticated){\r\n      return (\r\n          <>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/checkout\" component={Checkout}/></Suspense>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/orders\" component={Orders}/></Suspense>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/profile-edit\" component={EditProfile}/></Suspense>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/profile\" component={StaticProfile}/></Suspense>\r\n            <Route path=\"/\" exact component={BurgerBuilder}/>\r\n            <Redirect to =\"/\" />\r\n          </>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n          <Suspense fallback={<Spinner/>}><Route path=\"/login\" component={Login} /></Suspense>\r\n          <Suspense fallback={<Spinner/>}><Route path=\"/signup\" component={Signup} /></Suspense>\r\n          <Route path=\"/\" exact component={BurgerBuilder}/>\r\n          <Redirect to = \"/\"/>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Layout>\r\n      <Switch>\r\n          {routes(isAuthenticated)}\r\n      </Switch>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    errorMessage: null\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n\r\n        case actions.SET_INGREDIENTS:{\r\n            const _ = deepClone(state);\r\n            if(!_.ingredients){\r\n                _.ingredients = {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat\r\n                    }\r\n\r\n                _.error = false;\r\n                _.purchasing = false;\r\n                return _\r\n\r\n            } else {\r\n                _.error = false;\r\n                return _\r\n            }\r\n        }\r\n              \r\n        \r\n        case actions.FETCH_INGREDIENTS_FAILED:{\r\n            const _ = deepClone(state)\r\n            _.errorMessage = action.errorMessage;\r\n            return _;       \r\n        }\r\n\r\n        case actions.ADD_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] ++;  \r\n            _.totalPrice += INGREDIENT_PRICES[action.ingredient];\r\n\r\n            return _;\r\n        }\r\n\r\n        case actions.REMOVE_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] --;   \r\n            _.totalPrice -= INGREDIENT_PRICES[action.ingredient];        \r\n            return _;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    purchased: false,\r\n    checkOutMessage: null\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        \r\n        \r\n        case actions.PURCHASE_BURGER_START:{\r\n            const _ = deepClone(initialState);\r\n            _.loading = true;\r\n            return _;\r\n        }\r\n\r\n        case actions.PURCHASE_BURGER_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            _.checkOutMessage = action.checkOutMessage;\r\n            return _\r\n        }\r\n\r\n        case actions.PURCHASE_BURGER_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            _.checkOutMessage = action.checkOutMessage;\r\n            return _\r\n        }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    fetching: true,\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        \r\n        case actions.FETCH_ORDERS_START:\r\n            const _ = deepClone(initialState);\r\n            _.fetching = true;\r\n            return _;\r\n\r\n\r\n        case actions.FETCH_ORDERS_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.orders = action.orders;\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.FETCH_ORDERS_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n        \r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    idToken: null,\r\n    userId: null,\r\n    userData: {},\r\n    conflictMessage: null,\r\n    errorMessage: null,\r\n    loading: false\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch(action.type){\r\n        case actions.LOGIN_START:{\r\n            const _ = deepClone(initialState);\r\n            _.loading = true;\r\n            return _;\r\n        }\r\n\r\n        case actions.LOGIN_STORE:{\r\n            const _ = deepClone(state);\r\n            _.idToken = action.idToken\r\n            _.userId = action.userId\r\n            return _;\r\n        }\r\n\r\n        case actions.PROFILE_STORE: {\r\n            const _ = deepClone(state);\r\n            _.userData = action.userData;\r\n            _.loading = false;\r\n            return _;\r\n        }\r\n\r\n\r\n        case actions.PROFILE_FAIL: {\r\n            const _ = deepClone(state);\r\n            _.errorMessage = action.errorMessage\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.LOGIN_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.conflictMessage = action.conflictMessage\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n    \r\n\r\n        case actions.LOGOUT:{\r\n            const _ = deepClone(state);\r\n            _.idToken = null\r\n            _.userId = null\r\n            return _;\r\n        }\r\n        \r\n        default: \r\n            return (state)\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    conflictMessage: null,\r\n    loading: false,\r\n    endType: null\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actions.SIGNUP_START:{\r\n            const _ = deepClone(initialState);\r\n            _.loading = true;\r\n            return _;\r\n        }\r\n\r\n        case actions.SIGNUP_END:{\r\n            const _ = deepClone(state);\r\n            _.loading = false\r\n            _.endType = action.endType\r\n            return _;\r\n        }\r\n\r\n        case actions.SIGNUP_CONFLICT:{\r\n            const _ = deepClone(state);\r\n            _.conflictMessage = action.conflictMessage\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        default: \r\n            return (state)\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    editing: false,\r\n    loading: false,\r\n    errorMessage: null\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actions.PROFILE_EDIT_START:{\r\n            const _ = deepClone(initialState);\r\n            _.editing = true;\r\n            return _;\r\n        }\r\n\r\n        case actions.PROFILE_SAVE_START:{\r\n            const _ = deepClone(state);\r\n            _.loading = true\r\n            return _;\r\n        }\r\n\r\n        case actions.PROFILE_SAVE_FAILED:{\r\n                const _ = deepClone(state);\r\n                _.errorMessage = action.errorMessage\r\n                _.loading = false\r\n                return _;\r\n        }\r\n\r\n        case actions.PROFILE_SAVE_END:{\r\n            const _ = deepClone(state);\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.PROFILE_EDIT_END:{\r\n            const _ = deepClone(state);\r\n            _.editing = false;\r\n            return _;\r\n        }\r\n\r\n        default: \r\n            return (state)\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/index.scss';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, combineReducers, compose} from 'redux';\r\n// import reducer from './store/reducer';\r\nimport buildBurger from './store/reducers/buildBurger'\r\nimport placeOrder from './store/reducers/placeOrder'\r\nimport fetchOrders from './store/reducers/fetchOrders'\r\nimport login from './store/reducers/login'\r\nimport signup from './store/reducers/signup'\r\nimport updateProfile from './store/reducers/updateProfile'\r\nimport thunk from 'redux-thunk';\r\n\r\n//Basic redux setup\r\n// const store = createStore(burgerBuilderReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconst composeEnhancers = (process.env.NODE_ENV === 'development'? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  buildBurger,\r\n  placeOrder,\r\n  fetchOrders,\r\n  login,\r\n  signup,\r\n  updateProfile\r\n})\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n      applyMiddleware(thunk)\r\n    ));\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>//disabled to show popUp :(\r\n    <>\r\n      {app}\r\n    </>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}