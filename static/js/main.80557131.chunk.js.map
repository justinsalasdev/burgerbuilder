{"version":3,"sources":["store/actions/actions.js","axios/database.js","store/actions/buildBurger.js","store/actions/placeOrder.js","store/actions/fetchOrders.js","store/actions/login.js","store/actions/signup.js","recycle/Spinner/Spinner.js","containers/Backdrop/Backdrop.js","recycle/Alert/Alert.js","containers/withErrorHandler/withErrorHandler.js","hooks/useHttpErrorHandler.js","containers/BurgerIngredient/BurgerIngredient.js","containers/Burger/Burger.js","containers/Logo/Logo.js","containers/NavigationItems/NavigationItems.js","containers/DrawerToggle/DrawerToggle.js","containers/Toolbar/Toolbar.js","containers/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","containers/BuildControl/BuildControl.js","containers/BuildControls/BuildControls.js","containers/LoginPrompt/LoginPrompt.js","hooks/useAlert.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Logout/Logout.js","containers/App/App.js","serviceWorker.js","store/reducers/buildBurger.js","store/reducers/placeOrder.js","store/reducers/fetchOrders.js","store/reducers/login.js","store/reducers/signup.js","index.js"],"names":["SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","ADD_INGREDIENT","REMOVE_INGREDIENT","CHECKOUT_BURGER","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","LOGIN_START","LOGIN_STORE","LOGIN_FAIL","LOGOUT","SIGNUP_CLEAR","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAIL","database","axios","create","baseURL","addIngredient","ingredient","type","actions","removeIngredient","initIngredients","dispatch","get","then","response","ingredients","data","catch","error","checkoutBurger","purchaseBurger","orderData","token","post","purchaseBurgerFail","fetchOrders","userId","queryParams","res","orders","fetchedOrders","key","unshift","id","err","loginStore","authData","setLogoutTimer","expiration","setTimeout","logout","localStorage","removeItem","checkAuth","getItem","expirationDate","Date","expiry","getTime","idToken","localId","login","loginData","endPoint","returnSecureToken","expiresIn","setItem","loginFail","signupClear","signup","signupData","signupFail","Spinner","className","Backdrop","props","clicked","onClick","Alert","closeAlert","console","log","children","withErrorHandler","WrappedComponent","httpClient","useState","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","useEffect","eject","useHttpErrorHandler","confirmError","show","closeModal","message","BurgerIngredient","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","igArray","currentIg","concat","length","Logo","NavigationItems","closeSideDrawer","isAuthenticated","useSelector","state","to","exact","activeClassName","drawerToggle","toggleSideDrawer","Toolbar","DrawerToggle","SideDrawer","sideDrawerOpen","side","Layout","showSideDrawer","control","label","disabled","controls","BuildControls","startOrder","price","buttonStatus","orderStatus","statusKey","overallStatus","currentButtonStatus","toFixed","BuildControl","LoginPrompt","cancelOrder","goToLogin","useAlert","useDispatch","alertShown","showAlert","ings","buildBurger","totalPrice","disabledInfo","Burger","ingName","history","replace","Logout","Checkout","React","lazy","Orders","Login","Signup","Profile","App","fallback","path","component","BurgerBuilder","routes","Boolean","window","location","hostname","match","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","deepClone","object","JSON","parse","stringify","reducer","action","purchasing","loading","purchased","fetching","isSignupComplete","composeEnhancers","compose","rootReducer","combineReducers","placeOrder","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qGAAA,soBAAO,IAAMA,EAAkB,kBAClBC,EAA2B,2BAC3BC,EAAiB,iBACjBC,EAAoB,oBAEpBC,EAAkB,kBAClBC,EAAwB,wBACxBC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAqB,qBACrBC,EAAuB,sBACvBC,EAAoB,mBAEpBC,EAAc,cACdC,EAAc,cACdC,EAAa,aACbC,EAAS,SAGTC,EAAe,eACfC,EAAe,eACfC,EAAiB,iBACjBC,EAAc,e,sCCvB3B,YAGMC,EAHN,OAGiBC,EAAMC,OAAO,CAC1BC,QAAS,sDAIEH,O,waCYFI,EAAgB,SAACC,GAC1B,MAAO,CACHC,KAAMC,IACNF,WAAYA,IAIPG,EAAmB,SAACH,GAC7B,MAAO,CACHC,KAAMC,IACNF,WAAYA,IAIPI,EAAkB,WAC3B,OAAO,SAAAC,GAAQ,OACZV,IAASW,IAAI,qBACXC,MAAK,SAAAC,GAhCS,IAACC,EAiCZJ,GAjCYI,EAiCYD,EAASE,KAhClC,CACHT,KAAMC,IACNO,YAAaA,QAgCZE,OAAM,SAAAC,GACHP,EA5BD,CACHJ,KAAMC,WCcDW,EAAiB,WAC1B,MAAO,CACHZ,KAAMC,MAIDY,EAAiB,SAACC,EAAUC,GACrC,OAAO,SAAAX,GAEHA,EA9BG,CACHJ,KAAMC,MA8BNP,IAASsB,KAAK,qBAAuBD,EAAMD,GAC1CR,MAAK,SAAAC,GACFH,EA1BD,CACHJ,KAAMC,SA2BLS,OAAM,SAAAC,GACHP,EAvBe,SAACO,GACxB,MAAO,CACHX,KAAMC,IACNU,MAAOA,GAoBMM,CAAmBN,S,OCf3BO,EAAc,SAACH,EAAMI,GAC9B,OAAO,SAAAf,GACHA,EATG,CACHJ,KAAMC,MASN,IAAMmB,EAAW,gBAAYL,EAAZ,sCAA+CI,EAA/C,KACjBzB,IAASW,IAAT,sBAA4Be,IACvBd,MAAK,SAAAe,GACF,IA7BYC,EA6BNC,EAAgB,GACtB,IAAK,IAAIC,KAAOH,EAAIZ,KAChBc,EAAcE,QAAd,2BACOJ,EAAIZ,KAAKe,IADhB,IAEIE,GAAIF,KAGZpB,GApCYkB,EAoCgBC,EAnCjC,CACHvB,KAAMC,IACNqB,OAAQA,QAmCHZ,OAAM,SAAAiB,GA9BK,IAAChB,EA+BTP,GA/BSO,EA+BgBgB,EA9B9B,CACH3B,KAAMC,IACNU,MAAOA,U,iBCPTiB,EAAa,SAACC,GAChB,MAAO,CACH7B,KAAMC,IACN4B,SAAUA,IAaZC,EAAiB,SAACC,GACpB,OAAO,SAAA3B,GACH4B,YAAW,WACP5B,EAAS6B,OACE,IAAbF,KAOGE,EAAS,WAIlB,OAHAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACxBD,aAAaC,WAAW,UACjB,CACHnC,KAAMC,MAKDmC,EAAY,WACrB,OAAO,SAAAhC,GACH,IAAMW,EAAQmB,aAAaG,QAAQ,SACnC,GAAItB,EAGG,CACH,IAAMuB,EAAiB,IAAIC,KAAKL,aAAaG,QAAQ,mBAErD,GAAIC,GAAkB,IAAIC,KAEtBnC,EAAS6B,SAEN,CACH,IAAMd,EAASe,aAAaG,QAAQ,UAC9BG,GAAUF,EAAeG,WAAY,IAAIF,MAAOE,WAAW,IAEjErC,EAASwB,EAAW,CAACc,QAAS3B,EAAO4B,QAASxB,KAC9Cf,EAAS0B,EAAeU,UAd5BpC,EAAS6B,OAoBRW,EAAQ,SAACC,GAClB,OAAO,SAAAzC,GACHA,EApEG,CACHJ,KAAMC,MAqEN,IACM6C,EAAQ,oFADC,2CAMfnD,IAAMqB,KAAK8B,EAAX,2BAAyBD,GAAzB,IAAmCE,mBAAmB,KACjDzC,MAAK,SAAAC,GAEF,IAAM+B,EAAiB,IAAIC,MAAM,IAAIA,MAAOE,UAAY,IAAIF,KAA6B,IAAxBhC,EAASE,KAAKuC,WAAgBP,WAG/FP,aAAae,QAAQ,QAAQ1C,EAASE,KAAKiC,SAC3CR,aAAae,QAAQ,iBAAiBX,GACtCJ,aAAae,QAAQ,SAAS1C,EAASE,KAAKkC,SAG5CvC,EAAS0B,EAAevB,EAASE,KAAKuC,YACtC5C,EAASwB,EAAWrB,EAASE,UAGhCC,OAAM,SAAAC,GACHP,EA/EE,SAACO,GACf,MAAO,CACHX,KAAMC,IACNU,MAAOA,GA4EUuC,CAAUvC,EAAMJ,SAASE,KAAKE,aCrE1CwC,EAAc,WACvB,MAAO,CACHnD,KAAMC,MAMDmD,EAAS,SAACC,GAGnB,IACMP,EAAQ,wEADC,2CAGf,OAAO,SAAA1C,GACHA,EAAS+C,KACT/C,EAvCG,CACHJ,KAAMC,MAwCNN,IAAMqB,KAAK8B,EAAX,2BAAyBO,GAAzB,IAAoCN,mBAAmB,KAClDzC,MAAK,SAAAC,GACFH,EA5BL,CACHJ,KAAMC,SA6BDS,OAAM,SAAAC,GACHP,EAxCG,SAACO,GAChB,MAAO,CACHX,KAAMC,IACNU,MAAOA,EAAMJ,SAASE,KAAKE,OAqCV2C,CAAW3C,U,6BClDpC,0BAee4C,IAVC,WACZ,OACI,yBAAKC,UAAU,WACX,8BACA,iC,qCCTZ,0BAaeC,IARE,SAACC,GAAW,IAClBC,EAAWD,EAAXC,QACP,OACI,yBAAKH,UAAU,WAAWI,QAASD,M,6BCR3C,oCAqBeE,IAhBD,SAAAH,GAAU,IAEbI,EAAcJ,EAAdI,WAGP,OAFAC,QAAQC,IAAIN,GAGR,oCACI,kBAAC,IAAD,CAAUC,QAASG,IACnB,yBAAKN,UAAU,SACVE,EAAMO,a,wFCMRC,IAfU,SAACC,EAAkBxE,GACxC,OAAO,SAAA+D,GAAU,IAAD,ECHL,SAAAU,GAAe,IAAD,EACCC,mBAAS,MADV,mBAClB1D,EADkB,KACX2D,EADW,KAGfC,EAAiBH,EAAWI,aAAaC,QAAQC,KAAI,SAAAC,GAEvD,OADAL,EAAS,MACFK,KAELC,EAAiBR,EAAWI,aAAajE,SAASmE,KAAI,SAAArD,GAAG,OAAIA,KAAK,SAAAM,GACpE2C,EAAS3C,MAGbkD,qBAAU,WACN,OAAO,WACHT,EAAWI,aAAaC,QAAQK,MAAMP,GACtCH,EAAWI,aAAajE,SAASuE,MAAMF,MAG7C,CAACL,EAAeK,IAMtB,MAAO,CAACjE,EAJiB,WACjB2D,EAAS,QDhBeS,CAAoBpF,GADpC,mBACPgB,EADO,KACAqE,EADA,KAEZ,OACI,oCACIrE,EAAM,kBAAC,IAAD,CAAOsE,KAAgB,OAAVtE,EAAgBuE,WAAYF,GAC3CrE,EAAMwE,SACF,KAET,kBAAChB,EAAqBT,O,mEEqCtB0B,G,kBA/CU,SAAA1B,GACrB,IAAI3D,EAAa,KAEb,OAAO2D,EAAM1D,MACT,IAAK,eACDD,EAAa,yBAAKyD,UAAU,iBAC5B,MAEJ,IAAK,YACDzD,EACI,yBAAKyD,UAAU,aACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,YAGvB,MAEJ,IAAK,OACDzD,EAAa,yBAAKyD,UAAU,SAC5B,MAEJ,IAAK,SACDzD,EAAa,yBAAKyD,UAAU,WAC5B,MAEJ,IAAK,QACDzD,EAAa,yBAAKyD,UAAU,UAC5B,MAEJ,IAAK,QACDzD,EAAa,yBAAKyD,UAAU,UAC5B,MAEJ,QACIzD,EAAa,KAGrB,OAAOA,ICTAsF,IA1BA,SAAC3B,GACZ,IAAI4B,EAAyBC,OAAOC,KAAK9B,EAAMlD,aAC9CiF,KAAI,SAAAC,GACD,OAAO,YAAIC,MAAMjC,EAAMlD,YAAYkF,KAASD,KAAI,SAACG,EAAEC,GAC/C,OAAO,kBAAC,EAAD,CAAkBrE,IAAKkE,EAAQG,EAAG7F,KAAM0F,UAGtDI,QAAO,SAACC,EAAQC,GACb,OAAOD,EAAQE,OAAOD,KACxB,IAMF,OAJsC,IAAlCV,EAAuBY,SACvBZ,EAAyB,uBAAG9B,UAAU,uBAAb,iCAKzB,yBAAKA,UAAU,oBACX,kBAAC,EAAD,CAAkBxD,KAAK,cACtBsF,EACD,kBAAC,EAAD,CAAkBtF,KAAK,oB,wcCjBpBmG,G,kBANF,SAACzC,GACV,OACI,yBAAKF,UAAU,W,6BCyDR4C,EAtDS,SAAC1C,GAAU,IACxB2C,EAAmB3C,EAAnB2C,gBAEDC,EAA4B,OADpBC,aAAY,SAAAC,GAAK,OAAIA,EAAM5D,MAAM7B,SAG/C,OACI,wBAAIyC,UAAU,mBAAoBI,QAASyC,GAEvC,wBAAI7C,UAAW,mBACX,kBAAC,IAAD,CACIiD,GAAG,IACHC,OAAK,EACLlD,UAAU,YACVmD,gBAAiB,UAJrB,mBAQHL,EAAgB,wBAAI9C,UAAW,mBAC5B,kBAAC,IAAD,CACIiD,GAAG,WACHC,OAAK,EACLlD,UAAU,YACVmD,gBAAiB,UAJrB,YAMG,KAGNL,EAAgB,wBAAI9C,UAAW,mBAC5B,kBAAC,IAAD,CACIiD,GAAG,UACHC,OAAK,EACLlD,UAAU,YACVmD,gBAAiB,UAJrB,WAMG,KAEP,wBAAInD,UAAW,mBACX,kBAAC,IAAD,CACIiD,GAAIH,EAAgB,UAAY,SAChCI,OAAK,EACLlD,UAAU,YACVmD,gBAAiB,UACnBL,EAAiB,SAAU,YCnC9BM,G,MAZM,SAAClD,GAAW,IACtBmD,EAAoBnD,EAApBmD,iBACP,OAEI,yBAAKjD,QAASiD,EAAkBrD,UAAW,gBACvC,yBAAKA,UAAW,sBAChB,yBAAKA,UAAW,sBAChB,yBAAKA,UAAW,yBCWbsD,EAfC,SAACpD,GAAW,IAEjBmD,EAAoBnD,EAApBmD,iBAEP,OACI,yBAAKrD,UAAU,WACX,kBAACuD,EAAD,CAAcF,iBAAkBA,IAChC,kBAAC,EAAD,MACA,yBAAKrD,UAAU,gBACX,kBAAC,EAAD,S,gBCWDwD,EApBI,SAACtD,GAAY,IAGxBuD,EAEmBvD,EAFnBuD,eACAZ,EACmB3C,EADnB2C,gBACAC,EAAmB5C,EAAnB4C,gBAEJ,OACI,oCACKW,EAAe,kBAACxD,EAAA,EAAD,CAAUE,QAAS0C,IAAmB,KACtD,yBAAK7C,UAAWyD,EAAgB,mBAAqB,qBACjD,6BACI,kBAAC,EAAD,CAAiBC,MAAI,EAACZ,gBAAiBA,EAAiBD,gBAAiBA,QCgB9Ec,EA5BA,SAAAzD,GAAU,IACdO,EAAYP,EAAZO,SACDqC,EAAkBC,aAAY,SAAAC,GAAK,OAA0B,OAAtBA,EAAM5D,MAAM7B,SAFrC,EAGqBsD,oBAAS,GAH9B,mBAGb4C,EAHa,KAGGG,EAHH,KAapB,OACI,yBAAK5D,UAAU,OACX,kBAAC,EAAD,CAASqD,iBANQ,WACrBO,GAAgBH,IAKiCX,gBAAiBA,IAC9D,kBAAC,EAAD,CAAYA,gBAAiBA,EAAiBW,eAAgBA,EAAgBZ,gBAX9D,WACpBe,GAAe,MAWX,0BAAM5D,UAAU,QACXS,K,uBCIFoD,G,kBAxBC,SAAC3D,GAAW,IAEjB4D,EAAiD5D,EAAjD4D,MAAMpH,EAA2CwD,EAA3CxD,iBAAiBqH,EAA0B7D,EAA1B6D,SAASzH,EAAiB4D,EAAjB5D,cACvC,OACI,yBAAK0D,UAAW,iBACZ,yBAAKA,UAAU,wBAAwB8D,GACvC,4BACI9D,UAAU,qCACVI,QAAS1D,EACTqH,SAAUA,GAHd,QAQA,4BACI/D,UAAU,qCACVI,QAAS9D,GAFb,WCbN0H,EAAW,CACb,CAACF,MAAO,QAAStH,KAAM,SACvB,CAACsH,MAAO,QAAStH,KAAM,SACvB,CAACsH,MAAO,SAAUtH,KAAM,UACxB,CAACsH,MAAO,OAAQtH,KAAM,SA6CXyH,EA1CO,SAAC/D,GAAW,IAE1BgE,EAKAhE,EALAgE,WACAH,EAIA7D,EAJA6D,SACAI,EAGAjE,EAHAiE,MACA7H,EAEA4D,EAFA5D,cACAI,EACAwD,EADAxD,iBAGE0H,EAAY,eAAOL,GACnBM,GAAgBtC,OAAOC,KAAKoC,GAAcnC,KAAI,SAAAqC,GAChD,OAASF,EAAaE,MACvBhC,QAAO,SAACiC,EAAeC,GACtB,OAAQD,GAAiBC,KAC3B,GAEF,OACI,yBAAKxE,UAAU,kBACX,uBAAGA,UAAU,yBAAb,kBAAoD,kCAAQmE,EAAMM,QAAQ,KACzET,EAAS/B,KAAI,SAAA4B,GACV,OACA,kBAACa,EAAD,CACI1G,IAAK6F,EAAQC,MACbA,MAAOD,EAAQC,MACfxH,cAAe,kBAAMA,EAAcuH,EAAQrH,OAC3CE,iBAAkB,kBAAMA,EAAiBmH,EAAQrH,OACjDuH,SAAUA,EAASF,EAAQrH,WAMnC,4BACIwD,UAAU,wCACV+D,SAAUM,EACVjE,QAAS8D,GAHb,gB,gBC3BGS,G,MAbK,SAAAzE,GAAU,IACnB0E,EAAyB1E,EAAzB0E,YAAYC,EAAa3E,EAAb2E,UACnB,OACI,yBAAK7E,UAAU,gBACX,uBAAGA,UAAU,yBAAb,4BACA,4BAAQxD,KAAK,SAASwD,UAAU,sCAAsCI,QAASwE,GAA/E,UACA,4BAAQpI,KAAK,SAASwD,UAAU,uCAAuCI,QAASyE,GAAhF,Y,QCHGC,EALE,WAAO,IAAD,EACYjE,oBAAS,GADrB,mBAEnB,MAAO,CAFY,Y,QC+ERH,eAnEO,SAAAR,GAElB,IAAMtD,EAAWmI,cAFU,EAGID,IAHJ,mBAGpBE,EAHoB,KAGTC,EAHS,KAQrBC,EAAOnC,aAAY,SAAAC,GAAK,OAAIA,EAAMmC,YAAYnI,eAC9CmH,EAAQpB,aAAY,SAAAC,GAAK,OAAIA,EAAMmC,YAAYC,cAC/CjI,EAAQ4F,aAAY,SAAAC,GAAK,OAAIA,EAAMmC,YAAYhI,SAC/C2F,EAAkBC,aAAY,SAAAC,GAAK,OAA0B,OAAtBA,EAAM5D,MAAM7B,SAEzD8D,qBAAU,WACNzE,EAASH,SAEX,IAEF,IAOMmI,EAAc,kBAAMK,GAAU,IAG9BI,EAAY,eAAOH,GACzB,IAAK,IAAIlH,KAAOqH,EACZA,EAAarH,GAAQqH,EAAarH,IAAQ,EAI9C,IAAI6D,EAAS1E,EAAQ,6DAAwC,kBAAC4C,EAAA,EAAD,MAkB7D,OAhBGmF,IACCrD,EACI,oCACI,kBAACyD,EAAA,EAAD,CAAQtI,YAAakI,IACrB,kBAAC,EAAD,CACI5I,cArCM,SAACiJ,GAAD,OAAa3I,EAASH,IAAsB8I,KAsClD7I,iBArCS,SAAC6I,GAAD,OAAa3I,EAASH,IAAyB8I,KAsCxDxB,SAAUsB,EACVlB,MAAOA,EACPD,WA3BG,WACZpB,EACC5C,EAAMsF,QAAQC,QAAQ,aAEtBR,GAAU,QA+Bd,oCACKD,EAAW,kBAAC3E,EAAA,EAAD,CAAOC,WAAYsE,GAC3B,kBAAC,EAAD,CAAaA,YAAaA,EAAaC,UA7BjC,WAAO3E,EAAMsF,QAAQC,QAAQ,UAAUR,GAAU,OA8BlD,KAERpD,KASiC3F,K,OC/D/BwJ,EAbA,SAAAxF,GACX,IAAMtD,EAAWmI,cAOjB,OALA1D,qBAAU,WACNzE,EAASH,SAEX,IAGE,kBAAC,IAAD,CAAUwG,GAAK,OCHjB0C,EAAWC,IAAMC,MAAK,kBAAM,iCAC5BC,EAASF,IAAMC,MAAK,kBAAM,iCAC1BE,EAAQH,IAAMC,MAAK,kBAAM,uDACzBG,EAASJ,IAAMC,MAAK,kBAAM,uDAC1BI,EAAUL,IAAMC,MAAK,kBAAM,iCA+DlBK,EA7DH,SAAAhG,GAEV,IAAMtD,EAAWmI,cACXxH,EAAQwF,aAAY,SAAAC,GAAK,OAAIA,EAAM5D,MAAM7B,SACzCI,EAASoF,aAAY,SAAAC,GAAK,OAAIA,EAAM5D,MAAMzB,UAEhD0D,qBAAU,WAER,GADAd,QAAQC,IAAI7C,GACTA,EAAO,CACR,IAAMC,EAAW,gBAAYL,EAAZ,sCAA+CI,EAA/C,KACjBzB,IAASW,IAAT,qBAA2Be,IAC1Bd,MAAK,SAAAC,GACJwD,QAAQC,IAAIzD,MAEbG,OAAM,SAAAC,GACLoD,QAAQC,IAAIrD,SAGhB,CAACQ,EAAOJ,IAIVX,EAASH,IAAkBc,IAE3B,IAAMuF,EAA4B,OAAVvF,EA4BxB,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KA3BW,SAAUuF,GACvB,OAAGA,EAEG,oCACE,kBAAC,WAAD,CAAUqD,SAAU,kBAACpG,EAAA,EAAD,OAAY,kBAAC,IAAD,CAAOqG,KAAK,YAAYC,UAAWV,KACnE,kBAAC,WAAD,CAAUQ,SAAU,kBAACpG,EAAA,EAAD,OAAY,kBAAC,IAAD,CAAOqG,KAAK,UAAUC,UAAWP,KACjE,kBAAC,WAAD,CAAUK,SAAU,kBAACpG,EAAA,EAAD,OAAY,kBAAC,IAAD,CAAOqG,KAAK,WAAWC,UAAWJ,KAClE,kBAAC,IAAD,CAAOG,KAAK,UAAUC,UAAWX,IACjC,kBAAC,IAAD,CAAOU,KAAK,IAAIlD,OAAK,EAACmD,UAAWC,IACjC,kBAAC,IAAD,CAAUrD,GAAI,OAKlB,oCACE,kBAAC,WAAD,CAAUkD,SAAU,kBAACpG,EAAA,EAAD,OAAY,kBAAC,IAAD,CAAOqG,KAAK,SAASC,UAAWN,KAChE,kBAAC,WAAD,CAAUI,SAAU,kBAACpG,EAAA,EAAD,OAAY,kBAAC,IAAD,CAAOqG,KAAK,UAAUC,UAAWL,KAEjE,kBAAC,IAAD,CAAOI,KAAK,IAAIlD,OAAK,EAACmD,UAAWC,IACjC,kBAAC,IAAD,CAAUrD,GAAK,OASdsD,CAAOzD,MC5DE0D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,mBChBAC,EAAe,CACjB7J,YAAa,KACboI,WAAY,EACZjI,OAAO,GAKL2J,EAAoB,CACtBC,MAAO,GACPC,OAAQ,GACRC,KAAM,IACNC,MAAO,IAGX,SAASC,EAAUC,GACf,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,IAGrC,IAoDeI,EApDC,WAAmC,IAAlCxE,EAAiC,uDAAzB6D,EAAcY,EAAW,uCAC9C,OAAOA,EAAOjL,MAGV,KAAKC,IACD,IAAM2F,EAAI+E,EAAUnE,GACpB,OAAIZ,EAAEpF,aAaFoF,EAAEjF,OAAQ,EACHiF,IAbPA,EAAEpF,YAAc,CACZ+J,MAAOU,EAAOzK,YAAY+J,MAC1BG,MAAOO,EAAOzK,YAAYkK,MAC1BF,OAAQS,EAAOzK,YAAYgK,OAC3BC,KAAMQ,EAAOzK,YAAYiK,MAG7B7E,EAAEjF,OAAQ,EACViF,EAAEsF,YAAa,EACRtF,GASf,KAAK3F,IACD,IAAM2F,EAAI+E,EAAUnE,GAEpB,OADAZ,EAAEjF,OAAQ,EACHiF,EAGX,KAAK3F,IACD,IAAM2F,EAAI+E,EAAUnE,GAIpB,OAHAZ,EAAEpF,YAAYyK,EAAOlL,cACrB6F,EAAEgD,YAAc0B,EAAkBW,EAAOlL,YAElC6F,EAGX,KAAK3F,IACD,IAAM2F,EAAI+E,EAAUnE,GAGpB,OAFAZ,EAAEpF,YAAYyK,EAAOlL,cACrB6F,EAAEgD,YAAc0B,EAAkBW,EAAOlL,YAClC6F,EAGX,QACI,OAAOY,IClEb6D,EAAe,CACjBc,SAAS,EACTC,WAAW,GAGf,SAAST,EAAUC,GACf,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,IAGrC,IAqCeI,EArCC,WAAmC,IAAlCxE,EAAiC,uDAAzB6D,EAAcY,EAAW,uCAC9C,OAAOA,EAAOjL,MAGV,KAAKC,IACD,IAAM2F,EAAI+E,EAAUnE,GAEpB,OADAZ,EAAEwF,WAAY,EACPxF,EAGX,KAAK3F,IACD,IAAM2F,EAAI+E,EAAUnE,GAGpB,OAFAZ,EAAEuF,SAAU,EACZvF,EAAEwF,WAAY,EACPxF,EAIX,KAAK3F,IACD,IAAM2F,EAAI+E,EAAUnE,GAEpB,OADAZ,EAAEuF,SAAU,EACLvF,EAIX,KAAK3F,IACD,IAAM2F,EAAI+E,EAAUnE,GAEpB,OADAZ,EAAEuF,SAAU,EACLvF,EAGX,QACI,OAAOY,ICzCb6D,EAAe,CACjB/I,OAAQ,GACR+J,UAAU,GAGd,SAASV,EAAUC,GACf,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,IAGrC,IA+BeI,EA/BC,WAAmC,IAAlCxE,EAAiC,uDAAzB6D,EAAcY,EAAW,uCAC9C,OAAOA,EAAOjL,MAGV,KAAKC,IACD,IAAM2F,EAAI+E,EAAUnE,GAEpB,OADAZ,EAAEyF,UAAW,EACNzF,EAGX,KAAK3F,IACD,IAAM2F,EAAI+E,EAAUnE,GAGpB,OAFAZ,EAAEtE,OAAS2J,EAAO3J,OAClBsE,EAAEyF,UAAW,EACNzF,EAIX,KAAK3F,IACD,IAAM2F,EAAI+E,EAAUnE,GAEpB,OADAZ,EAAEyF,UAAW,EACNzF,EAIX,QACI,OAAOY,ICnCb6D,EAAe,CACjBtJ,MAAO,KACPI,OAAQ,KACRR,MAAO,KACPwK,SAAS,GAGb,SAASR,EAAUC,GACf,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,IAGrC,IAqCeI,EArCC,WAAmC,IAAlCxE,EAAiC,uDAAzB6D,EAAcY,EAAW,uCAC9C,OAAOA,EAAOjL,MACV,KAAKC,IACD,IAAM2F,EAAI+E,EAAUnE,GAGpB,OAFAZ,EAAEuF,SAAU,EACZvF,EAAEjF,MAAQ,KACHiF,EAGX,KAAK3F,IACD,IAAM2F,EAAI+E,EAAUnE,GAKpB,OAJAZ,EAAE7E,MAAQkK,EAAOpJ,SAASa,QAC1BkD,EAAEzE,OAAS8J,EAAOpJ,SAASc,QAC3BiD,EAAEjF,MAAQ,KACViF,EAAEuF,SAAU,EACLvF,EAGX,KAAK3F,IACD,IAAM2F,EAAI+E,EAAUnE,GAGpB,OAFAZ,EAAEjF,MAAQsK,EAAOtK,MACjBiF,EAAEuF,SAAU,EACLvF,EAGX,KAAK3F,IACD,IAAM2F,EAAI+E,EAAUnE,GAGpB,OAFAZ,EAAE7E,MAAQ,KACV6E,EAAEzE,OAAS,KACJyE,EAGX,QACI,OAAQY,IC5Cd6D,EAAe,CACjB1J,MAAO,KACPwK,SAAS,EACTG,kBAAkB,GAGtB,SAASX,GAAUC,GACf,OAAOC,KAAKC,MAAMD,KAAKE,UAAUH,IAGrC,IAmCeI,GAnCC,WAAmC,IAAlCxE,EAAiC,uDAAzB6D,EAAcY,EAAW,uCAC9C,OAAOA,EAAOjL,MACV,KAAKC,IACD,IAAM2F,EAAI+E,GAAUnE,GAGpB,OAFAZ,EAAEuF,SAAU,EACZvF,EAAEjF,MAAQ,KACHiF,EAGX,KAAK3F,IACD,IAAM2F,EAAI+E,GAAUnE,GAIpB,OAHAZ,EAAE0F,kBAAmB,EACrB1F,EAAEjF,MAAQ,KACViF,EAAEuF,SAAU,EACLvF,EAGX,KAAK3F,IACD,IAAM2F,EAAI+E,GAAUnE,GAGpB,OAFAZ,EAAEjF,MAAQsK,EAAOtK,MACjBiF,EAAEuF,SAAU,EACLvF,EAGX,KAAK3F,IACD,IAAM2F,EAAI+E,GAAUnE,GAEpB,OADAZ,EAAE0F,kBAAmB,EACd1F,EAGX,QACI,OAAQY,I,SCvBd+E,GAAmHC,IAEnHC,GAAcC,YAAgB,CAClC/C,YAAaA,EACbgD,WAAYA,EACZzK,YAAaA,EACb0B,MAAOA,EACPQ,OAAQA,KAGJwI,GAAQC,YAAYJ,GAAmCF,GACvDO,YAAgBC,QAIhBC,GACJ,kBAAC,IAAD,CAAUJ,MAAOA,IACf,kBAAC,IAAD,CAAgBK,SAAS,kBACvB,kBAAC,EAAD,QAKNC,IAASC,OAEL,oCACGH,IAGLI,SAASC,eAAe,SNkFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlM,MAAK,SAAAmM,GACJA,EAAaC,gBAEdhM,OAAM,SAAAC,GACLoD,QAAQpD,MAAMA,EAAMwE,c","file":"static/js/main.80557131.chunk.js","sourcesContent":["export const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n\r\nexport const CHECKOUT_BURGER = 'CHECKOUT_BURGER';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDER_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDER_FAIL';\r\n\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_STORE = 'LOGIN_STORE';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\n\r\nexport const SIGNUP_CLEAR = 'SIGNUP_CLEAR';\r\nexport const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\n","import axios from 'axios';\r\n\r\n\r\nconst database = axios.create({\r\n    baseURL: 'https://react-burger-builder-12ae6.firebaseio.com'\r\n});\r\n\r\n\r\nexport default database;","import * as actions from './actions';\r\nimport database from '../../axios/database';\r\n\r\n\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actions.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nconst fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actions.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const addIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.ADD_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.REMOVE_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch  => (\r\n       database.get('/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed())\r\n        })\r\n    )\r\n}","import * as actions from './actions';\r\nimport database from '../../axios/database';\r\n\r\n\r\n\r\n\r\nconst purchaseBurgerStart = () => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_SUCCESS,\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n//EXPORTS\r\nexport const checkoutBurger = () => {\r\n    return {\r\n        type: actions.CHECKOUT_BURGER\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData,token) => {\r\n    return dispatch => {\r\n        \r\n        dispatch(purchaseBurgerStart())\r\n        database.post('/orders.json?auth=' + token,orderData)\r\n        .then(response => {\r\n            dispatch(purchaseBurgerSuccess())\r\n        })\r\n        .catch(error => {\r\n            dispatch(purchaseBurgerFail(error))\r\n        })\r\n    }\r\n}","import * as actions from './actions';\r\nimport database from '../../axios/database';\r\n\r\n\r\n\r\nconst fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\n\r\nconst fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nconst fetchOrdersStart = () => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const fetchOrders = (token,userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart())\r\n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\r\n        database.get(`/orders.json${queryParams}`)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data){\r\n                    fetchedOrders.unshift({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err))\r\n            })\r\n    }\r\n}","import * as actions from './actions';\r\nimport axios from 'axios';\r\n\r\nconst loginStart = () => {\r\n    return {\r\n        type: actions.LOGIN_START\r\n    }\r\n}\r\n\r\nconst loginStore = (authData) => {\r\n    return {\r\n        type: actions.LOGIN_STORE,\r\n        authData: authData\r\n    }\r\n}\r\n\r\n\r\nconst loginFail = (error) => {\r\n    return {\r\n        type: actions.LOGIN_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\nconst setLogoutTimer = (expiration) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        },expiration * 900)\r\n    }\r\n}\r\n\r\n\r\n\r\n//exports\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId')\r\n    return {\r\n        type: actions.LOGOUT\r\n    }\r\n};\r\n\r\n\r\nexport const checkAuth = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n            \r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n\r\n            if (expirationDate <= new Date()){\r\n\r\n                dispatch(logout());\r\n\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                const expiry = (expirationDate.getTime() - new Date().getTime())/1000;\r\n\r\n                dispatch(loginStore({idToken: token, localId: userId}))\r\n                dispatch(setLogoutTimer(expiry))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\nexport const login = (loginData) =>{\r\n    return dispatch => {\r\n        dispatch(loginStart())\r\n        \r\n        const apiKey = 'AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE';\r\n        const endPoint = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`\r\n\r\n        //endPoint = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`;\r\n \r\n      \r\n        axios.post(endPoint, {...loginData,returnSecureToken: true})\r\n            .then(response => {\r\n                \r\n                const expirationDate = new Date( new Date().getTime() + new Date(response.data.expiresIn*1000).getTime())\r\n\r\n\r\n                localStorage.setItem('token',response.data.idToken)\r\n                localStorage.setItem('expirationDate',expirationDate)\r\n                localStorage.setItem('userId',response.data.localId)\r\n\r\n\r\n                dispatch(setLogoutTimer(response.data.expiresIn))\r\n                dispatch(loginStore(response.data))\r\n                \r\n            })\r\n            .catch(error => {\r\n                dispatch(loginFail(error.response.data.error))\r\n            })\r\n    }\r\n}","import * as actions from './actions';\r\nimport axios from 'axios';\r\n\r\nconst signupStart = () => {\r\n    return {\r\n        type: actions.SIGNUP_START\r\n    }\r\n}\r\n\r\n\r\nconst signupFail = (error) => {\r\n    return {\r\n        type: actions.SIGNUP_FAIL,\r\n        error: error.response.data.error\r\n    }\r\n}\r\n\r\n\r\nconst signupSuccess = () => {\r\n    return {\r\n        type: actions.SIGNUP_SUCCESS,\r\n    }\r\n}\r\n\r\n\r\n\r\n//exports3\r\nexport const signupClear = () => {\r\n    return {\r\n        type: actions.SIGNUP_CLEAR\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const signup = (signupData) =>{\r\n\r\n    \r\n    const apiKey = 'AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE';\r\n    const endPoint = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`\r\n\r\n    return dispatch => {\r\n        dispatch(signupClear())\r\n        dispatch(signupStart())\r\n        \r\n        axios.post(endPoint, {...signupData,returnSecureToken: true})\r\n            .then(response => {\r\n                dispatch(signupSuccess())\r\n            })\r\n            .catch(error => {\r\n                dispatch(signupFail(error))\r\n            })\r\n    }\r\n}","import React from 'react';\r\nimport './spinner.scss'\r\n\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='spinner'>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Spinner ;","import React from 'react';\r\nimport './backdrop.scss';\r\n\r\n\r\n\r\nconst Backdrop = (props) => {\r\n    const {clicked} = props;\r\n    return (\r\n        <div className='backdrop' onClick={clicked}></div>\r\n    )\r\n}\r\n\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport './alert.scss';\r\nimport Backdrop from '../../containers/Backdrop/Backdrop';\r\n\r\n\r\nconst Alert = props => {\r\n\r\n    const {closeAlert} = props;\r\n    console.log(props)\r\n\r\n    return(\r\n        <>\r\n            <Backdrop clicked={closeAlert}/>\r\n            <div className='alert'>\r\n                {props.children}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Alert;","import React from 'react';\r\nimport Modal from '../../recycle/Alert/Alert';\r\nimport useHttpErrorHandler from '../../hooks/useHttpErrorHandler'\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return props => {\r\n      const [error, confirmError] = useHttpErrorHandler(axios);\r\n        return(\r\n            <>\r\n               {error?<Modal show={error !== null} closeModal={confirmError}>\r\n                   {error.message}\r\n               </Modal>:null}\r\n\r\n               <WrappedComponent {...props}/>\r\n           </>\r\n            )\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","\r\nimport {useState,useEffect} from 'react';\r\n\r\nexport default httpClient => {\r\n    const [error, setError] = useState(null)\r\n\r\n        const reqInterceptor = httpClient.interceptors.request.use(req => {\r\n            setError(null)\r\n            return req;\r\n        })\r\n        const resInterceptor = httpClient.interceptors.response.use(res => res, err => {\r\n            setError(err)\r\n        })\r\n\r\n        useEffect(() => {\r\n            return () => {\r\n                httpClient.interceptors.request.eject(reqInterceptor);\r\n                httpClient.interceptors.response.eject(resInterceptor);\r\n            }\r\n        // eslint-disable-next-line\r\n        },[reqInterceptor,resInterceptor]) \r\n\r\n        const confirmError = () => {\r\n            setError(null)\r\n        }\r\n\r\n    return [error,confirmError]\r\n}","import React from 'react';\r\nimport './burger-ingredient.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BurgerIngredient = props => {\r\n    let ingredient = null;\r\n\r\n        switch(props.type){\r\n            case('bread-bottom'):\r\n                ingredient = <div className='bread-bottom'></div>;\r\n                break;\r\n            \r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className='bread-top'>\r\n                        <div className='seeds1'></div>\r\n                        <div className='seeds2'></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            \r\n            case('meat'):\r\n                ingredient = <div className='meat'></div>\r\n                break;\r\n            \r\n            case('cheese'):\r\n                ingredient = <div className='cheese'></div>\r\n                break;\r\n            \r\n            case('bacon'):\r\n                ingredient = <div className='bacon'></div>\r\n                break;\r\n            \r\n            case('salad'):\r\n                ingredient = <div className='salad'></div>\r\n                break;\r\n            \r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n}\r\n\r\n\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport './burger.scss';\r\nimport '../../recycle/Scrollbar/scrollbar.scss';\r\nimport BurgerIngredient from '../BurgerIngredient/BurgerIngredient';\r\n\r\n\r\nconst burger = (props) =>{\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_,i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        })\r\n    })\r\n    .reduce((igArray,currentIg)=>{\r\n        return igArray.concat(currentIg)\r\n    },[]);\r\n\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients = <p className='burger__instruction'>FEEL FREE TO ADD INGREDIENTS</p>\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className='burger scrollbar'>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default burger;","import React from 'react';\r\nimport './logo.scss';\r\n\r\nconst Logo = (props) => {\r\n    return (\r\n        <div className='logo'></div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React  from 'react';\r\nimport './navigationitems.scss'\r\nimport '../../recycle/Link/link.scss'\r\nimport {NavLink} from 'react-router-dom';\r\n// import NavigationItem from '../NavigationItem/NavigationItem';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nconst NavigationItems = (props) =>{\r\n    const {closeSideDrawer} = props;\r\n    const token = useSelector(state => state.login.token);\r\n    const isAuthenticated = token !== null;\r\n\r\n    return(\r\n        <ul className='navigation-items'  onClick={closeSideDrawer}>\r\n            \r\n            <li className={'navigation-item'}>\r\n                <NavLink \r\n                    to='/'\r\n                    exact\r\n                    className='link--nav'\r\n                    activeClassName={'active'}\r\n                >Burger Builder</NavLink>\r\n            </li>\r\n\r\n            {isAuthenticated?<li className={'navigation-item'}>\r\n                <NavLink \r\n                    to='/profile'\r\n                    exact\r\n                    className='link--nav'\r\n                    activeClassName={'active'}\r\n                >Profile</NavLink>\r\n            </li>: null}\r\n\r\n              \r\n            {isAuthenticated?<li className={'navigation-item'}>\r\n                <NavLink \r\n                    to='/orders'\r\n                    exact\r\n                    className='link--nav'\r\n                    activeClassName={'active'}\r\n                >Orders</NavLink>\r\n            </li>: null}\r\n\r\n            <li className={'navigation-item'}>\r\n                <NavLink \r\n                    to={isAuthenticated?'/logout' : '/login'}\r\n                    exact\r\n                    className='link--nav'\r\n                    activeClassName={'active'}\r\n                >{isAuthenticated? 'Logout': 'Login'}</NavLink>\r\n            </li>\r\n\r\n        </ul>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport './drawertoggle.scss';\r\n\r\nconst drawerToggle = (props) => {\r\n    const {toggleSideDrawer} = props;\r\n    return (\r\n        // <div onClick={props.clicked}>MENU</div>\r\n        <div onClick={toggleSideDrawer} className={'drawertoggle'}>\r\n            <div className={'drawertoggle__bar'}></div>\r\n            <div className={'drawertoggle__bar'}></div>\r\n            <div className={'drawertoggle__bar'}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport './toolbar.scss';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'; \r\nimport DrawerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst Toolbar = (props) => {\r\n\r\n    const {toggleSideDrawer} = props;\r\n\r\n    return (\r\n        <div className='toolbar'>\r\n            <DrawerToggle toggleSideDrawer={toggleSideDrawer}/>\r\n            <Logo/>\r\n            <nav className='toolbar__nav'>\r\n                <NavigationItems/>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar;\r\n\r\n","import React from 'react';\r\nimport './sidedrawer.scss';\r\n\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst SideDrawer = (props ) => {\r\n\r\n    const {\r\n        sideDrawerOpen,\r\n        closeSideDrawer,\r\n        isAuthenticated} = props;\r\n\r\n    return(\r\n        <>\r\n            {sideDrawerOpen?<Backdrop clicked={closeSideDrawer}/>:null}\r\n            <div className={sideDrawerOpen? 'sidedrawer--open' : 'sidedrawer--close'}>\r\n                <nav>\r\n                    <NavigationItems side isAuthenticated={isAuthenticated} closeSideDrawer={closeSideDrawer}/> \r\n                </nav>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default SideDrawer;","import React, {useState} from 'react';\r\nimport './layout.scss';\r\nimport Toolbar from '../Toolbar/Toolbar'; \r\nimport SideDrawer from '../SideDrawer/SideDrawer';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst Layout = props => {\r\n    const {children} = props;\r\n    const isAuthenticated = useSelector(state => state.login.token !== null)\r\n    const [sideDrawerOpen, showSideDrawer] = useState(false)\r\n\r\n    const closeSideDrawer = () => {\r\n        showSideDrawer(false)\r\n    }\r\n\r\n    const toggleSideDrawer = () => {\r\n        showSideDrawer(!sideDrawerOpen)\r\n    }\r\n\r\n    return(\r\n        <div className=\"app\">\r\n            <Toolbar toggleSideDrawer={toggleSideDrawer} isAuthenticated={isAuthenticated}/>\r\n            <SideDrawer isAuthenticated={isAuthenticated} sideDrawerOpen={sideDrawerOpen} closeSideDrawer={closeSideDrawer}/>\r\n            <main className='main'>\r\n                {children}\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Layout;","import React from 'react';\r\nimport '../../recycle/Button/button.scss'\r\nimport './build-control.scss';\r\n\r\nconst control = (props) => {\r\n\r\n    const {label,removeIngredient,disabled,addIngredient} = props;\r\n    return(\r\n        <div className ='build-control'>\r\n            <div className='build-control__label'>{label}</div>\r\n            <button \r\n                className='button--less build-control__button' \r\n                onClick={removeIngredient}\r\n                disabled={disabled}\r\n            >\r\n            Less\r\n            </button>\r\n\r\n            <button \r\n                className='button--more build-control__button'\r\n                onClick={addIngredient}\r\n            >\r\n            More\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default control;","import React from 'react';\r\nimport '../../recycle/Button/button.scss';\r\nimport './build-controls.scss';\r\nimport BuildControl from '../BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\nconst BuildControls = (props) => {\r\n    const {\r\n        startOrder,\r\n        disabled,\r\n        price,\r\n        addIngredient,\r\n        removeIngredient,\r\n    } = props;\r\n\r\n    const buttonStatus = {...disabled}\r\n    const orderStatus = !(Object.keys(buttonStatus).map(statusKey=>{\r\n        return (!buttonStatus[statusKey])\r\n    }).reduce((overallStatus, currentButtonStatus)=>{\r\n        return (overallStatus || currentButtonStatus)\r\n    },false))\r\n\r\n    return (\r\n        <div className='build-controls'>\r\n            <p className='build-controls__price'>Current price: <span>${price.toFixed(2)}</span></p>\r\n            {controls.map(control => {\r\n                return (\r\n                <BuildControl \r\n                    key={control.label}\r\n                    label={control.label}\r\n                    addIngredient={() => addIngredient(control.type)}\r\n                    removeIngredient={() => removeIngredient(control.type)}\r\n                    disabled={disabled[control.type]}\r\n                />\r\n                )\r\n            })}\r\n            \r\n            \r\n            <button \r\n                className='button--success build-controls__order'\r\n                disabled={orderStatus} \r\n                onClick={startOrder}>Order now!</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BuildControls;","import React from 'react';\r\nimport '../../recycle/Button/button.scss'\r\nimport './login-prompt.scss';\r\n\r\nconst LoginPrompt = props => {\r\n    const {cancelOrder,goToLogin} = props;\r\n    return (\r\n        <div className='login-prompt'>\r\n            <p className='login-prompt__toolkit'>Please login to continue</p>\r\n            <button type=\"button\" className='button--failed login-prompt__button' onClick={cancelOrder}>Cancel</button>\r\n            <button type=\"button\" className='button--success login-prompt__button' onClick={goToLogin}>Login</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginPrompt\r\n\r\n","import {useState} from 'react';\r\n\r\nconst useAlert = () => {\r\n    const [alertShown,showAlert] = useState(false);\r\n    return [alertShown,showAlert]\r\n}\r\n\r\nexport default useAlert;","import React, {useEffect} from 'react';\r\nimport Burger from '../../containers/Burger/Burger';\r\nimport database from '../../axios/database';\r\nimport BuildControls from '../../containers/BuildControls/BuildControls';\r\nimport Alert from '../../recycle/Alert/Alert';\r\n// import OrderSummary from '../../containers/OrderSummary/OrderSummary';\r\nimport Spinner from '../../recycle/Spinner/Spinner';\r\nimport LoginPrompt from '../LoginPrompt/LoginPrompt';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport useAlert from '../../hooks/useAlert';\r\nimport * as actions from '../../store/actions/exports';\r\n\r\n\r\nconst BurgerBuilder = props => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [alertShown,showAlert] = useAlert();\r\n    const addIngredient = (ingName) => dispatch(actions.addIngredient(ingName))\r\n    const removeIngredient = (ingName) => dispatch(actions.removeIngredient(ingName))\r\n\r\n        \r\n    const ings = useSelector(state => state.buildBurger.ingredients)\r\n    const price = useSelector(state => state.buildBurger.totalPrice)\r\n    const error = useSelector(state => state.buildBurger.error)\r\n    const isAuthenticated = useSelector(state => state.login.token !== null)\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.initIngredients())\r\n    // eslint-disable-next-line\r\n    },[])\r\n\r\n    const startOrder = () => {\r\n        if(isAuthenticated){\r\n            props.history.replace('/checkout')\r\n        }else{\r\n            showAlert(true);\r\n        }\r\n    }\r\n    const cancelOrder = () => showAlert(false)\r\n    const goToLogin = () => {props.history.replace('/login');showAlert(false)}\r\n\r\n    const disabledInfo = {...ings}\r\n    for (let key in disabledInfo){\r\n        disabledInfo[key] = (disabledInfo[key] <= 0)\r\n    }\r\n\r\n\r\n    let burger = error ? <p>Ingredients can't be loaded :(</p> : <Spinner/>\r\n\r\n    if(ings){\r\n        burger = (\r\n            <>\r\n                <Burger ingredients={ings}/>\r\n                <BuildControls\r\n                    addIngredient={addIngredient}\r\n                    removeIngredient={removeIngredient}\r\n                    disabled={disabledInfo}\r\n                    price={price}\r\n                    startOrder={startOrder}\r\n                />\r\n                \r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {alertShown?<Alert closeAlert={cancelOrder}>\r\n                <LoginPrompt cancelOrder={cancelOrder} goToLogin={goToLogin}/>\r\n            </Alert>:null}\r\n\r\n            {burger}\r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default withErrorHandler(BurgerBuilder,database);","import React,{ useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport * as actions from '../../store/actions/exports'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst Logout = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.logout())\r\n    // eslint-disable-next-line\r\n    },[])\r\n\r\n    return (\r\n        <Redirect to = '/' />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React, {useEffect, Suspense} from 'react';\r\nimport Layout from '../Layout/Layout';\r\nimport BurgerBuilder from '../BurgerBuilder/BurgerBuilder';\r\nimport Logout from '../Logout/Logout';\r\n// import Login from '../../experimental/Login/Login';\r\nimport {Route, Switch,Redirect} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports'\r\nimport Spinner from '../../recycle/Spinner/Spinner'\r\nimport database from '../../axios/database';\r\n\r\nconst Checkout = React.lazy(() => import ('../Checkout/Checkout'))\r\nconst Orders = React.lazy(() => import ('../Orders/Orders'))\r\nconst Login = React.lazy(() => import ('../Login/Login'))\r\nconst Signup = React.lazy(() => import ('../Signup/Signup'))\r\nconst Profile = React.lazy(() => import('../Profile/Profile'))\r\n\r\nconst App = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(state => state.login.token)\r\n  const userId = useSelector(state => state.login.userId)\r\n  \r\n  useEffect(() => {\r\n    console.log(userId)\r\n    if(userId){\r\n      const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\r\n      database.get(`/users.json${queryParams}`)\r\n      .then(response => {\r\n        console.log(response)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    }\r\n  },[userId,token])\r\n\r\n\r\n\r\n  dispatch(actions.checkAuth(token))\r\n\r\n  const isAuthenticated = token !== null;\r\n\r\n\r\n  const routes = function (isAuthenticated){\r\n    if(isAuthenticated){\r\n      return (\r\n          <>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/checkout\" component={Checkout}/></Suspense>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/orders\" component={Orders}/></Suspense>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/profile\" component={Profile}/></Suspense>\r\n            <Route path=\"/logout\" component={Logout}/>\r\n            <Route path=\"/\" exact component={BurgerBuilder}/>\r\n            <Redirect to =\"/\" />\r\n          </>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n          <Suspense fallback={<Spinner/>}><Route path=\"/login\" component={Login} /></Suspense>\r\n          <Suspense fallback={<Spinner/>}><Route path=\"/signup\" component={Signup} /></Suspense>\r\n          {/* <Route path=\"/auth\" component={Auth} /> */}\r\n          <Route path=\"/\" exact component={BurgerBuilder}/>\r\n          <Redirect to = \"/\"/>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Layout>\r\n      <Switch>\r\n          {routes(isAuthenticated)}\r\n      </Switch>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n}\r\n\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n\r\n        case actions.SET_INGREDIENTS:{\r\n            const _ = deepClone(state);\r\n            if(!_.ingredients){\r\n                _.ingredients = {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat\r\n                    }\r\n\r\n                _.error = false;\r\n                _.purchasing = false;\r\n                return _\r\n\r\n            } else {\r\n                _.error = false;\r\n                return _\r\n            }\r\n        }\r\n              \r\n        \r\n        case actions.FETCH_INGREDIENTS_FAILED:{\r\n            const _ = deepClone(state)\r\n            _.error = true;\r\n            return _;       \r\n        }\r\n\r\n        case actions.ADD_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] ++;  \r\n            _.totalPrice += INGREDIENT_PRICES[action.ingredient];\r\n\r\n            return _;\r\n        }\r\n\r\n        case actions.REMOVE_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] --;   \r\n            _.totalPrice -= INGREDIENT_PRICES[action.ingredient];        \r\n            return _;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    purchased: false,\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n\r\n        case actions.CHECKOUT_BURGER: {\r\n            const _ = deepClone(state);\r\n            _.purchased = false\r\n            return _\r\n        }\r\n\r\n        case actions.PURCHASE_BURGER_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            _.purchased = true;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_START:{\r\n            const _ = deepClone(state);\r\n            _.loading = true;\r\n            return _;\r\n        }\r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    fetching: true,\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        \r\n        case actions.FETCH_ORDERS_START:\r\n            const _ = deepClone(state);\r\n            _.fetching = true;\r\n            return _;\r\n\r\n\r\n        case actions.FETCH_ORDERS_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.orders = action.orders;\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.FETCH_ORDERS_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n        \r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actions.LOGIN_START:{\r\n            const _ = deepClone(state);\r\n            _.loading = true;\r\n            _.error = null;\r\n            return _;\r\n        }\r\n\r\n        case actions.LOGIN_STORE:{\r\n            const _ = deepClone(state);\r\n            _.token = action.authData.idToken\r\n            _.userId = action.authData.localId\r\n            _.error = null\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.LOGIN_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.error = action.error\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.LOGOUT:{\r\n            const _ = deepClone(state);\r\n            _.token = null\r\n            _.userId = null\r\n            return _;\r\n        }\r\n        \r\n        default: \r\n            return (state)\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    error: null,\r\n    loading: false,\r\n    isSignupComplete: false\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actions.SIGNUP_START:{\r\n            const _ = deepClone(state);\r\n            _.loading = true;\r\n            _.error = null;\r\n            return _;\r\n        }\r\n\r\n        case actions.SIGNUP_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.isSignupComplete = true\r\n            _.error = null\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.SIGNUP_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.error = action.error\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.SIGNUP_CLEAR:{\r\n            const _ = deepClone(state);\r\n            _.isSignupComplete = false\r\n            return _;\r\n        }\r\n        \r\n        default: \r\n            return (state)\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/index.scss';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, combineReducers, compose} from 'redux';\r\n// import reducer from './store/reducer';\r\nimport buildBurger from './store/reducers/buildBurger'\r\nimport placeOrder from './store/reducers/placeOrder'\r\nimport fetchOrders from './store/reducers/fetchOrders'\r\nimport login from './store/reducers/login'\r\nimport signup from './store/reducers/signup'\r\nimport thunk from 'redux-thunk';\r\n\r\n//Basic redux setup\r\n// const store = createStore(burgerBuilderReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconst composeEnhancers = (process.env.NODE_ENV === 'development'? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  buildBurger: buildBurger,\r\n  placeOrder: placeOrder,\r\n  fetchOrders: fetchOrders,\r\n  login: login,\r\n  signup: signup\r\n})\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n      applyMiddleware(thunk)\r\n    ));\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter  basename=\"/burgerbuilder\">\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>//disabled to show popUp :(\r\n    <>\r\n      {app}\r\n    </>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}