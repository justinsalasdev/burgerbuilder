{"version":3,"sources":["recycle/Prompt/Prompt.js","containers/Checkout/Checkout.js"],"names":["Prompt","props","children","acknowledgeAlert","className","type","onClick","Checkout","dispatch","useDispatch","useAlert","alertShown","showAlert","burgerItems","ingredients","useSelector","state","buildBurger","totalPrice","toFixed","userData","login","idToken","userId","checkOutMessage","placeOrder","loading","orderData","console","log","test","history","replace","ingredient","push","key","style","color","marginBottom","length","zipCode","country","name","contactNumber","actions","closeAlert"],"mappings":"wGAAA,2BAYeA,IATA,SAAAC,GAAU,IACdC,EAA6BD,EAA7BC,SAASC,EAAoBF,EAApBE,iBAChB,OACI,yBAAKC,UAAU,gBACX,uBAAGA,UAAU,yBAAyBF,GACtC,4BAAQG,KAAK,SAASD,UAAU,uCAAuCE,QAASH,GAAhF,S,uLCuGGI,UAhGE,SAAAN,GAEb,IAAMO,EAAWC,cAFK,EAGUC,aAAS,GAHnB,mBAGfC,EAHe,KAGHC,EAHG,KAMhBC,EAAc,GACdC,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYH,eACrDI,EAAaH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,WAAWC,QAAQ,MACvEC,EAAWL,aAAY,SAAAC,GAAK,OAAIA,EAAMK,MAAMD,YAC5CE,EAAUP,aAAY,SAAAC,GAAK,OAAIA,EAAMK,MAAMC,WAC3CC,EAASR,aAAY,SAAAC,GAAK,OAAIA,EAAMK,MAAME,UAC1CC,EAAkBT,aAAY,SAAAC,GAAK,OAAIA,EAAMS,WAAWD,mBACxDE,EAAUX,aAAY,SAAAC,GAAK,OAAIA,EAAMS,WAAWC,WAEhDC,EAAY,CACdb,cACAI,aACAK,UAGJK,QAAQC,IAAIF,GAGZ,IAAMxB,EAAmB,WAElB,aAAa2B,KAAKN,IACjBvB,EAAM8B,QAAQC,QAAQ,KACtBpB,GAAU,IAEVA,GAAU,IAclB,IAAK,IAAMqB,KAAcnB,EACjBA,EAAYmB,GAAc,GAC1BpB,EAAYqB,KACR,wBAAI9B,UAAS,mDAA8C6B,GAAcE,IAAKF,GAC1E,8BAAOA,EAAP,OAA6BnB,EAAYmB,KAKzD,OACI,oCACKP,EACG,6BACI,uBAAGU,MAAO,CAACC,MAAM,QAAQC,aAAa,SAAtC,yBACA,kBAAC,IAAD,OAGR,oCACI,kBAAC,IAAD,CAAQxB,YAAaA,IACrB,6BAASV,UAAU,iBACf,wBAAIA,UAAU,0BAAd,iBACA,wBAAIA,UAAU,wBACV,8BAAOS,EAAY0B,OAAS,EAAI,cAAgB,cAC/C1B,GAEL,uBAAGT,UAAU,wBACT,gDADJ,IACiCc,GAEjC,6BAASd,UAAU,0BACf,4CADJ,UAC+BgB,EAASoB,QADxC,YACmDpB,EAASqB,SAAU,6BAClE,6CAAyBrB,EAASsB,KAAK,6BACvC,4CAAwBtB,EAASuB,eAGrC,6BACI,4BAAQtC,KAAK,SAASD,UAAU,qCAAqCE,QAvClE,WACnBL,EAAM8B,QAAQC,QAAQ,OAsCN,QACA,4BAAQ3B,KAAK,SAASD,UAAU,wCAAwCE,QA5C3E,WACbE,EAASoC,IAAuBjB,EAAUL,EAAQV,MA2ClC,eAMVD,EACE,kBAAC,IAAD,CAAOkC,WAAY1C,GACf,kBAAC,IAAD,CAAgBA,iBAAkBA,GAAmBqB,IAF9C","file":"static/js/7.c4671ce1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './prompt.scss'\r\n\r\nconst Prompt = props => {\r\n    const {children,acknowledgeAlert} = props \r\n    return (\r\n        <div className='error-prompt'>\r\n            <p className='error-prompt__toolkit'>{children}</p>\r\n            <button type=\"button\" className='button--success error-prompt__button' onClick={acknowledgeAlert}>OK</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Prompt;\r\n\r\n","import './order-summary.scss'\r\nimport '../../recycle/Button/button.scss';\r\n\r\nimport React from 'react';\r\nimport Burger from '../Burger/Burger';\r\nimport { useSelector } from 'react-redux';\r\nimport Alert from '../../recycle/Alert/Alert';\r\nimport useAlert from '../../hooks/useAlert';\r\nimport CheckoutPrompt from '../../recycle/Prompt/Prompt';\r\nimport * as actions from '../../store/actions/exports';\r\nimport Spinner from '../../recycle/Spinner/Spinner';\r\n\r\nimport {useDispatch} from 'react-redux';\r\n\r\n\r\nconst Checkout = props => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [alertShown, showAlert] = useAlert(false);\r\n\r\n    \r\n    const burgerItems = [];\r\n    const ingredients = useSelector(state => state.buildBurger.ingredients);\r\n    const totalPrice = useSelector(state => state.buildBurger.totalPrice.toFixed(2));\r\n    const userData = useSelector(state => state.login.userData);\r\n    const idToken = useSelector(state => state.login.idToken)\r\n    const userId = useSelector(state => state.login.userId)\r\n    const checkOutMessage = useSelector(state => state.placeOrder.checkOutMessage)\r\n    const loading = useSelector(state => state.placeOrder.loading)\r\n\r\n    const orderData = {\r\n        ingredients,\r\n        totalPrice,\r\n        userId\r\n    }\r\n\r\n    console.log(orderData)\r\n\r\n\r\n    const acknowledgeAlert = () => {\r\n        \r\n        if(/[Tt]hank.*/.test(checkOutMessage)){\r\n            props.history.replace('/')\r\n            showAlert(false);\r\n        } else {\r\n            showAlert(false)\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    const purchase = () => {\r\n        dispatch(actions.purchaseBurger(orderData,idToken,showAlert))\r\n    }\r\n\r\n    const cancelPurchase = () => {\r\n        props.history.replace('/')\r\n    }\r\n\r\n    for (const ingredient in ingredients) {\r\n        if (ingredients[ingredient] > 0)\r\n            burgerItems.push(\r\n                <li className={`order-summary__item order-summary__item--${ingredient}`} key={ingredient}>\r\n                    <span>{ingredient} : </span>{ingredients[ingredient]}\r\n                </li>\r\n            )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading? (\r\n                <div>\r\n                    <p style={{color:'wheat',marginBottom:'1rem'}}>Placing your order...</p>\r\n                    <Spinner/>\r\n                </div>\r\n            ):\r\n            <>\r\n                <Burger ingredients={ingredients} />\r\n                <section className=\"order-summary\">\r\n                    <h3 className=\"order-summary__heading\">Order Summary</h3>\r\n                    <ul className=\"order-summary__items\">\r\n                        <span>{burgerItems.length > 1 ? 'Ingredients' : 'Ingredient'}</span>\r\n                        {burgerItems}\r\n                    </ul>\r\n                    <p className=\"order-summary__price\">\r\n                        <span>Total Price : </span>${totalPrice}\r\n                    </p>\r\n                    <address className=\"order-summary__address\">\r\n                        <span>Ship to : </span>{`${userData.zipCode} ${userData.country}`}<br />\r\n                        <span>Receiver : </span>{userData.name}<br />\r\n                        <span>Contact : </span>{userData.contactNumber}\r\n                    </address>\r\n\r\n                    <nav>\r\n                        <button type=\"button\" className=\"button--more order-summary__button\" onClick={cancelPurchase}>Back</button>\r\n                        <button type=\"button\" className=\"button--success order-summary__button\" onClick={purchase}>Purchase</button>\r\n                    </nav>\r\n                </section>\r\n            </>\r\n            }\r\n\r\n            {!alertShown ? null :\r\n                <Alert closeAlert={acknowledgeAlert}>\r\n                    <CheckoutPrompt acknowledgeAlert={acknowledgeAlert}>{checkOutMessage}</CheckoutPrompt>\r\n                </Alert>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Checkout;"],"sourceRoot":""}