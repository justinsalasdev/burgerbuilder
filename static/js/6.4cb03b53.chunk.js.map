{"version":3,"sources":["containers/ContactData/ContactData.module.css","recycle/Button/Button.js","containers/CheckoutSummary/CheckoutSummary.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","containers/Input/Input.js","containers/ContactData/ContactData.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","containers/Checkout/Checkout.js"],"names":["module","exports","Button","props","className","btnType","onClick","clicked","type","disabled","children","checkoutSummary","style","width","height","margin","Burger","ingredients","checkoutCancelled","checkoutContinued","_defineProperties","target","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","input","inputElement","inputField","valid","touched","elementType","elementConfig","name","value","onChange","changed","options","map","option","displayValue","ContactData","subClass","superClass","TypeError","create","Derived","Constructor","protoProps","staticProps","result","Super","NewTarget","this","arguments","apply","Orderfield","config","validation","instance","state","orderForm","placeholder","required","street","zipCode","minLength","maxLength","country","email","deliveryMethod","loading","orderHandler","bind","inputChangedHandler","submitScreen","event","updatedOrderForm","updatedFormElement","validate","setState","preventDefault","formData","formElement","order","ings","price","toFixed","orderData","userId","onOrderBurger","token","rules","trim","reduce","accumulator","currentValue","entries","keys","formElementsArray","push","id","form","onSubmit","Input","Spinner","purchased","to","classes","Component","connect","buildBurger","totalPrice","placeOrder","idToken","login","dispatch","actions","withErrorHandler","database","Checkout","useDispatch","useSelector","summary","CheckoutSummary","history","replace","path","match","component"],"mappings":"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","file":"static/js/6.4cb03b53.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2IEj4\"};","import React from 'react';\r\nimport './button.scss'\r\n\r\nconst Button = (props) => {\r\n    return(\r\n        <button\r\n            className={`button ${props.btnType}`}\r\n            onClick={props.clicked}\r\n            type={props.type}\r\n            disabled={props.disabled}\r\n        >\r\n        {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport default Button;","import React from 'react';\r\nimport Burger from '../Burger/Burger'; \r\nimport Button from '../../recycle/Button/Button';\r\nimport './checkout-summary.scss'\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={'checkout-summary'}>\r\n            <h2>We hope it tastes well!</h2>\r\n            <div style={{width: '30rem', height: '30rem', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}\r\n                type=\"button\"\r\n                disabled={false}\r\n                >Cancel</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}\r\n                type=\"button\"\r\n                disabled={false}\r\n                >Continue</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default checkoutSummary;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import React from 'react';\r\nimport './input.scss';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputField = (!props.valid && props.touched)? 'input__field input__field--invalid' : 'input__field';\r\n\r\n    switch(props.elementType){\r\n        case('input'):\r\n            inputElement = <input \r\n                            className={inputField} \r\n                            {...props.elementConfig}\r\n                            name={props.name}\r\n                            value={props.value}\r\n                            onChange={props.changed} />\r\n                            \r\n            break;\r\n\r\n        case('email'):\r\n        inputElement = <input \r\n                        className={inputField} \r\n                        {...props.elementConfig}\r\n                        name={props.name}\r\n                        value={props.value}\r\n                        onChange={props.changed} />\r\n                        \r\n        break;\r\n\r\n        case('password'):\r\n        inputElement = <input \r\n                        className={inputField} \r\n                        {...props.elementConfig}\r\n                        name={props.name}\r\n                        value={props.value}\r\n                        onChange={props.changed} />\r\n                        \r\n        break;\r\n        \r\n        case('textarea'):\r\n            inputElement = <textarea \r\n                            className={inputField} \r\n                            {...props.elementConfig}\r\n                            name={props.name}\r\n                            value={props.value} \r\n                            onChange={props.changed}/>\r\n            break;\r\n\r\n\r\n        case('select'):\r\n        inputElement = <select\r\n                            className={inputField} \r\n                            name={props.name}\r\n                            value={props.value}\r\n                            onChange={props.changed}>\r\n                            {props.elementConfig.options.map(option => {\r\n                                return(\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.displayValue}\r\n                                    </option>\r\n                                )\r\n                                \r\n                            })}\r\n                       </select>\r\n            break;\r\n\r\n\r\n        default:\r\n            inputElement = <input \r\n                            className={inputField} \r\n                            {...props.elementConfig}\r\n                            name={props.name}\r\n                            value={props.value}\r\n                            onChange={props.changed} />\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={'input'}>\r\n            {/* <label className={classes.Label}>{props.label}</label> */}\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default input;","import React, {Component, Fragment} from 'react';\r\nimport Button from '../../recycle/Button/Button';\r\nimport Spinner from '../../recycle/Spinner/Spinner';\r\nimport Input from '../Input/Input';\r\nimport classes from './ContactData.module.css';\r\nimport database from '../../axios/database';\r\nimport {connect} from 'react-redux';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/exports';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass ContactData extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        function Orderfield(type,config,validation,value){\r\n            \r\n                this.touched = false;\r\n                this.elementType = type;\r\n                this.elementConfig = config;\r\n                this.validation = validation;   \r\n                this.value = value;\r\n                \r\n        }\r\n\r\n        const zipCodeValidation = {\r\n            required:true,\r\n            minLength: 5,\r\n            maxLength: 5,\r\n            valid:false\r\n        }\r\n\r\n        const deliveryConfig = {\r\n            options:[\r\n                {value: 'fastest', displayValue:'Fastest'},\r\n                {value: 'cheapest',displayValue:'Cheapest'}\r\n            ]\r\n        }\r\n\r\n        this.state = {\r\n            orderForm: {\r\n                name: new Orderfield('input',{type:'text', placeholder:'Your Name'},{required:true,valid:false},''),\r\n                street: new Orderfield('input',{type:'text', placeholder:'Street'},{required:true,valid:false},''),\r\n                zipCode: new Orderfield('input',{type:'text', placeholder:'ZIP Code'}, zipCodeValidation,''),\r\n                country: new Orderfield('input',{type:'text', placeholder:'Country'},{required:true,valid:false},''),\r\n                email: new Orderfield('email',{type:'email', placeholder:'Email'},{required:true,valid:false},''),\r\n                deliveryMethod:new Orderfield('select',deliveryConfig,{required:true,valid:true},'fastest')   \r\n            },\r\n            loading: false\r\n        }\r\n        \r\n\r\n       \r\n\r\n        this.orderHandler = this.orderHandler.bind(this);\r\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\r\n        this.submitScreen = this.submitScreen.bind(this);\r\n\r\n    }\r\n    \r\n\r\n\r\n    inputChangedHandler(event){\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[event.target.name]\r\n        }\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.validation.valid = this.validate(updatedFormElement.value,updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[event.target.name] = updatedFormElement; \r\n        this.setState({orderForm: updatedOrderForm});\r\n    }\r\n\r\n    orderHandler(event){\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElement in this.state.orderForm){\r\n            formData[formElement] = this.state.orderForm[formElement].value;\r\n        }\r\n    \r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price.toFixed(2),\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n\r\n        this.props.onOrderBurger(order,this.props.token)\r\n    }\r\n\r\n    validate(value,rules){\r\n\r\n        const isValid = [\r\n            rules.required? (value.trim() !== '') : true,\r\n            rules.minLength? (value.length >= rules.minLength) : true,\r\n            rules.maxLength? (value.length <= rules.maxLength) : true \r\n        ].reduce((accumulator,currentValue) => accumulator && currentValue)\r\n\r\n        return isValid\r\n    }\r\n\r\n    submitScreen(){\r\n        const entries = {\r\n            ...this.state.orderForm\r\n        }\r\n\r\n        const validation = [\r\n            ...Object.keys(entries)\r\n            ].map(key => {\r\n                return entries[key].validation.valid\r\n            }).reduce((accumulator,currentValue) => {\r\n                return accumulator && currentValue\r\n            })\r\n        \r\n        return validation;\r\n    }\r\n \r\n    render(){\r\n        \r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n            });\r\n\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                    {formElementsArray.map(formElement => {\r\n                        return (\r\n                            <Input \r\n                                key={formElement.id}\r\n                                elementType={formElement.config.elementType}\r\n                                elementConfig={formElement.config.elementConfig}\r\n                                name={formElement.id}\r\n                                value={formElement.config.value}\r\n                                changed={this.inputChangedHandler}\r\n                                valid={formElement.config.validation.valid}\r\n                                touched={formElement.config.touched}\r\n                                />\r\n                        )\r\n                    })}\r\n                    <Button type='submit' btnType=\"Success\" clicked={this.orderHandler} disabled={!this.submitScreen()}>ORDER</Button>\r\n            </form>\r\n        );\r\n\r\n        if(this.props.loading){\r\n            form = <Spinner/>\r\n        }\r\n\r\n        return(\r\n            <Fragment>\r\n                {this.props.purchased ? <Redirect to=\"/\"/> : null }\r\n                <div className={classes.ContactData}>\r\n                    <h4>Enter your contact data</h4>\r\n                    {form}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.buildBurger.ingredients,\r\n        price: state.buildBurger.totalPrice,\r\n        loading: state.placeOrder.loading,\r\n        purchased: state.placeOrder.purchased,\r\n        idToken: state.login.idToken,\r\n        userId: state.login.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n     onOrderBurger: (orderData,idToken) => dispatch(actions.purchaseBurger(orderData,idToken))\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData, database));","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import React, {Fragment} from 'react';\r\nimport CheckoutSummary from '../CheckoutSummary/CheckoutSummary';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport ContactData from '../ContactData/ContactData';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports';\r\n\r\n\r\n\r\nconst Checkout = props => {\r\n        \r\n    \r\n    const dispatch = useDispatch();\r\n    const onCheckout = () => dispatch(actions.checkoutBurger())\r\n    const ings = useSelector(state => state.buildBurger.ingredients)\r\n\r\n\r\n    const cancelCheckout = () => {\r\n        props.history.replace('/');\r\n    }\r\n\r\n    const continueCheckout = () => {\r\n        onCheckout()\r\n        props.history.replace('/checkout/contact-data')\r\n    }\r\n\r\n    let summary = <Redirect to =\"/\"/>\r\n        if(ings){\r\n            summary  = <Fragment><CheckoutSummary \r\n                            ingredients={ings}\r\n                            checkoutCancelled={cancelCheckout}\r\n                            checkoutContinued={continueCheckout}\r\n                        />\r\n                        <Route \r\n                            path={props.match.path + '/contact-data'} \r\n                            component={ContactData}\r\n                        /></Fragment>\r\n        }\r\n    \r\n    return(\r\n        <div>\r\n            {summary}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout;"],"sourceRoot":""}