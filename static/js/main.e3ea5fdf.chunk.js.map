{"version":3,"sources":["store/actions/actions.js","axios/database.js","store/actions/buildBurger.js","store/actions/placeOrder.js","store/actions/fetchOrders.js","store/actions/login.js","store/actions/signup.js","recycle/Spinner/Spinner.js","recycle/Alert/Alert.js","recycle/Backdrop/Backdrop.js","hooks/useAlert.js","containers/withErrorHandler/withErrorHandler.js","hooks/useHttpErrorHandler.js","containers/BurgerIngredient/BurgerIngredient.js","containers/Burger/Burger.js","containers/Logo/Logo.js","containers/NavigationItems/NavigationItems.js","containers/DrawerToggle/DrawerToggle.js","containers/Toolbar/Toolbar.js","containers/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","containers/BuildControl/BuildControl.js","containers/BuildControls/BuildControls.js","containers/OrderPrompt/OrderPrompt.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Logout/Logout.js","containers/App/App.js","serviceWorker.js","store/reducers/buildBurger.js","store/reducers/placeOrder.js","store/reducers/fetchOrders.js","store/reducers/login.js","store/reducers/signup.js","index.js"],"names":["SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","ADD_INGREDIENT","REMOVE_INGREDIENT","CHECKOUT_BURGER","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","LOGIN_START","LOGIN_STORE","PROFILE_STORE","PROFILE_FAIL","LOGIN_FAIL","LOGIN_END","LOGOUT","SIGNUP_START","SIGNUP_END","SIGNUP_CONFLICT","database","axios","create","baseURL","addIngredient","ingredient","type","actions","removeIngredient","initIngredients","dispatch","get","then","response","ingredients","data","catch","error","checkoutBurger","purchaseBurger","orderData","idToken","post","purchaseBurgerFail","fetchOrders","token","userId","queryParams","res","orders","fetchedOrders","key","unshift","id","err","storeLoginData","setLogoutTimer","expiration","setTimeout","logout","localStorage","removeItem","checkAuth","getItem","expirationDate","Date","expiry","getTime","login","loginData","showAlert","endPoint","returnSecureToken","expiresIn","localId","setItem","getUserData","userData","Object","assign","storeUserData","message","console","log","handleLoginFailure","endSignup","endType","signup","formData","email","password","name","country","zipCode","contactNumber","signUpData","postSignupData","postUserData","deleteSignupData","handleSignupConflict","Spinner","className","Alert","props","closeAlert","clicked","children","Backdrop","onClick","useAlert","initialState","useState","withErrorHandler","WrappedComponent","httpClient","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","useEffect","eject","useHttpErrorHandler","confirmError","BurgerIngredient","burger","transformedIngredients","keys","map","igKey","Array","_","i","reduce","igArray","currentIg","concat","length","Logo","NavigationItems","closeSideDrawer","isAuthenticated","useSelector","state","to","exact","activeClassName","drawerToggle","toggleSideDrawer","Toolbar","DrawerToggle","SideDrawer","sideDrawerOpen","side","Layout","showSideDrawer","control","label","disabled","controls","BuildControls","startOrder","price","buttonStatus","orderStatus","statusKey","overallStatus","currentButtonStatus","toFixed","BuildControl","LoginPrompt","cancelOrder","goToLogin","useDispatch","alertShown","ings","buildBurger","totalPrice","disabledInfo","OrderPrompt","history","push","Burger","ingName","Logout","Checkout","React","lazy","Orders","Login","Signup","Profile","App","fallback","path","component","BurgerBuilder","routes","Boolean","window","location","hostname","match","INGREDIENT_PRICES","salad","cheese","meat","bacon","deepClone","object","JSON","parse","stringify","reducer","action","purchasing","loading","purchased","fetching","loginError","getUserError","composeEnhancers","compose","rootReducer","combineReducers","placeOrder","editProfile","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3ea5fdf.chunk.js","sourcesContent":["export const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n\r\nexport const CHECKOUT_BURGER = 'CHECKOUT_BURGER';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDER_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDER_FAIL';\r\n\r\n\r\n//login------------------------------------------\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_STORE = 'LOGIN_STORE';\r\nexport const PROFILE_STORE = 'PROFILE_STORE';\r\nexport const PROFILE_FAIL = 'PROFILE_FAIL';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGIN_END = 'LOGIN_END';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\n\r\n\r\n\r\nexport const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_END = 'SIGNUP_END';\r\nexport const SIGNUP_CONFLICT = 'SIGNUP_CONFLICT';\r\n\r\n\r\nexport const PROFILE_EDIT_START = 'PROFILE_EDIT';\r\nexport const PROFILE_SAVE_START = 'PROFILE_START_SAVE';\r\nexport const PROFILE_SAVE_END = 'PROFILE_STARTEND';\r\nexport const PROFILE_SAVE_FAILED = 'PROFILE_SAVE_FAILED';\r\nexport const PROFILE_EDIT_END = 'PROFILE_EDIT_END';\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\n\r\nconst database = axios.create({\r\n    baseURL: 'https://react-burger-builder-12ae6.firebaseio.com'\r\n});\r\n\r\n\r\nexport default database;","import * as actions from './actions';\r\nimport database from '../../axios/database';\r\n\r\n\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actions.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nconst fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actions.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const addIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.ADD_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.REMOVE_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch  => (\r\n       database.get('/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed())\r\n        })\r\n    )\r\n}","import * as actions from './actions';\r\nimport database from '../../axios/database';\r\n\r\n\r\n\r\n\r\nconst purchaseBurgerStart = () => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_SUCCESS,\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n//EXPORTS\r\nexport const checkoutBurger = () => {\r\n    return {\r\n        type: actions.CHECKOUT_BURGER\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData,idToken) => {\r\n    return dispatch => {\r\n        \r\n        dispatch(purchaseBurgerStart())\r\n        database.post('/orders.json?auth=' + idToken,orderData)\r\n        .then(response => {\r\n            dispatch(purchaseBurgerSuccess())\r\n        })\r\n        .catch(error => {\r\n            dispatch(purchaseBurgerFail(error))\r\n        })\r\n    }\r\n}","import * as actions from './actions';\r\nimport database from '../../axios/database';\r\n\r\n\r\n\r\nconst fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\n\r\nconst fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nconst fetchOrdersStart = () => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const fetchOrders = (token,userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart())\r\n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\r\n        database.get(`/orders.json${queryParams}`)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data){\r\n                    fetchedOrders.unshift({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err))\r\n            })\r\n    }\r\n}","import * as actions from './actions';\r\nimport axios from 'axios';\r\nimport database from '../../axios/database';\r\n\r\n\r\n//-------------------------------------------------------\r\nconst startLogin = () => {\r\n    return {\r\n        type: actions.LOGIN_START\r\n    }\r\n}\r\n\r\nconst storeLoginData = (idToken,userId) => {\r\n    return {\r\n        type: actions.LOGIN_STORE,\r\n        idToken,\r\n        userId\r\n    }\r\n}\r\n\r\nconst setLogoutTimer = (expiration) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        },expiration * 900)\r\n    }\r\n}\r\n\r\nconst getUserData = (idToken, userId) => {\r\n    const queryParams = `?auth=${idToken}2&orderBy=\"userId\"&equalTo=\"${userId}\"`\r\n    return database.get(`/users.json${queryParams}`)\r\n}\r\n\r\nconst storeUserData = (userData) => {\r\n    return {\r\n        type: actions.PROFILE_STORE,\r\n        userData\r\n    }\r\n}\r\n\r\nconst handleRetrieveFailure = (error) => {\r\n    return {\r\n        type: actions.PROFILE_FAIL,\r\n        error\r\n    }\r\n}\r\n\r\n\r\nconst handleLoginFailure = (error) => {\r\n    return {\r\n        type: actions.LOGIN_FAIL,\r\n        error\r\n    }\r\n}\r\n\r\n\r\n//--------------------------------------------------------------------------------------\r\n\r\n//exports\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId')\r\n    return {\r\n        type: actions.LOGOUT\r\n    }\r\n};\r\n\r\n\r\nexport const checkAuth = () => {\r\n    return dispatch => {\r\n        const idToken = localStorage.getItem('token');\r\n        if(!idToken){\r\n            dispatch(logout());\r\n            \r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n\r\n            if (expirationDate <= new Date()){\r\n\r\n                dispatch(logout());\r\n\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                const expiry = (expirationDate.getTime() - new Date().getTime())/1000;\r\n\r\n                dispatch(storeLoginData(idToken,userId))\r\n                dispatch(setLogoutTimer(expiry))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\nexport const login = (loginData,showAlert) =>{\r\n    return dispatch => {\r\n        dispatch(startLogin())\r\n        \r\n        const apiKey = 'AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE';\r\n        const endPoint = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`\r\n\r\n        axios.post(endPoint, {...loginData,returnSecureToken: true})\r\n            .then(\r\n                response => {\r\n                    const expirationDate = new Date( new Date().getTime() + new Date(response.data.expiresIn*1000).getTime())\r\n\r\n                    const userId = response.data.localId\r\n                    const idToken = response.data.idToken\r\n                    const expiry = response.data.expiresIn\r\n        \r\n                    localStorage.setItem('token',idToken)\r\n                    localStorage.setItem('expirationDate',expirationDate)\r\n                    localStorage.setItem('userId',userId)\r\n\r\n                    dispatch(storeLoginData(idToken,userId))\r\n                    dispatch(setLogoutTimer(expiry))\r\n\r\n                    getUserData(idToken,userId)\r\n                        .then(\r\n                            response => {\r\n                                const userData = {};\r\n                                for (const id in response.data){\r\n                                    Object.assign(userData,response.data[id])\r\n                                }\r\n                                dispatch(storeUserData(userData))\r\n                            })\r\n                            .catch(() => {\r\n                                const customError = {\r\n                                    message: 'Network Error! Failed to login'\r\n                                }\r\n                                dispatch(handleRetrieveFailure(customError))\r\n                                showAlert(true)\r\n                            })\r\n                },\r\n                error => {\r\n                    console.log('error handler2')\r\n                    dispatch(handleLoginFailure(error.response.data.error))\r\n                })  \r\n    }\r\n}","import * as actions from './actions';\r\nimport axios from 'axios';\r\nimport database from '../../axios/database';\r\n\r\n\r\n\r\nconst startSignup = () => {\r\n    return {\r\n        type: actions.SIGNUP_START\r\n    }\r\n    \r\n}\r\nconst endSignup = (endType) => {\r\n    return {\r\n        type: actions.SIGNUP_END,\r\n        endType\r\n    }\r\n}\r\n \r\nconst handleSignupConflict = (error) => {\r\n    return {\r\n        type: actions.SIGNUP_CONFLICT,\r\n        error\r\n    }\r\n}\r\n\r\nconst apiKey = 'AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE';\r\nconst postUserData = (userData,idToken) => {\r\n    const queryParams = `?auth=${idToken}`\r\n    return database.post(`/users.json${queryParams}`, userData)\r\n}\r\n\r\nconst postSignupData = (signUpData) => {\r\n    const endPoint = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`\r\n    return axios.post(endPoint, {...signUpData, returnSecureToken: true})\r\n}\r\n    \r\nconst deleteSignupData = (idToken) => {\r\n    const endPoint = `https://identitytoolkit.googleapis.com/v1/accounts:delete?key=${apiKey}`\r\n    return axios.post(endPoint, {idToken})\r\n}\r\n\r\n//exports\r\nexport const signup = (formData,showAlert) => {\r\n    const {\r\n        email,\r\n        password,\r\n        name,\r\n        country,\r\n        zipCode,\r\n        contactNumber,\r\n    } = formData\r\n\r\n    let token = null;\r\n    const signUpData = {email,password};\r\n    const userData = {name,country,zipCode,contactNumber};\r\n     \r\n    return dispatch => {\r\n\r\n        dispatch(startSignup())\r\n        \r\n        postSignupData(signUpData)\r\n            .then(\r\n                response => {\r\n                    console.log(response)\r\n                    const idToken = response.data.idToken;\r\n                    const userId = response.data.localId;\r\n                    token = idToken;\r\n\r\n                    postUserData({...userData, userId},idToken)\r\n                        .then(\r\n                            () => {dispatch(endSignup('userSaved'));showAlert(true);},\r\n                            error => {\r\n                                console.log(error.response.data.error)\r\n                                deleteSignupData(token)\r\n                                    .then(\r\n                                        () => {dispatch(endSignup('signupFailed')); showAlert(true)},\r\n                                        () => {dispatch(endSignup('userNotSaved')); showAlert(true)}\r\n                                    )\r\n                            }   \r\n                        )\r\n                },\r\n                error => {dispatch(handleSignupConflict(error.response.data.error))}\r\n            )\r\n    }\r\n}\r\n\r\n    \r\n\r\n       ","import React from 'react';\r\nimport './spinner.scss'\r\n\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='spinner'>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Spinner ;","import React from 'react';\r\nimport './alert.scss';\r\nimport Backdrop from '../../recycle/Backdrop/Backdrop';\r\n\r\n\r\nconst Alert = props => {\r\n\r\n    const {closeAlert} = props;\r\n\r\n    return(\r\n        <>\r\n            <Backdrop clicked={closeAlert}/>\r\n            <div className='alert'>\r\n                {props.children}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Alert;","import React from 'react';\r\nimport './backdrop.scss';\r\n\r\n\r\n\r\nconst Backdrop = (props) => {\r\n    const {clicked} = props;\r\n    return (\r\n        <div className='backdrop' onClick={clicked}></div>\r\n    )\r\n}\r\n\r\n\r\nexport default Backdrop;","import {useState} from 'react';\r\n\r\nconst useAlert = (initialState) => {\r\n    const [alertShown,showAlert] = useState(initialState);\r\n    return [alertShown,showAlert]\r\n}\r\n\r\nexport default useAlert;","import React from 'react';\r\nimport Alert from '../../recycle/Alert/Alert';\r\nimport useHttpErrorHandler from '../../hooks/useHttpErrorHandler'\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return props => {\r\n      const [error, confirmError] = useHttpErrorHandler(axios);\r\n        return(\r\n            <>\r\n               {error?<Alert closeAlert={confirmError}>\r\n                   {error.message}\r\n               </Alert>:null}\r\n\r\n               <WrappedComponent {...props}/>\r\n           </>\r\n            )\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","\r\nimport {useState,useEffect} from 'react';\r\n\r\nexport default httpClient => {\r\n    const [error, setError] = useState(null)\r\n\r\n        const reqInterceptor = httpClient.interceptors.request.use(req => {\r\n            setError(null)\r\n            return req;\r\n        })\r\n        const resInterceptor = httpClient.interceptors.response.use(res => res, err => {\r\n            setError(err)\r\n        })\r\n\r\n        useEffect(() => {\r\n            return () => {\r\n                httpClient.interceptors.request.eject(reqInterceptor);\r\n                httpClient.interceptors.response.eject(resInterceptor);\r\n            }\r\n        // eslint-disable-next-line\r\n        },[reqInterceptor,resInterceptor]) \r\n\r\n        const confirmError = () => {\r\n            setError(null)\r\n        }\r\n\r\n    return [error,confirmError]\r\n}","import React from 'react';\r\nimport './burger-ingredient.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BurgerIngredient = props => {\r\n    let ingredient = null;\r\n\r\n        switch(props.type){\r\n            case('bread-bottom'):\r\n                ingredient = <div className='bread-bottom'></div>;\r\n                break;\r\n            \r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className='bread-top'>\r\n                        <div className='seeds1'></div>\r\n                        <div className='seeds2'></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            \r\n            case('meat'):\r\n                ingredient = <div className='meat'></div>\r\n                break;\r\n            \r\n            case('cheese'):\r\n                ingredient = <div className='cheese'></div>\r\n                break;\r\n            \r\n            case('bacon'):\r\n                ingredient = <div className='bacon'></div>\r\n                break;\r\n            \r\n            case('salad'):\r\n                ingredient = <div className='salad'></div>\r\n                break;\r\n            \r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n}\r\n\r\n\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport './burger.scss';\r\nimport '../../recycle/Scrollbar/scrollbar.scss';\r\nimport BurgerIngredient from '../BurgerIngredient/BurgerIngredient';\r\n\r\n\r\nconst burger = (props) =>{\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_,i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        })\r\n    })\r\n    .reduce((igArray,currentIg)=>{\r\n        return igArray.concat(currentIg)\r\n    },[]);\r\n\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients = <p className='burger__instruction'>FEEL FREE TO ADD INGREDIENTS</p>\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className='burger scrollbar'>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default burger;","import React from 'react';\r\nimport './logo.scss';\r\n\r\nconst Logo = (props) => {\r\n    return (\r\n        <div className='logo'></div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React  from 'react';\r\nimport './navigationitems.scss'\r\nimport '../../recycle/Link/link.scss'\r\nimport {NavLink} from 'react-router-dom';\r\n// import NavigationItem from '../NavigationItem/NavigationItem';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nconst NavigationItems = (props) =>{\r\n    const {closeSideDrawer} = props;\r\n    const idToken = useSelector(state => state.login.idToken);\r\n    const isAuthenticated = idToken !== null;\r\n\r\n    return(\r\n        <ul className='navigation-items'  onClick={closeSideDrawer}>\r\n            \r\n            <li className={'navigation-item'}>\r\n                <NavLink \r\n                    to='/'\r\n                    exact\r\n                    className='link--nav'\r\n                    activeClassName={'active'}\r\n                >Burger Builder</NavLink>\r\n            </li>\r\n\r\n            {isAuthenticated?<li className={'navigation-item'}>\r\n                <NavLink \r\n                    to='/profile'\r\n                    exact\r\n                    className='link--nav'\r\n                    activeClassName={'active'}\r\n                >Profile</NavLink>\r\n            </li>: null}\r\n\r\n              \r\n            {isAuthenticated?<li className={'navigation-item'}>\r\n                <NavLink \r\n                    to='/orders'\r\n                    exact\r\n                    className='link--nav'\r\n                    activeClassName={'active'}\r\n                >Orders</NavLink>\r\n            </li>: null}\r\n\r\n            <li className={'navigation-item'}>\r\n                <NavLink \r\n                    to={isAuthenticated?'/logout' : '/login'}\r\n                    exact\r\n                    className='link--nav'\r\n                    activeClassName={'active'}\r\n                >{isAuthenticated? 'Logout': 'Login'}</NavLink>\r\n            </li>\r\n\r\n        </ul>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport './drawertoggle.scss';\r\n\r\nconst drawerToggle = (props) => {\r\n    const {toggleSideDrawer} = props;\r\n    return (\r\n        // <div onClick={props.clicked}>MENU</div>\r\n        <div onClick={toggleSideDrawer} className={'drawertoggle'}>\r\n            <div className={'drawertoggle__bar'}></div>\r\n            <div className={'drawertoggle__bar'}></div>\r\n            <div className={'drawertoggle__bar'}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport './toolbar.scss';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'; \r\nimport DrawerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst Toolbar = (props) => {\r\n\r\n    const {toggleSideDrawer} = props;\r\n\r\n    return (\r\n        <div className='toolbar'>\r\n            <DrawerToggle toggleSideDrawer={toggleSideDrawer}/>\r\n            <Logo/>\r\n            <nav className='toolbar__nav'>\r\n                <NavigationItems/>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar;\r\n\r\n","import React from 'react';\r\nimport './sidedrawer.scss';\r\n\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../recycle/Backdrop/Backdrop';\r\n\r\nconst SideDrawer = (props ) => {\r\n\r\n    const {\r\n        sideDrawerOpen,\r\n        closeSideDrawer,\r\n        isAuthenticated} = props;\r\n\r\n    return(\r\n        <>\r\n            {sideDrawerOpen?<Backdrop clicked={closeSideDrawer}/>:null}\r\n            <div className={sideDrawerOpen? 'sidedrawer--open' : 'sidedrawer--close'}>\r\n                <nav>\r\n                    <NavigationItems side isAuthenticated={isAuthenticated} closeSideDrawer={closeSideDrawer}/> \r\n                </nav>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default SideDrawer;","import React, {useState} from 'react';\r\nimport './layout.scss';\r\nimport Toolbar from '../Toolbar/Toolbar'; \r\nimport SideDrawer from '../SideDrawer/SideDrawer';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst Layout = props => {\r\n    const {children} = props;\r\n    const isAuthenticated = useSelector(state => state.login.idToken !== null)\r\n    const [sideDrawerOpen, showSideDrawer] = useState(false)\r\n\r\n    const closeSideDrawer = () => {\r\n        showSideDrawer(false)\r\n    }\r\n\r\n    const toggleSideDrawer = () => {\r\n        showSideDrawer(!sideDrawerOpen)\r\n    }\r\n\r\n    return(\r\n        <div className=\"app\">\r\n            <Toolbar toggleSideDrawer={toggleSideDrawer} isAuthenticated={isAuthenticated}/>\r\n            <SideDrawer isAuthenticated={isAuthenticated} sideDrawerOpen={sideDrawerOpen} closeSideDrawer={closeSideDrawer}/>\r\n            <main className='main'>\r\n                {children}\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport '../../recycle/Button/button.scss'\r\nimport './build-control.scss';\r\n\r\nconst control = (props) => {\r\n\r\n    const {label,removeIngredient,disabled,addIngredient} = props;\r\n    return(\r\n        <div className ='build-control'>\r\n            <div className='build-control__label'>{label}</div>\r\n            <button \r\n                className='button--less build-control__button' \r\n                onClick={removeIngredient}\r\n                disabled={disabled}\r\n            >\r\n            Less\r\n            </button>\r\n\r\n            <button \r\n                className='button--more build-control__button'\r\n                onClick={addIngredient}\r\n            >\r\n            More\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default control;","import React from 'react';\r\nimport '../../recycle/Button/button.scss';\r\nimport './build-controls.scss';\r\nimport BuildControl from '../BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\nconst BuildControls = (props) => {\r\n    const {\r\n        startOrder,\r\n        disabled,\r\n        price,\r\n        addIngredient,\r\n        removeIngredient,\r\n    } = props;\r\n\r\n    const buttonStatus = {...disabled}\r\n    const orderStatus = !(Object.keys(buttonStatus).map(statusKey=>{\r\n        return (!buttonStatus[statusKey])\r\n    }).reduce((overallStatus, currentButtonStatus)=>{\r\n        return (overallStatus || currentButtonStatus)\r\n    },false))\r\n\r\n    return (\r\n        <div className='build-controls'>\r\n            <p className='build-controls__price'>Current price: <span>${price.toFixed(2)}</span></p>\r\n            {controls.map(control => {\r\n                return (\r\n                <BuildControl \r\n                    key={control.label}\r\n                    label={control.label}\r\n                    addIngredient={() => addIngredient(control.type)}\r\n                    removeIngredient={() => removeIngredient(control.type)}\r\n                    disabled={disabled[control.type]}\r\n                />\r\n                )\r\n            })}\r\n            \r\n            \r\n            <button \r\n                className='button--success build-controls__order'\r\n                disabled={orderStatus} \r\n                onClick={startOrder}>Order now!</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BuildControls;","import React from 'react';\r\nimport '../../recycle/Button/button.scss'\r\nimport './order-prompt.scss';\r\n\r\nconst LoginPrompt = props => {\r\n    const {cancelOrder,goToLogin} = props;\r\n    return (\r\n        <div className='order-prompt'>\r\n            <p className='order-prompt__toolkit'>Please login to continue</p>\r\n            <button type=\"button\" className='button--failed order-prompt__button' onClick={cancelOrder}>Cancel</button>\r\n            <button type=\"button\" className='button--success order-prompt__button' onClick={goToLogin}>Login</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginPrompt\r\n\r\n","import React, {useEffect} from 'react';\r\nimport Burger from '../../containers/Burger/Burger';\r\nimport database from '../../axios/database';\r\nimport BuildControls from '../../containers/BuildControls/BuildControls';\r\nimport Alert from '../../recycle/Alert/Alert';\r\n// import OrderSummary from '../../containers/OrderSummary/OrderSummary';\r\nimport Spinner from '../../recycle/Spinner/Spinner';\r\nimport OrderPrompt from '../OrderPrompt/OrderPrompt';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport useAlert from '../../hooks/useAlert';\r\nimport * as actions from '../../store/actions/exports';\r\n\r\n\r\nconst BurgerBuilder = props => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [alertShown,showAlert] = useAlert(false);\r\n    const addIngredient = (ingName) => dispatch(actions.addIngredient(ingName))\r\n    const removeIngredient = (ingName) => dispatch(actions.removeIngredient(ingName))\r\n\r\n        \r\n    const ings = useSelector(state => state.buildBurger.ingredients)\r\n    const price = useSelector(state => state.buildBurger.totalPrice)\r\n    const error = useSelector(state => state.buildBurger.error)\r\n    const isAuthenticated = useSelector(state => state.login.idToken !== null)\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.initIngredients())\r\n    // eslint-disable-next-line\r\n    },[])\r\n\r\n    const startOrder = () => (isAuthenticated && props.history.push('/checkout')) || showAlert(true)\r\n    const cancelOrder = () => showAlert(false)\r\n    const goToLogin = () => {\r\n        props.history.push('/login');\r\n        showAlert(false)\r\n    }\r\n\r\n    const disabledInfo = {...ings}\r\n\r\n    for (let key in disabledInfo){\r\n        disabledInfo[key] = (disabledInfo[key] <= 0)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {!alertShown? null:\r\n            <Alert closeAlert={cancelOrder}>\r\n                <OrderPrompt cancelOrder={cancelOrder} goToLogin={goToLogin}/>\r\n            </Alert>}\r\n\r\n            {(ings && (\r\n                <>\r\n                    <Burger ingredients={ings}/>\r\n                    <BuildControls\r\n                        addIngredient={addIngredient}\r\n                        removeIngredient={removeIngredient}\r\n                        disabled={disabledInfo}\r\n                        price={price}\r\n                        startOrder={startOrder}\r\n                    />\r\n                </>\r\n            ))\r\n            || (error && <p>Ingredients can't be loaded :(</p>)\r\n            || <Spinner/> \r\n            }\r\n           \r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default withErrorHandler(BurgerBuilder,database);","import React,{ useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport * as actions from '../../store/actions/exports'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst Logout = props => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.logout())\r\n    // eslint-disable-next-line\r\n    },[])\r\n\r\n    return (\r\n        <Redirect to = '/' />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React, {Suspense} from 'react';\r\nimport Layout from '../Layout/Layout';\r\nimport BurgerBuilder from '../BurgerBuilder/BurgerBuilder';\r\nimport Logout from '../Logout/Logout';\r\nimport {Route, Switch,Redirect} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports'\r\nimport Spinner from '../../recycle/Spinner/Spinner'\r\n// import database from '../../axios/database';\r\n\r\nconst Checkout = React.lazy(() => import ('../Checkout/Checkout'))\r\nconst Orders = React.lazy(() => import ('../Orders/Orders'))\r\nconst Login = React.lazy(() => import ('../Login/Login'))\r\nconst Signup = React.lazy(() => import ('../Signup/Signup'))\r\nconst Profile = React.lazy(() => import('../Profile/Profile'))\r\n\r\nconst App = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const idToken = useSelector(state => state.login.idToken)\r\n  // const userId = useSelector(state => state.login.userId)\r\n  \r\n  // useEffect(() => {\r\n  //   console.log(userId)\r\n  //   if(userId){\r\n  //     const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\r\n  //     database.get(`/users.json${queryParams}`)\r\n  //     .then(response => {\r\n  //       console.log(response)\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.log(error)\r\n  //     })\r\n  //   }\r\n  // },[userId,token])\r\n\r\n\r\n\r\n  dispatch(actions.checkAuth(idToken))\r\n\r\n  const isAuthenticated = idToken !== null;\r\n\r\n\r\n  const routes = function (isAuthenticated){\r\n    if(isAuthenticated){\r\n      return (\r\n          <>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/checkout\" component={Checkout}/></Suspense>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/orders\" component={Orders}/></Suspense>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/profile\" component={Profile}/></Suspense>\r\n            <Route path=\"/logout\" component={Logout}/>\r\n            <Route path=\"/\" exact component={BurgerBuilder}/>\r\n            <Redirect to =\"/\" />\r\n          </>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n          <Suspense fallback={<Spinner/>}><Route path=\"/login\" component={Login} /></Suspense>\r\n          <Suspense fallback={<Spinner/>}><Route path=\"/signup\" component={Signup} /></Suspense>\r\n          {/* <Route path=\"/auth\" component={Auth} /> */}\r\n          <Route path=\"/\" exact component={BurgerBuilder}/>\r\n          <Redirect to = \"/\"/>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Layout>\r\n      <Switch>\r\n          {routes(isAuthenticated)}\r\n      </Switch>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n\r\n        case actions.SET_INGREDIENTS:{\r\n            const _ = deepClone(state);\r\n            if(!_.ingredients){\r\n                _.ingredients = {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat\r\n                    }\r\n\r\n                _.error = false;\r\n                _.purchasing = false;\r\n                return _\r\n\r\n            } else {\r\n                _.error = false;\r\n                return _\r\n            }\r\n        }\r\n              \r\n        \r\n        case actions.FETCH_INGREDIENTS_FAILED:{\r\n            const _ = deepClone(state)\r\n            _.error = true;\r\n            return _;       \r\n        }\r\n\r\n        case actions.ADD_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] ++;  \r\n            _.totalPrice += INGREDIENT_PRICES[action.ingredient];\r\n\r\n            return _;\r\n        }\r\n\r\n        case actions.REMOVE_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] --;   \r\n            _.totalPrice -= INGREDIENT_PRICES[action.ingredient];        \r\n            return _;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    purchased: false,\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n\r\n        case actions.CHECKOUT_BURGER: {\r\n            const _ = deepClone(initialState);\r\n            return _\r\n        }\r\n\r\n        case actions.PURCHASE_BURGER_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            _.purchased = true;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_START:{\r\n            const _ = deepClone(state);\r\n            _.loading = true;\r\n            return _;\r\n        }\r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    fetching: true,\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        \r\n        case actions.FETCH_ORDERS_START:\r\n            const _ = deepClone(initialState);\r\n            _.fetching = true;\r\n            return _;\r\n\r\n\r\n        case actions.FETCH_ORDERS_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.orders = action.orders;\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.FETCH_ORDERS_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n        \r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    idToken: null,\r\n    userId: null,\r\n    userData: {},\r\n    loginError: null,\r\n    getUserError: null,\r\n    loading: false\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch(action.type){\r\n        case actions.LOGIN_START:{\r\n            const _ = deepClone(initialState);\r\n            _.loading = true;\r\n            return _;\r\n        }\r\n\r\n        case actions.LOGIN_STORE:{\r\n            const _ = deepClone(state);\r\n            _.idToken = action.idToken\r\n            _.userId = action.userId\r\n            return _;\r\n        }\r\n\r\n        case actions.PROFILE_STORE: {\r\n            const _ = deepClone(state);\r\n            _.userData = action.userData;\r\n            return _;\r\n        }\r\n\r\n        case actions.PROFILE_FAIL: {\r\n            const _ = deepClone(state);\r\n            _.getUserError = action.error\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.LOGIN_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.loginError = action.error\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.LOGIN_END:{\r\n            const _ = deepClone(state);\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.LOGOUT:{\r\n            const _ = deepClone(state);\r\n            _.idToken = null\r\n            _.userId = null\r\n            return _;\r\n        }\r\n        \r\n        default: \r\n            return (state)\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    error: null,\r\n    loading: false,\r\n    endType: ''\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actions.SIGNUP_START:{\r\n            const _ = deepClone(initialState);\r\n            _.loading = true;\r\n            return _;\r\n        }\r\n\r\n        case actions.SIGNUP_END:{\r\n            const _ = deepClone(state);\r\n            _.loading = false\r\n            _.endType = action.endType\r\n            return _;\r\n        }\r\n\r\n        case actions.SIGNUP_CONFLICT:{\r\n            const _ = deepClone(state);\r\n            _.error = action.error\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        default: \r\n            return (state)\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/index.scss';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, combineReducers, compose} from 'redux';\r\n// import reducer from './store/reducer';\r\nimport buildBurger from './store/reducers/buildBurger'\r\nimport placeOrder from './store/reducers/placeOrder'\r\nimport fetchOrders from './store/reducers/fetchOrders'\r\nimport login from './store/reducers/login'\r\nimport signup from './store/reducers/signup'\r\nimport editProfile from './store/reducers/editProfile'\r\nimport thunk from 'redux-thunk';\r\n\r\n//Basic redux setup\r\n// const store = createStore(burgerBuilderReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconst composeEnhancers = (process.env.NODE_ENV === 'development'? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  buildBurger,\r\n  placeOrder,\r\n  fetchOrders,\r\n  login,\r\n  signup,\r\n  editProfile\r\n})\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n      applyMiddleware(thunk)\r\n    ));\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter  basename=\"/burgerbuilder\">\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>//disabled to show popUp :(\r\n    <>\r\n      {app}\r\n    </>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}