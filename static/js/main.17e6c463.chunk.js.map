{"version":3,"sources":["components/BurgerIngredients/BurgerIngredients.module.css","components/SideDrawer/SideDrawer.module.css","components/BuildControl/BuildControl.module.css","components/OrderSummary/OrderSummary.module.css","containers/Auth/Auth.module.css","components/Logo/Logo.module.css","components/NavigationItems/NavigationItems.module.css","components/Burger/Burger.module.css","components/Input/Input.module.css","components/Toolbar/Toolbar.module.css","components/NavigationItem/NavigationItem.module.css","components/BuildControls/BuildControls.module.css","components/Button/Button.module.css","containers/Layout/Layout.module.css","assets/icons/burger-logo.png","components/DrawerToggle/DrawerToggle.module.css","components/Backdrop/Backdrop.module.css","components/Modal/Modal.module.css","components/Spinner/Spinner.module.css","components/CheckoutSummary/CheckoutSummary.module.css","containers/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Wrapper/Wrapper.js","components/Logo/Logo.js","components/NavigationItem/NavigationItem.js","components/NavigationItems/NavigationItems.js","components/DrawerToggle/DrawerToggle.js","components/Toolbar/Toolbar.js","components/Backdrop/Backdrop.js","components/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","axios/orders.js","components/BuildControl/BuildControl.js","components/BuildControls/BuildControls.js","components/Modal/Modal.js","components/Button/Button.js","components/OrderSummary/OrderSummary.js","components/Spinner/Spinner.js","containers/withErrorHandler/withErrorHandler.js","axios/auth.js","store/actions/authenticate.js","store/actions/actions.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/buildBurger.js","store/actions/placeOrder.js","components/CheckoutSummary/CheckoutSummary.js","components/Input/Input.js","containers/ContactData/ContactData.js","containers/Checkout/Checkout.js","containers/Auth/Auth.js","containers/Logout/Logout.js","components/Order/Order.js","containers/Orders/Orders.js","store/actions/fetchOrders.js","containers/App/App.js","serviceWorker.js","store/reducers/buildBurger.js","store/reducers/placeOrder.js","store/reducers/fetchOrders.js","store/reducers/authenticate.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","tool","Logo__tool","Logo__side","join","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","navClass","side","NavigationItems","NavigationItems__side","isAuthenticated","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Wrapper","closed","Layout","state","showSideDrawer","sideDrawerClosedHandler","bind","sideDrawerToggleHandler","this","setState","prevState","main","Component","connect","authenticate","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burgerClasses","Burger","burgerScroll","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","igArray","currentIg","concat","length","burgerP","instance","axios","create","baseURL","control","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","buttonStatus","orderStatus","statusKey","overallStatus","currentButtonStatus","BuildControls","price","toFixed","ingredientAdded","ingredientRemoved","OrderButton","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","continueHandler","loginHandler","ingredientSummary","textTransform","modalHeading","orderList","orderP","instruction","cancelOrder","continueOrder","spinner","Spinner","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","authSuccess","authData","checkAuthTimeout","expirationTime","dispatch","setTimeout","logout","localStorage","removeItem","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","purchaseLoginHandler","onInitIngredients","onInitOrder","onCanceledOrder","history","replace","disabledInfo","ings","orderSummary","onIngredientAdded","onIngredientRemoved","buildBurger","totalPrice","placeOrder","get","then","data","catch","ingName","checkoutSummary","CheckoutSummary","width","height","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","valid","touched","push","Invalid","elementType","elementConfig","name","value","onChange","changed","options","option","displayValue","Input","ContactData","Orderfield","config","validation","orderForm","placeholder","required","street","zipCode","minLength","maxLength","country","email","deliveryMethod","loading","orderHandler","inputChangedHandler","submitScreen","event","updatedOrderForm","updatedFormElement","target","validate","preventDefault","formData","formElement","order","orderData","onOrderBurger","rules","trim","accumulator","currentValue","entries","formElementsArray","id","form","onSubmit","purchased","post","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","checkoutContinuedHandler","onCheckout","summary","path","match","component","Auth","password","isSignup","submitHandler","handleSignChange","onAuth","switchButtonClasses","Auth__option","Auth__option_login","Auth__option_signup","color","isSignUp","returnSecureToken","apiKey","endPoints","signUp","signIn","console","log","expiresIn","expirationDate","Date","getTime","setItem","idToken","localId","authFail","Logout","onLogout","amount","ingredientOutput","display","border","padding","Order","marginBottom","Orders","onFetchOrders","orders","fetching","fetchOrders","fetchedOrders","unshift","err","App","onPageLoadSignUp","getItem","userId","expiry","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","deepClone","object","JSON","parse","stringify","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17e6c463.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__3zF01\",\"BreadTop\":\"BurgerIngredients_BreadTop__3sCTY\",\"Seeds1\":\"BurgerIngredients_Seeds1__xKZZ6\",\"Seeds2\":\"BurgerIngredients_Seeds2__Z6pTk\",\"Meat\":\"BurgerIngredients_Meat__3OBSu\",\"Cheese\":\"BurgerIngredients_Cheese__2fKmi\",\"Salad\":\"BurgerIngredients_Salad__Ql7hY\",\"Bacon\":\"BurgerIngredients_Bacon__sHKle\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1VD6N\",\"Open\":\"SideDrawer_Open__3LrRs\",\"Close\":\"SideDrawer_Close__2wOkv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2o153\",\"Label\":\"BuildControl_Label__3QAPB\",\"Less\":\"BuildControl_Less__23Zxr\",\"More\":\"BuildControl_More__3uB6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderList\":\"OrderSummary_orderList__2CHsg\",\"modalHeading\":\"OrderSummary_modalHeading__119jQ\",\"orderP\":\"OrderSummary_orderP__jEnBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2Lsa5\",\"Auth__option\":\"Auth_Auth__option__m_6pe\",\"Auth__option_login\":\"Auth_Auth__option_login____s0-\",\"Auth__option_signup\":\"Auth_Auth__option_signup__KcD3Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2uxJp\",\"Logo__side\":\"Logo_Logo__side__11d_m\",\"Logo__tool\":\"Logo_Logo__tool__2paG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2sZVS\",\"NavigationItems__side\":\"NavigationItems_NavigationItems__side__3OQxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2a_kD\",\"burgerP\":\"Burger_burgerP__12kEg\",\"burgerScroll\":\"Burger_burgerScroll__2NZvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__p21gR\",\"InputElement\":\"Input_InputElement__UBrJ2\",\"Invalid\":\"Input_Invalid__24OEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__8WdYz\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1OCzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__bGPUT\",\"active\":\"NavigationItem_active__1aB3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__ovV3e\",\"instruction\":\"BuildControls_instruction__1uHFL\",\"OrderButton\":\"BuildControls_OrderButton__1S8U9\",\"enable\":\"BuildControls_enable__3wfMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__qowU_\",\"Success\":\"Button_Success__2obg7\",\"Danger\":\"Button_Danger__2VmjK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2zuhm\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__twHUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3jnYo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3qgHf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__u9cjt\",\"lds-ripple\":\"Spinner_lds-ripple__lgTCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__bBdiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2yx8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2jlGl\"};","\r\n\r\n\r\nconst aux = (props) => {\r\n    return props.children\r\n}\r\n\r\nexport default aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/icons/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className={[classes.Logo, props.tool ? classes.Logo__tool : classes.Logo__side].join(' ') }>\r\n            <img src={burgerLogo} alt=\"brand-logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst navigationItem = (props) =>{\r\n    return(\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink \r\n                to={props.link}\r\n                exact\r\n                activeClassName={classes.active}\r\n            >{props.children}</NavLink>\r\n        </li>\r\n    )\r\n    \r\n}\r\n\r\nexport default navigationItem;\r\n\r\n","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from '../NavigationItem/NavigationItem';\r\n\r\n\r\nconst navigationItems = (props) =>{\r\n\r\n    let navClass = [];\r\n    if(props.side){\r\n        navClass = [classes.NavigationItems, classes.NavigationItems__side].join(' ');\r\n    }else{\r\n        navClass = [classes.NavigationItems]\r\n    }\r\n\r\n    return(\r\n        <ul className={navClass}>\r\n            <NavigationItem link='/'>\r\n                Burger Builder\r\n            </NavigationItem>\r\n\r\n            {props.isAuthenticated?<NavigationItem link=\"/orders\">\r\n                Orders\r\n            </NavigationItem> : null}\r\n\r\n            <NavigationItem link={props.isAuthenticated ? '/logout' : '/auth'}>\r\n                {props.isAuthenticated ? 'Logout': 'Login'}\r\n            </NavigationItem>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        // <div onClick={props.clicked}>MENU</div>\r\n        <div onClick={props.clicked} className={classes.DrawerToggle}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'; \r\nimport DrawerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => {\r\n\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n            <Logo tool/>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems isAuthenticated={props.isAuthenticated}/>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default toolbar;\r\n\r\n","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\n\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n    )\r\n}\r\n\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport classes from './SideDrawer.module.css';\r\n\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\n\r\nconst sideDrawer = (props ) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close ];\r\n\r\n    if(props.open){\r\n        attachedClasses = [classes.SideDrawer, classes.Open ];\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <Logo side/>\r\n                <nav>\r\n                    <NavigationItems side isAuthenticated={props.isAuthenticated}/>\r\n                </nav>\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Toolbar/Toolbar'; \r\nimport SideDrawer from '../../components/SideDrawer/SideDrawer';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nclass Layout extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            showSideDrawer: false\r\n        }\r\n\r\n        this.sideDrawerClosedHandler = this.sideDrawerClosedHandler.bind(this);\r\n        this.sideDrawerToggleHandler = this.sideDrawerToggleHandler.bind(this);\r\n\r\n    }\r\n\r\n\r\n    sideDrawerClosedHandler(){\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler(){\r\n        this.setState((prevState)=>{\r\n            return(\r\n                {showSideDrawer: !prevState.showSideDrawer}\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Wrapper>\r\n                <Toolbar \r\n                    drawerToggleClicked={this.sideDrawerToggleHandler}\r\n                    isAuthenticated={this.props.isAuthenticated}/>\r\n                <SideDrawer \r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer} \r\n                    closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.main}>\r\n                {this.props.children}\r\n                </main>\r\n            </Wrapper>\r\n  \r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.authenticate.token !== null\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Layout) ;","import React, { Component } from 'react';\r\nimport classes from './BurgerIngredients.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n        let ingredient = null;\r\n\r\n        switch(this.props.type){\r\n            case('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            \r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            \r\n            case('meat'):\r\n                ingredient = <div className={classes.Meat}></div>\r\n                break;\r\n            \r\n            case('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            \r\n            case('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>\r\n                break;\r\n            \r\n            case('salad'):\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            \r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from '../BurgerIngredients/BurgerIngredients';\r\n\r\nconst burgerClasses = [classes.Burger, classes.burgerScroll];\r\nconst burger = (props) =>{\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_,i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        })\r\n    })\r\n    .reduce((igArray,currentIg)=>{\r\n        return igArray.concat(currentIg)\r\n    },[]);\r\n\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients = <p className={classes.burgerP}>Feel free to add ingredients</p>\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className={burgerClasses.join(' ')}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default burger;","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-builder-12ae6.firebaseio.com'\r\n});\r\n\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst control = (props) => {\r\n    return(\r\n        <div className = {classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n\r\n            <button \r\n                className={classes.Less} \r\n                onClick={props.removed}\r\n                disabled={props.disabled}\r\n            >\r\n            Less\r\n            </button>\r\n\r\n            <button \r\n                className={classes.More} \r\n                onClick={props.added}\r\n            >\r\n            More\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default control;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from '../BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\n\r\nconst buildControls = (props) => {\r\n\r\n    const buttonStatus = {...props.disabled}\r\n    const orderStatus = !(Object.keys(buttonStatus).map(statusKey=>{\r\n        return (!buttonStatus[statusKey])\r\n    }).reduce((overallStatus, currentButtonStatus)=>{\r\n        return (overallStatus || currentButtonStatus)\r\n    },false))\r\n\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className={classes.BuildControls}>\r\n            <p>Current price: <strong>${props.price.toFixed(2)}</strong></p>\r\n            {controls.map(control => {\r\n                return (\r\n                <BuildControl \r\n                    key={control.label}\r\n                    label={control.label}\r\n                    added={()=>props.ingredientAdded(control.type)}\r\n                    removed={()=>props.ingredientRemoved(control.type)}\r\n                    disabled={props.disabled[control.type]}\r\n                />\r\n                )\r\n            })}\r\n            \r\n            \r\n            <button \r\n                className={classes.OrderButton} \r\n                disabled={orderStatus} \r\n                onClick={props.ordered}>ORDER NOW</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component{\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return (nextProps.show !== this.props.show || nextProps.children !== this.props.children)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Wrapper>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => {\r\n    return(\r\n        <button\r\n            className={[classes.Button, classes[props.btnType]].join(' ')}\r\n            onClick={props.clicked}\r\n            type={props.type}\r\n            disabled={props.disabled}\r\n        >\r\n        {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport default button;","import React, {Component} from 'react';\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\nimport classes from './OrderSummary.module.css';\r\nimport Button from '../Button/Button';\r\n\r\n\r\n\r\nclass OrderSummary extends Component{\r\n\r\n    render(){\r\n\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map(igKey => {\r\n            return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform:'capitalize'}}>\r\n                    {igKey}\r\n                </span> : {this.props.ingredients[igKey]}\r\n            </li>\r\n            )\r\n        })\r\n\r\n        const continueButton = function(isAuthenticated, continueHandler, loginHandler){\r\n            if(isAuthenticated){\r\n                return <Button btnType=\"Success\" clicked={continueHandler}>Continue</Button>\r\n            }else{\r\n                return <Button btnType=\"Success\" clicked={loginHandler}>Login</Button>\r\n            }\r\n        }\r\n\r\n        return(\r\n            <Wrapper>\r\n                <h3 className={classes.modalHeading}>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients :</p>\r\n                <ul className={classes.orderList}>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p className={classes.orderP}><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\r\n                {this.props.isAuthenticated?null : <p className={classes.instruction}>Please login in to continue</p>}\r\n                <Button btnType=\"Danger\" clicked={this.props.cancelOrder}>Cancel</Button>\r\n                {continueButton(this.props.isAuthenticated,this.props.continueOrder,this.props.loginHandler)}\r\n                {/* <Button btnType=\"Success\" clicked={this.props.continueOrder}>Continue</Button> */}\r\n\r\n\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\n\r\n\r\nconst spinner = () => {\r\n    return (\r\n        <div className={classes.Spinner}>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default spinner ;","import React, { Component } from 'react';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return (\r\n        class extends Component{\r\n            constructor(props){\r\n                super(props)\r\n                \r\n                this.state = {\r\n                    error: null\r\n                }\r\n\r\n                this.errorConfirmedHandler = this.errorConfirmedHandler.bind(this);\r\n\r\n            }\r\n\r\n            \r\n            componentWillMount(){\r\n                this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                    this.setState({error: null});\r\n                    return req;\r\n                })\r\n\r\n                this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                    this.setState({error: error});\r\n                })\r\n            }\r\n\r\n            componentWillUnmount(){\r\n                axios.interceptors.request.eject(this.reqInterceptor);\r\n                axios.interceptors.response.eject(this.resInterceptor);\r\n            }\r\n            \r\n\r\n            errorConfirmedHandler(){\r\n                this.setState({error: null})\r\n            }\r\n        \r\n\r\n            render(){\r\n                return(\r\n                <Wrapper>\r\n                   <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                   >\r\n                       {this.state.error ? this.state.error.message : null}\r\n                   </Modal>\r\n                   <WrappedComponent {...this.props}/>\r\n               </Wrapper>\r\n                )\r\n            }\r\n       \r\n\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE'\r\n});\r\n\r\n\r\nexport default instance;","import * as actions from './actions';\r\nimport axios from '../../axios/auth'\r\n\r\nconst authStart = () => {\r\n    return {\r\n        type: actions.AUTH_START\r\n    }\r\n}\r\n\r\n\r\nconst authSuccess = (authData) => {\r\n    return {\r\n        type: actions.AUTH_SUCCESS,\r\n        authData: authData\r\n    }\r\n}\r\n\r\n\r\nconst authFail = (error) => {\r\n    return {\r\n        type: actions.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\nconst checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        },expirationTime * 900)\r\n    }\r\n}\r\n\r\n\r\n//exports\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId')\r\n    return {\r\n        type: actions.AUTH_LOGOUT\r\n    }\r\n};\r\n\r\n\r\nexport const checkAuth = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        console.log(token)\r\n        if(!token){\r\n            dispatch(logout());\r\n            \r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n\r\n            if (expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess({idToken: token, localId: userId}))\r\n                const expiry = (expirationDate.getTime() - new Date().getTime())/1000;\r\n                console.log(expiry)\r\n                dispatch(checkAuthTimeout(expiry))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\nexport const auth = (email,password,isSignUp) =>{\r\n    return dispatch => {\r\n        dispatch(authStart())\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        const apiKey = 'AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE';\r\n\r\n        const endPoints = {\r\n            signUp : `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`,\r\n            signIn : `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`\r\n        }\r\n    \r\n        axios.post((isSignUp? endPoints.signUp : endPoints.signIn), authData)\r\n            .then(response => {\r\n                console.log(response.data.expiresIn)\r\n                const expirationDate = new Date( new Date().getTime() + new Date(response.data.expiresIn*1000).getTime())\r\n                console.log(expirationDate)\r\n                localStorage.setItem('token',response.data.idToken)\r\n                localStorage.setItem('expirationDate',expirationDate)\r\n                localStorage.setItem('userId',response.data.localId)\r\n\r\n                dispatch(checkAuthTimeout(response.data.expiresIn))\r\n                dispatch(authSuccess(response.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(authFail(error.response.data.error))\r\n                console.log(error.response.data.error.message)\r\n            })\r\n    }\r\n}","export const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n\r\nexport const INIT_ORDER = 'INIT_ORDER';\r\nexport const CANCELED_ORDER = 'CANCELED_ORDER';\r\nexport const CHECKOUT_BURGER = 'CHECKOUT_BURGER';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDER_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDER_FAIL';\r\n\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React, {Component} from 'react';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport axios from '../../axios/orders';\r\nimport BuildControls from '../../components/BuildControls/BuildControls';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport OrderSummary from '../../components/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports';\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            purchasing: false,\r\n        }\r\n\r\n        this.purchaseHandler = this.purchaseHandler.bind(this);\r\n        this.purchaseCancelHandler = this.purchaseCancelHandler.bind(this);\r\n        this.purchaseContinueHandler = this.purchaseContinueHandler.bind(this);\r\n        this.purchaseLoginHandler = this.purchaseLoginHandler.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.props.onInitIngredients();\r\n    }\r\n    \r\n\r\n    purchaseHandler(){ \r\n        this.props.onInitOrder();\r\n    }\r\n\r\n    purchaseCancelHandler(){\r\n        this.props.onCanceledOrder();\r\n    }\r\n\r\n    purchaseContinueHandler(){\r\n        this.props.onCanceledOrder(); //sets order status to false\r\n        this.props.history.replace('/checkout')\r\n    }\r\n\r\n    purchaseLoginHandler(){\r\n        this.props.history.replace('/auth')\r\n    }\r\n\r\n    render(){\r\n        \r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        }\r\n\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = (disabledInfo[key] <= 0)\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded :(</p> : <Spinner/>\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n                <Wrapper>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.price}\r\n                        ordered={this.purchaseHandler}\r\n                    />\r\n                </Wrapper>\r\n            )\r\n\r\n            orderSummary = (\r\n                <OrderSummary \r\n                    cancelOrder={this.purchaseCancelHandler}\r\n                    ingredients={this.props.ings}\r\n                    continueOrder={this.purchaseContinueHandler}\r\n                    loginHandler={this.purchaseLoginHandler}\r\n                    price={this.props.price}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Wrapper>\r\n                <Modal show={this.props.ordered} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n\r\n                {burger}\r\n                \r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings : state.buildBurger.ingredients,\r\n        price: state.buildBurger.totalPrice,\r\n        ordered: state.placeOrder.ordered,\r\n        error: state.buildBurger.error,\r\n        isAuthenticated: state.authenticate.token !== null\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitIngredients : () => dispatch(actions.initIngredients()),\r\n        onIngredientAdded : (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved : (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitOrder: () => dispatch(actions.initOrder()),\r\n        onCanceledOrder: () => dispatch(actions.canceledOrder())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actions.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nconst fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actions.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const addIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.ADD_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.REMOVE_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch  => (\r\n       axios.get('/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed())\r\n        })\r\n    )\r\n}","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\n\r\nconst purchaseBurgerStart = () => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_SUCCESS,\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const initOrder = () => {\r\n    return {\r\n        type: actions.INIT_ORDER\r\n    }\r\n}\r\n\r\n\r\nexport const canceledOrder = () => {\r\n    return {\r\n        type: actions.CANCELED_ORDER\r\n    }\r\n}\r\n\r\nexport const checkoutBurger = () => {\r\n    return {\r\n        type: actions.CHECKOUT_BURGER\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData,token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart())\r\n\r\n        axios.post('/orders.json?auth=' + token,orderData)\r\n        .then(response => {\r\n            dispatch(purchaseBurgerSuccess())\r\n        })\r\n        .catch(error => {\r\n            dispatch(purchaseBurgerFail(error))\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport Burger from '../Burger/Burger'; \r\nimport Button from '../Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h2>We hope it tastes well!</h2>\r\n            <div style={{width: '30rem', height: '30rem', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}\r\n                type=\"button\"\r\n                disabled={false}\r\n                >Cancel</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}\r\n                type=\"button\"\r\n                disabled={false}\r\n                >Continue</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(!props.valid && props.touched){\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch(props.elementType){\r\n        case('input'):\r\n            inputElement = <input \r\n                            className={inputClasses.join(' ')} \r\n                            {...props.elementConfig}\r\n                            name={props.name}\r\n                            value={props.value}\r\n                            onChange={props.changed} />\r\n                            \r\n            break;\r\n\r\n        case('email'):\r\n        inputElement = <input \r\n                        className={inputClasses.join(' ')} \r\n                        {...props.elementConfig}\r\n                        name={props.name}\r\n                        value={props.value}\r\n                        onChange={props.changed} />\r\n                        \r\n        break;\r\n\r\n        case('password'):\r\n        inputElement = <input \r\n                        className={inputClasses.join(' ')} \r\n                        {...props.elementConfig}\r\n                        name={props.name}\r\n                        value={props.value}\r\n                        onChange={props.changed} />\r\n                        \r\n        break;\r\n        \r\n        case('textarea'):\r\n            inputElement = <textarea \r\n                            className={inputClasses.join(' ')} \r\n                            {...props.elementConfig}\r\n                            name={props.name}\r\n                            value={props.value} \r\n                            onChange={props.changed}/>\r\n            break;\r\n\r\n\r\n        case('select'):\r\n        inputElement = <select\r\n                            className={inputClasses.join(' ')} \r\n                            name={props.name}\r\n                            value={props.value}\r\n                            onChange={props.changed}>\r\n                            {props.elementConfig.options.map(option => {\r\n                                return(\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.displayValue}\r\n                                    </option>\r\n                                )\r\n                                \r\n                            })}\r\n                       </select>\r\n            break;\r\n\r\n\r\n        default:\r\n            inputElement = <input \r\n                            className={inputClasses.join(' ')} \r\n                            {...props.elementConfig}\r\n                            name={props.name}\r\n                            value={props.value}\r\n                            onChange={props.changed} />\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            {/* <label className={classes.Label}>{props.label}</label> */}\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default input;","import React, {Component, Fragment} from 'react';\r\nimport Button from '../../components/Button/Button';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport Input from '../../components/Input/Input';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../axios/orders';\r\nimport {connect} from 'react-redux';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/exports';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass ContactData extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        function Orderfield(type,config,validation,value){\r\n            \r\n                this.touched = false;\r\n                this.elementType = type;\r\n                this.elementConfig = config;\r\n                this.validation = validation;   \r\n                this.value = value;\r\n                \r\n        }\r\n\r\n        const zipCodeValidation = {\r\n            required:true,\r\n            minLength: 5,\r\n            maxLength: 5,\r\n            valid:false\r\n        }\r\n\r\n        const deliveryConfig = {\r\n            options:[\r\n                {value: 'fastest', displayValue:'Fastest'},\r\n                {value: 'cheapest',displayValue:'Cheapest'}\r\n            ]\r\n        }\r\n\r\n        this.state = {\r\n            orderForm: {\r\n                name: new Orderfield('input',{type:'text', placeholder:'Your Name'},{required:true,valid:false},''),\r\n                street: new Orderfield('input',{type:'text', placeholder:'Street'},{required:true,valid:false},''),\r\n                zipCode: new Orderfield('input',{type:'text', placeholder:'ZIP Code'}, zipCodeValidation,''),\r\n                country: new Orderfield('input',{type:'text', placeholder:'Country'},{required:true,valid:false},''),\r\n                email: new Orderfield('email',{type:'email', placeholder:'Email'},{required:true,valid:false},''),\r\n                deliveryMethod:new Orderfield('select',deliveryConfig,{required:true,valid:true},'fastest')   \r\n            },\r\n            loading: false\r\n        }\r\n        \r\n\r\n       \r\n\r\n        this.orderHandler = this.orderHandler.bind(this);\r\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\r\n        this.submitScreen = this.submitScreen.bind(this);\r\n\r\n    }\r\n    \r\n\r\n\r\n    inputChangedHandler(event){\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[event.target.name]\r\n        }\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.validation.valid = this.validate(updatedFormElement.value,updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[event.target.name] = updatedFormElement; \r\n        this.setState({orderForm: updatedOrderForm});\r\n    }\r\n\r\n    orderHandler(event){\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElement in this.state.orderForm){\r\n            formData[formElement] = this.state.orderForm[formElement].value;\r\n        }\r\n    \r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price.toFixed(2),\r\n            orderData: formData\r\n        }\r\n\r\n        this.props.onOrderBurger(order,this.props.token)\r\n    }\r\n\r\n    validate(value,rules){\r\n\r\n        const isValid = [\r\n            rules.required? (value.trim() !== '') : true,\r\n            rules.minLength? (value.length >= rules.minLength) : true,\r\n            rules.maxLength? (value.length <= rules.maxLength) : true \r\n        ].reduce((accumulator,currentValue) => accumulator && currentValue)\r\n\r\n        return isValid\r\n    }\r\n\r\n    submitScreen(){\r\n        const entries = {\r\n            ...this.state.orderForm\r\n        }\r\n\r\n        const validation = [\r\n            ...Object.keys(entries)\r\n            ].map(key => {\r\n                return entries[key].validation.valid\r\n            }).reduce((accumulator,currentValue) => {\r\n                return accumulator && currentValue\r\n            })\r\n        \r\n        return validation;\r\n    }\r\n \r\n    render(){\r\n        \r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n            });\r\n\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                    {formElementsArray.map(formElement => {\r\n                        return (\r\n                            <Input \r\n                                key={formElement.id}\r\n                                elementType={formElement.config.elementType}\r\n                                elementConfig={formElement.config.elementConfig}\r\n                                name={formElement.id}\r\n                                value={formElement.config.value}\r\n                                changed={this.inputChangedHandler}\r\n                                valid={formElement.config.validation.valid}\r\n                                touched={formElement.config.touched}\r\n                                />\r\n                        )\r\n                    })}\r\n                    <Button type='submit' btnType=\"Success\" clicked={this.orderHandler} disabled={!this.submitScreen()}>ORDER</Button>\r\n            </form>\r\n        );\r\n\r\n        if(this.props.loading){\r\n            form = <Spinner/>\r\n        }\r\n\r\n        return(\r\n            <Fragment>\r\n                {this.props.purchased ? <Redirect to=\"/\"/> : null }\r\n                <div className={classes.ContactData}>\r\n                    <h4>Enter your contact data</h4>\r\n                    {form}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.buildBurger.ingredients,\r\n        price: state.buildBurger.totalPrice,\r\n        loading: state.placeOrder.loading,\r\n        purchased: state.placeOrder.purchased,\r\n        token: state.authenticate.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n   return {\r\n     onOrderBurger: (orderData,token) => dispatch(actions.purchaseBurger(orderData,token))\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, {Component, Fragment} from 'react';\r\nimport CheckoutSummary from '../../components/CheckoutSummary/CheckoutSummary';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport ContactData from '../ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports';\r\n\r\nclass Checkout extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n     \r\n        this.checkoutCancelledHandler = this.checkoutCancelledHandler.bind(this);\r\n        this.checkoutContinuedHandler = this.checkoutContinuedHandler.bind(this);\r\n    }\r\n\r\n\r\n\r\n    checkoutCancelledHandler(){\r\n        this.props.history.replace('/');\r\n    }\r\n\r\n    checkoutContinuedHandler(){\r\n        this.props.onCheckout()\r\n        this.props.history.replace('/checkout/contact-data')\r\n    }\r\n\r\n    render(){\r\n        let summary = <Redirect to =\"/\"/>\r\n        if(this.props.ings){\r\n            summary  = <Fragment><CheckoutSummary \r\n                            ingredients={this.props.ings}\r\n                            checkoutCancelled={this.checkoutCancelledHandler}\r\n                            checkoutContinued={this.checkoutContinuedHandler}\r\n                        />\r\n                        <Route \r\n                            path={this.props.match.path + '/contact-data'} \r\n                            component={ContactData}\r\n                        /></Fragment>\r\n                                    \r\n                       \r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {summary}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.buildBurger.ingredients,\r\n        purchased: state.placeOrder.purchased\r\n    }\r\n}\r\n\r\nconst mapDispatchtoProps = (dispatch) => {\r\n    return {\r\n        onCheckout: () => dispatch(actions.checkoutBurger())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchtoProps)(Checkout);","import React, { Component} from 'react';\r\nimport Button from '../../components/Button/Button';\r\nimport Input from '../../components/Input/Input';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/exports';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\n\r\nclass Auth extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        function Orderfield(type,config,validation,value){\r\n            \r\n                this.touched = false;\r\n                this.elementType = type;\r\n                this.elementConfig = config;\r\n                this.validation = validation;   \r\n                this.value = value;\r\n                \r\n        }\r\n\r\n        const passwordValidation = {\r\n            required:true,\r\n            minLength: 6,\r\n            valid:false\r\n        }\r\n\r\n    \r\n        this.state = {\r\n            orderForm: {\r\n                email: new Orderfield('email',{type:'email', placeholder:'Email'},{required:true,valid:false},''),\r\n                password: new Orderfield('password',{type:'password', placeholder:'Password'},passwordValidation,'')\r\n            },\r\n            isSignup: false\r\n        }\r\n        \r\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\r\n        this.submitScreen = this.submitScreen.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.handleSignChange = this.handleSignChange.bind(this);\r\n\r\n    }\r\n    \r\n    inputChangedHandler(event){\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[event.target.name]\r\n        }\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.validation.valid = this.validate(updatedFormElement.value,updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[event.target.name] = updatedFormElement; \r\n        this.setState({orderForm: updatedOrderForm});\r\n    }\r\n\r\n\r\n    submitHandler(event){\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.orderForm.email.value,this.state.orderForm.password.value,this.state.isSignup)\r\n    }\r\n\r\n    validate(value,rules){\r\n\r\n        const isValid = [\r\n            rules.required? (value.trim() !== '') : true,\r\n            rules.minLength? (value.length >= rules.minLength) : true,\r\n            rules.maxLength? (value.length <= rules.maxLength) : true \r\n        ].reduce((accumulator,currentValue) => accumulator && currentValue)\r\n\r\n        return isValid\r\n    }\r\n\r\n    submitScreen(){\r\n        const entries = {\r\n            ...this.state.orderForm\r\n        }\r\n\r\n        const validation = [\r\n            ...Object.keys(entries)\r\n            ].map(key => {\r\n                return entries[key].validation.valid\r\n            }).reduce((accumulator,currentValue) => {\r\n                return accumulator && currentValue\r\n            })\r\n        \r\n        return validation;\r\n    }\r\n\r\n\r\n    handleSignChange(){\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup}\r\n        })\r\n    }\r\n    \r\n \r\n    //------------------------------------------------------RENDER-----------------------------------------------------------\r\n    render(){\r\n\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n            });\r\n\r\n        }\r\n\r\n        const switchButtonClasses = [classes.Auth__option, \r\n            this.state.isSignup? classes.Auth__option_login : classes.Auth__option_signup\r\n        ].join(' ');\r\n\r\n\r\n        const loginHeading = function(loading,error,isSignup){\r\n            if(loading){\r\n                if(isSignup){\r\n                    return <p>Creating your account..</p>\r\n                } else{\r\n                    return <p>Logging you in..</p>\r\n                }   \r\n            }\r\n            else if(error){\r\n                return <p style={{color:'crimson'}}>{error.message.replace(/_/g,' ') + ' :('}</p>\r\n            }else{\r\n                if(isSignup){\r\n                    return <h4>Please enter required information</h4>\r\n                } else{\r\n                    return <h4>Please provide login details</h4>\r\n                }\r\n            }\r\n        }\r\n\r\n        const authRedirect = function(isAuthenticated){\r\n            if(isAuthenticated){\r\n                return <Redirect to = '/' />\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return(\r\n                <>\r\n                {authRedirect(this.props.isAuthenticated)}\r\n                <div className={classes.Auth}>\r\n\r\n                    {loginHeading(this.props.loading,this.props.error,this.state.isSignup)}\r\n\r\n                    <h4  \r\n                        type='button' \r\n                        className={switchButtonClasses}\r\n                        onClick={this.handleSignChange}\r\n                        >{this.state.isSignup? 'Login instead': 'Create account'}</h4>\r\n\r\n                        {this.props.loading? <Spinner/> : (\r\n                            <form onSubmit={this.submitHandler}>\r\n                                {formElementsArray.map(formElement => {\r\n                                return (\r\n                                    <Input \r\n                                        key={formElement.id}\r\n                                        elementType={formElement.config.elementType}\r\n                                        elementConfig={formElement.config.elementConfig}\r\n                                        name={formElement.id}\r\n                                        value={formElement.config.value}\r\n                                        changed={this.inputChangedHandler}\r\n                                        valid={formElement.config.validation.valid}\r\n                                        touched={formElement.config.touched}\r\n                                    />\r\n                                )})}\r\n\r\n                            <Button \r\n                                type='submit' \r\n                                btnType=\"Success\" \r\n                                clicked={this.submitHandler} \r\n                                disabled={!this.submitScreen()}\r\n                            >{this.state.isSignup? 'SIGNUP' : 'LOGIN'}</Button>\r\n                            </form>\r\n                        )}\r\n                   \r\n                </div>\r\n                </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.authenticate.loading,\r\n        error: state.authenticate.error,\r\n        isAuthenticated: state.authenticate.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAuth: (email,password,isSignup) => dispatch(actions.auth(email,password,isSignup))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth);","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../store/actions/exports'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Redirect to=\"/\" />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout);","import React from 'react';\r\nimport classes from './Order.module.css'\r\n\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredient in props.ingredients){\r\n        ingredients.push({\r\n                name: ingredient,\r\n                amount: props.ingredients[ingredient]\r\n            }\r\n        )\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ingredient => {\r\n        return <span \r\n            key={ingredient.name}\r\n            style={{\r\n                textTransform: \"capitalize\",\r\n                display: 'inline-block',\r\n                margin: '0 .8rem',\r\n                border: '1px solid gray',\r\n                padding: '0.5rem'\r\n            }}\r\n            >{ingredient.name} : {ingredient.amount} </span>\r\n    })\r\n\r\n    return(\r\n        <div className={classes.Order}>\r\n            <p style={{marginBottom: '1.2rem'}}>Ingredients: {ingredientOutput}</p>\r\n            <p>Price : <strong>$ {props.price}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order;","import React, {Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios/orders';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nclass Orders extends Component{\r\n  \r\n    componentDidMount(){\r\n        this.props.onFetchOrders(this.props.token)\r\n    }\r\n\r\n    render(){\r\n        let orders = <Spinner/>;\r\n        if (!this.props.fetching){\r\n            orders = this.props.orders.map(order => {\r\n                        return (\r\n                            <Order \r\n                                key={order.id}\r\n                                ingredients={order.ingredients}\r\n                                price={order.price}\r\n                            />\r\n                        )\r\n                    }) \r\n        }\r\n        return(\r\n          <div>\r\n              {orders}\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.fetchOrders.orders,\r\n        loading: state.fetchOrders.fetching,\r\n        token: state.authenticate.token\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchOrders: (token) => dispatch(actions.fetchOrders(token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\nconst fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\n\r\nconst fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nconst fetchOrdersStart = () => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const fetchOrders = (token) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart())\r\n        axios.get('/orders.json?auth=' + token)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data){\r\n                    fetchedOrders.unshift({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err))\r\n            })\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Layout from '../Layout/Layout';\r\nimport BurgerBuilder from '../BurgerBuilder/BurgerBuilder';\r\nimport Checkout from '../Checkout/Checkout';\r\nimport Auth from '../Auth/Auth';\r\nimport Logout from '../Logout/Logout';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Orders from '../Orders/Orders';\r\nimport * as actions from '../../store/actions/exports'\r\n\r\nclass App extends Component {\r\n  \r\n  componentDidMount(){\r\n    this.props.onPageLoadSignUp();\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Layout>\r\n          <Switch>\r\n            <Route path=\"/checkout\" component={Checkout}/>\r\n            <Route path=\"/orders\" component={Orders}/>\r\n            <Route path=\"/auth\" component={Auth}/>\r\n            <Route path=\"/logout\" component={Logout}/>\r\n            <Route path=\"/\" exact component={BurgerBuilder}/>\r\n\r\n          </Switch>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onPageLoadSignUp: () => dispatch(actions.checkAuth())\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n}\r\n\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n\r\n        case actions.SET_INGREDIENTS:{\r\n            const _ = deepClone(state);\r\n            if(!_.ingredients){\r\n                _.ingredients = {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat\r\n                    }\r\n\r\n                _.error = false;\r\n                _.purchasing = false;\r\n                return _\r\n\r\n            } else {\r\n                _.error = false;\r\n                return _\r\n            }\r\n        }\r\n              \r\n        \r\n        case actions.FETCH_INGREDIENTS_FAILED:{\r\n            const _ = deepClone(state)\r\n            _.error = true;\r\n            return _;       \r\n        }\r\n\r\n        case actions.ADD_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] ++;  \r\n            _.totalPrice += INGREDIENT_PRICES[action.ingredient];\r\n\r\n            return _;\r\n        }\r\n\r\n        case actions.REMOVE_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] --;   \r\n            _.totalPrice -= INGREDIENT_PRICES[action.ingredient];        \r\n            return _;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    purchased: false,\r\n    ordered: false\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case actions.INIT_ORDER: {\r\n            const _ = deepClone(state)\r\n            _.ordered = true\r\n            return _\r\n            \r\n        }\r\n\r\n        case actions.CANCELED_ORDER: {\r\n            const _ = deepClone(state)\r\n            _.ordered = false\r\n            return _\r\n                \r\n        }\r\n\r\n        case actions.CHECKOUT_BURGER: {\r\n            const _ = deepClone(state);\r\n            _.purchased = false\r\n            return _\r\n        }\r\n\r\n        case actions.PURCHASE_BURGER_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            _.purchased = true;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_START:{\r\n            const _ = deepClone(state);\r\n            _.loading = true;\r\n            return _;\r\n        }\r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    fetching: true,\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        \r\n        case actions.FETCH_ORDERS_START:\r\n            const _ = deepClone(state);\r\n            _.fetching = true;\r\n            return _;\r\n\r\n\r\n        case actions.FETCH_ORDERS_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.orders = action.orders;\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.FETCH_ORDERS_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n        \r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actions.AUTH_START:{\r\n            const _ = deepClone(state);\r\n            _.loading = true;\r\n            _.error = null;\r\n            return _;\r\n        }\r\n\r\n        case actions.AUTH_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.token = action.authData.idToken\r\n            _.userId = action.authData.localId\r\n            _.error = null\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.AUTH_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.error = action.error\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.AUTH_LOGOUT:{\r\n            const _ = deepClone(state);\r\n            _.token = null\r\n            _.userId = null\r\n            return _;\r\n        }\r\n        \r\n        default: \r\n            return (state)\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/index.css';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, combineReducers, compose} from 'redux';\r\n// import reducer from './store/reducer';\r\nimport buildBurger from './store/reducers/buildBurger'\r\nimport placeOrder from './store/reducers/placeOrder'\r\nimport fetchOrders from './store/reducers/fetchOrders'\r\nimport authenticate from './store/reducers/authenticate'\r\nimport thunk from 'redux-thunk';\r\n\r\n//Basic redux setup\r\n// const store = createStore(burgerBuilderReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  buildBurger: buildBurger,\r\n  placeOrder: placeOrder,\r\n  fetchOrders: fetchOrders,\r\n  authenticate: authenticate\r\n})\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n      applyMiddleware(thunk)\r\n    ));\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter  basename=\"/burger-builder-dev\">\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {app}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}