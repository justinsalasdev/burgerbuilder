{"version":3,"sources":["components/BurgerIngredients/BurgerIngredients.module.css","components/SideDrawer/SideDrawer.module.css","components/BuildControl/BuildControl.module.css","components/Logo/Logo.module.css","components/Burger/Burger.module.css","components/OrderSummary/OrderSummary.module.css","components/Input/Input.module.css","components/Toolbar/Toolbar.module.css","components/NavigationItem/NavigationItem.module.css","components/BuildControls/BuildControls.module.css","components/Button/Button.module.css","containers/Layout/Layout.module.css","assets/icons/burger-logo.png","components/NavigationItems/NavigationItems.module.css","components/DrawerToggle/DrawerToggle.module.css","components/Backdrop/Backdrop.module.css","components/Modal/Modal.module.css","components/Spinner/Spinner.module.css","components/CheckoutSummary/CheckoutSummary.module.css","containers/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Wrapper/Wrapper.js","components/Logo/Logo.js","components/NavigationItem/NavigationItem.js","components/NavigationItems/NavigationItems.js","components/DrawerToggle/DrawerToggle.js","components/Toolbar/Toolbar.js","components/Backdrop/Backdrop.js","components/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/BuildControl/BuildControl.js","components/BuildControls/BuildControls.js","components/Modal/Modal.js","components/Button/Button.js","components/OrderSummary/OrderSummary.js","axios-orders.js","components/Spinner/Spinner.js","containers/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions.js","components/CheckoutSummary/CheckoutSummary.js","components/Input/Input.js","containers/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/App/App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","tool","Logo__tool","Logo__side","join","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","_","SideDrawer","Close","open","Open","Wrapper","closed","side","Layout","state","showSideDrawer","sideDrawerClosedHandler","bind","sideDrawerToggleHandler","this","setState","prevState","main","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burgerClasses","Burger","burgerScroll","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","i","key","reduce","igArray","currentIg","concat","length","burgerP","control","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","buttonStatus","orderStatus","statusKey","overallStatus","currentButtonStatus","BuildControls","price","toFixed","ingredientAdded","ingredientRemoved","OrderButton","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","modalHeading","orderList","orderP","cancelOrder","continueOrder","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","errorConfirmedHandler","message","BurgerBuilder","purchasing","loading","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","history","push","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","connect","totalPrice","dispatch","ingName","checkoutSummary","CheckoutSummary","width","height","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","valid","touched","Invalid","elementType","elementConfig","name","value","onChange","changed","options","option","displayValue","Input","ContactData","Orderfield","config","validation","console","log","orderForm","placeholder","required","street","zipCode","minLength","maxLength","country","email","deliveryMethod","orderHandler","inputChangedHandler","submitScreen","event","updatedOrderForm","updatedFormElement","target","validate","preventDefault","formData","formElement","order","orderData","post","then","replace","catch","rules","trim","accumulator","currentValue","entries","formElementsArray","id","form","onSubmit","Checkout","checkoutCancelledHandler","checkoutContinuedHandler","path","match","component","amount","ingredientOutput","display","border","padding","Order","marginBottom","orders","get","fetchedOrders","data","unshift","err","App","Orders","Boolean","window","location","hostname","initialState","salad","bacon","cheese","meat","INGREDIENT_PRICES","deepClone","object","JSON","parse","stringify","reducer","action","newStateAdd","newStateRemove","store","createStore","app","basename","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8cbacd59.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__3zF01\",\"BreadTop\":\"BurgerIngredients_BreadTop__3sCTY\",\"Seeds1\":\"BurgerIngredients_Seeds1__xKZZ6\",\"Seeds2\":\"BurgerIngredients_Seeds2__Z6pTk\",\"Meat\":\"BurgerIngredients_Meat__3OBSu\",\"Cheese\":\"BurgerIngredients_Cheese__2fKmi\",\"Salad\":\"BurgerIngredients_Salad__Ql7hY\",\"Bacon\":\"BurgerIngredients_Bacon__sHKle\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1VD6N\",\"Open\":\"SideDrawer_Open__3LrRs\",\"Close\":\"SideDrawer_Close__2wOkv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2o153\",\"Label\":\"BuildControl_Label__3QAPB\",\"Less\":\"BuildControl_Less__23Zxr\",\"More\":\"BuildControl_More__3uB6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2uxJp\",\"Logo__side\":\"Logo_Logo__side__11d_m\",\"Logo__tool\":\"Logo_Logo__tool__2paG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2a_kD\",\"burgerP\":\"Burger_burgerP__12kEg\",\"burgerScroll\":\"Burger_burgerScroll__2NZvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderList\":\"OrderSummary_orderList__2CHsg\",\"modalHeading\":\"OrderSummary_modalHeading__119jQ\",\"orderP\":\"OrderSummary_orderP__jEnBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__p21gR\",\"InputElement\":\"Input_InputElement__UBrJ2\",\"Invalid\":\"Input_Invalid__24OEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__8WdYz\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1OCzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__bGPUT\",\"active\":\"NavigationItem_active__1aB3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__ovV3e\",\"OrderButton\":\"BuildControls_OrderButton__1S8U9\",\"enable\":\"BuildControls_enable__3wfMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__qowU_\",\"Success\":\"Button_Success__2obg7\",\"Danger\":\"Button_Danger__2VmjK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2zuhm\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2sZVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__twHUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3jnYo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3qgHf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__29RnS\",\"lds-facebook\":\"Spinner_lds-facebook__1ps-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__bBdiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2yx8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2jlGl\"};","\r\n\r\n\r\nconst aux = (props) => {\r\n    return props.children\r\n}\r\n\r\nexport default aux;","import React from 'react';\r\nimport burgerLogo from '../../assets/icons/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className={[classes.Logo, props.tool ? classes.Logo__tool : classes.Logo__side].join(' ') }>\r\n            <img src={burgerLogo} alt=\"brand-logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst navigationItem = (props) =>{\r\n    return(\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink \r\n                to={props.link}\r\n                exact\r\n                activeClassName={classes.active}\r\n            >{props.children}</NavLink>\r\n        </li>\r\n    )\r\n    \r\n}\r\n\r\nexport default navigationItem;\r\n\r\n","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from '../NavigationItem/NavigationItem';\r\n\r\n\r\nconst navigationItems = () =>{\r\n    return(\r\n        <ul className={classes.NavigationItems}>\r\n            <NavigationItem link='/'>\r\n                Burger Builder\r\n            </NavigationItem>\r\n\r\n            <NavigationItem link=\"/orders\">\r\n                Orders\r\n            </NavigationItem>\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        // <div onClick={props.clicked}>MENU</div>\r\n        <div onClick={props.clicked} className={classes.DrawerToggle}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'; \r\nimport DrawerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => {\r\n\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n            <Logo tool/>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems/>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default toolbar;\r\n\r\n","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\n\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n    )\r\n}\r\n\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport _ from './SideDrawer.module.css';\r\n\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\n\r\nconst sideDrawer = (props ) => {\r\n    let attachedClasses = [_.SideDrawer, _.Close ];\r\n\r\n    if(props.open){\r\n        attachedClasses = [_.SideDrawer, _.Open ];\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <Logo side/>\r\n                <nav>\r\n                    <NavigationItems/>\r\n                </nav>\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\n\r\nexport default sideDrawer;","import React, {Component} from 'react';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Toolbar/Toolbar'; \r\nimport SideDrawer from '../../components/SideDrawer/SideDrawer';\r\n\r\n\r\nclass Layout extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            showSideDrawer: false\r\n        }\r\n\r\n        this.sideDrawerClosedHandler = this.sideDrawerClosedHandler.bind(this);\r\n        this.sideDrawerToggleHandler = this.sideDrawerToggleHandler.bind(this);\r\n\r\n    }\r\n\r\n\r\n    sideDrawerClosedHandler(){\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler(){\r\n        this.setState((prevState)=>{\r\n            return(\r\n                {showSideDrawer: !prevState.showSideDrawer}\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Wrapper>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.main}>\r\n                {this.props.children}\r\n                </main>\r\n            </Wrapper>\r\n  \r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Layout ;","import React, { Component } from 'react';\r\nimport classes from './BurgerIngredients.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component{\r\n    render(){\r\n        let ingredient = null;\r\n\r\n        switch(this.props.type){\r\n            case('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            \r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            \r\n            case('meat'):\r\n                ingredient = <div className={classes.Meat}></div>\r\n                break;\r\n            \r\n            case('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            \r\n            case('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>\r\n                break;\r\n            \r\n            case('salad'):\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            \r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from '../BurgerIngredients/BurgerIngredients';\r\n\r\nconst burgerClasses = [classes.Burger, classes.burgerScroll];\r\nconst burger = (props) =>{\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_,i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        })\r\n    })\r\n    .reduce((igArray,currentIg)=>{\r\n        return igArray.concat(currentIg)\r\n    },[]);\r\n\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients = <p className={classes.burgerP}>Feel free to add ingredients</p>\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className={burgerClasses.join(' ')}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst control = (props) => {\r\n    return(\r\n        <div className = {classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n\r\n            <button \r\n                className={classes.Less} \r\n                onClick={props.removed}\r\n                disabled={props.disabled}\r\n            >\r\n            Less\r\n            </button>\r\n\r\n            <button \r\n                className={classes.More} \r\n                onClick={props.added}\r\n            >\r\n            More\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default control;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from '../BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\n\r\nconst buildControls = (props) => {\r\n\r\n    const buttonStatus = {...props.disabled}\r\n    const orderStatus = !(Object.keys(buttonStatus).map(statusKey=>{\r\n        return (!buttonStatus[statusKey])\r\n    }).reduce((overallStatus, currentButtonStatus)=>{\r\n        return (overallStatus || currentButtonStatus)\r\n    },false))\r\n\r\n    return (\r\n        <div className={classes.BuildControls}>\r\n            <p>Current price: <strong>${props.price.toFixed(2)}</strong></p>\r\n            {controls.map(control => {\r\n                return (\r\n                <BuildControl \r\n                    key={control.label}\r\n                    label={control.label}\r\n                    added={()=>props.ingredientAdded(control.type)}\r\n                    removed={()=>props.ingredientRemoved(control.type)}\r\n                    disabled={props.disabled[control.type]}\r\n                />\r\n                )\r\n            })}\r\n\r\n\r\n            <button className={classes.OrderButton} disabled={orderStatus} onClick={props.ordered}>ORDER NOW</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component{\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return (nextProps.show !== this.props.show || nextProps.children !== this.props.children)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Wrapper>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}\r\n                >\r\n                    {this.props.children}\r\n                </div>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => {\r\n    return(\r\n        <button\r\n            className={[classes.Button, classes[props.btnType]].join(' ')}\r\n            onClick={props.clicked}\r\n            type={props.type}\r\n            disabled={props.disabled}\r\n        >\r\n        {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\n\r\nexport default button;","import React, {Component} from 'react';\r\nimport Wrapper from '../../containers/Wrapper/Wrapper';\r\nimport classes from './OrderSummary.module.css';\r\nimport Button from '../Button/Button';\r\n\r\n\r\n\r\nclass OrderSummary extends Component{\r\n\r\n    render(){\r\n\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map(igKey => {\r\n            return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform:'capitalize'}}>\r\n                    {igKey}\r\n                </span> : {this.props.ingredients[igKey]}\r\n            </li>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <Wrapper>\r\n                <h3 className={classes.modalHeading}>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients :</p>\r\n                <ul className={classes.orderList}>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p className={classes.orderP}><strong>Total Price: ${this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.cancelOrder}>Cancel</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.continueOrder}>Continue</Button>\r\n            </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default OrderSummary;","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-builder-12ae6.firebaseio.com'\r\n});\r\n\r\n\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\n\r\n\r\nconst spinner = () => {\r\n    return (\r\n        \r\n        <div className={classes.Loader}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default spinner ;","import React, { Component } from 'react';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return (\r\n        class extends Component{\r\n            constructor(props){\r\n                super(props)\r\n                \r\n                this.state = {\r\n                    error: null\r\n                }\r\n\r\n            }\r\n\r\n            \r\n            componentWillMount(){\r\n                this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                    this.setState({error: null});\r\n                    return req;\r\n                })\r\n\r\n                this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                    this.setState({error: error});\r\n                })\r\n            }\r\n\r\n            componentWillUnmount(){\r\n                axios.interceptors.request.eject(this.reqInterceptor);\r\n                axios.interceptors.response.eject(this.resInterceptor);\r\n            }\r\n            \r\n\r\n            errorConfirmedHandler(){\r\n                this.setState({error: null})\r\n            }\r\n        \r\n\r\n            render(){\r\n                return(\r\n                <Wrapper>\r\n                   <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}\r\n                   >\r\n                       {this.state.error ? this.state.error.message : null}\r\n                   </Modal>\r\n                   <WrappedComponent {...this.props}/>\r\n               </Wrapper>\r\n                )\r\n            }\r\n       \r\n\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport default withErrorHandler;","import React, {Component} from 'react';\r\nimport Wrapper from '../Wrapper/Wrapper';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/BuildControls/BuildControls';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport OrderSummary from '../../components/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions'\r\n\r\n// const INGREDIENT_PRICES = {\r\n//     salad: 0.5,\r\n//     cheese: 0.4,\r\n//     meat: 1.3,\r\n//     bacon: 0.7\r\n// }\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            // ingredients:null, \r\n            // totalPrice: 4,\r\n            purchasing: false,\r\n            loading: false,\r\n            error: false\r\n        }\r\n\r\n        // this.addIngredientHandler = this.addIngredientHandler.bind(this);\r\n        // this.removeIngredientHandler = this.removeIngredientHandler.bind(this);\r\n        this.purchaseHandler = this.purchaseHandler.bind(this);\r\n        this.purchaseCancelHandler = this.purchaseCancelHandler.bind(this);\r\n        this.purchaseContinueHandler = this.purchaseContinueHandler.bind(this);\r\n    }\r\n    \r\n    // componentDidMount(){\r\n    //     axios.get('/ingredients.json')\r\n    //         .then(response => {\r\n    //             this.setState({ingredients: response.data})\r\n    //         })\r\n    //         .catch(error => {\r\n    //             this.setState({error: true})\r\n    //         })\r\n    // }\r\n\r\n    purchaseHandler(){ \r\n        this.setState({purchasing: true})\r\n    }\r\n\r\n    purchaseCancelHandler(){\r\n        this.setState({purchasing: false})\r\n    }\r\n\r\n    purchaseContinueHandler(){\r\n\r\n        this.props.history.push('/checkout')\r\n\r\n        // const queryParams = [];\r\n\r\n        // queryParams.push(`price=${this.state.totalPrice.toFixed(2)}`)\r\n        // for(let ingredient in this.state.ingredients){\r\n        //     queryParams.push(encodeURIComponent(ingredient) + \r\n        //         '=' +\r\n        //          encodeURIComponent(this.state.ingredients[ingredient]))\r\n        // }\r\n        // const queryString = queryParams.join('&');\r\n\r\n        // this.props.history.push({\r\n        //     pathname: '/checkout',\r\n        //     search: '?' + queryString\r\n        // });\r\n        \r\n    }\r\n\r\n    // addIngredientHandler(type){\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients  = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n\r\n    //     updatedIngredients[type] = updatedCount;\r\n\r\n    //     const priceAddition = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice + priceAddition;\r\n\r\n    //     this.setState({\r\n    //         totalPrice: newPrice,\r\n    //         ingredients: updatedIngredients\r\n    //     })\r\n    // }\r\n\r\n    \r\n\r\n    // removeIngredientHandler(type){\r\n    //     const oldCount = this.state.ingredients[type];\r\n\r\n    //     if (oldCount <= 0){return}//do nothing \r\n\r\n    //     const updatedCount = oldCount - 1;\r\n    //     const updatedIngredients  = {\r\n    //         ...this.state.ingredients\r\n    //     };\r\n\r\n    //     updatedIngredients[type] = updatedCount;\r\n\r\n    //     const priceDeduction = INGREDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice - priceDeduction;\r\n\r\n    //     this.setState({\r\n    //         totalPrice: newPrice,\r\n    //         ingredients: updatedIngredients\r\n    //     })\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        \r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        }\r\n\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = (disabledInfo[key] <= 0)\r\n        }\r\n\r\n        let orderSummary = null;\r\n\r\n        \r\n       \r\n\r\n\r\n        let burger = this.state.error ? <p>Ingredients can't be loaded :(</p> : <Spinner/>\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n                <Wrapper>\r\n                    <Burger ingredients={this.props.ings}/>\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.price}\r\n                        ordered={this.purchaseHandler}\r\n                    />\r\n                </Wrapper>\r\n            )\r\n\r\n            orderSummary = (\r\n                <OrderSummary \r\n                    cancelOrder={this.purchaseCancelHandler}\r\n                    ingredients={this.props.ings}\r\n                    continueOrder={this.purchaseContinueHandler}\r\n                    price={this.props.price}\r\n                />\r\n            )\r\n        }\r\n        \r\n        if(this.state.loading){\r\n            orderSummary = <Spinner/>\r\n        }\r\n\r\n        return (\r\n            <Wrapper>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n\r\n                {burger}\r\n                \r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings : state.ingredients,\r\n        price: state.totalPrice\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded : (ingName) => dispatch({type:actions.ADD_INGREDIENT, ingredient: ingName}),\r\n        onIngredientRemoved : (ingName) => dispatch({type:actions.REMOVE_INGREDIENT, ingredient: ingName})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n","import React from 'react';\r\nimport Burger from '../Burger/Burger'; \r\nimport Button from '../Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h2>We hope it tastes well!</h2>\r\n            <div style={{width: '30rem', height: '30rem', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}\r\n                type=\"button\"\r\n                disabled={false}\r\n                >Cancel</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}\r\n                type=\"button\"\r\n                disabled={false}\r\n                >Continue</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(!props.valid && props.touched){\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch(props.elementType){\r\n        case('input'):\r\n            inputElement = <input \r\n                            className={inputClasses.join(' ')} \r\n                            {...props.elementConfig}\r\n                            name={props.name}\r\n                            value={props.value}\r\n                            onChange={props.changed} />\r\n                            \r\n            break;\r\n\r\n        case('email'):\r\n        inputElement = <input \r\n                        className={inputClasses.join(' ')} \r\n                        {...props.elementConfig}\r\n                        name={props.name}\r\n                        value={props.value}\r\n                        onChange={props.changed} />\r\n                        \r\n        break;\r\n        \r\n        case('textarea'):\r\n            inputElement = <textarea \r\n                            className={inputClasses.join(' ')} \r\n                            {...props.elementConfig}\r\n                            name={props.name}\r\n                            value={props.value} \r\n                            onChange={props.changed}/>\r\n            break;\r\n\r\n\r\n        case('select'):\r\n        inputElement = <select\r\n                            className={inputClasses.join(' ')} \r\n                            name={props.name}\r\n                            value={props.value}\r\n                            onChange={props.changed}>\r\n                            {props.elementConfig.options.map(option => {\r\n                                return(\r\n                                    <option key={option.value} value={option.value}>\r\n                                        {option.displayValue}\r\n                                    </option>\r\n                                )\r\n                                \r\n                            })}\r\n                       </select>\r\n            break;\r\n\r\n\r\n        default:\r\n            inputElement = <input \r\n                            className={inputClasses.join(' ')} \r\n                            {...props.elementConfig}\r\n                            name={props.name}\r\n                            value={props.value}\r\n                            onChange={props.changed} />\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            {/* <label className={classes.Label}>{props.label}</label> */}\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default input;","import React, {Component} from 'react';\r\nimport Button from '../../components/Button/Button';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport Input from '../../components/Input/Input';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../axios-orders';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ContactData extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        console.log('constructor')\r\n        function Orderfield(type,config,validation,value){\r\n            \r\n                this.touched = false;\r\n                this.elementType = type;\r\n                this.elementConfig = config;\r\n                this.validation = validation;   \r\n                this.value = value;\r\n                \r\n        }\r\n\r\n        const zipCodeValidation = {\r\n            required:true,\r\n            minLength: 5,\r\n            maxLength: 5,\r\n            valid:false\r\n        }\r\n\r\n        const deliveryConfig = {\r\n            options:[\r\n                {value: 'fastest', displayValue:'Fastest'},\r\n                {value: 'cheapest',displayValue:'Cheapest'}\r\n            ]\r\n        }\r\n\r\n        this.state = {\r\n            orderForm: {\r\n                name: new Orderfield('input',{type:'text', placeholder:'Your Name'},{required:true,valid:false},''),\r\n                street: new Orderfield('input',{type:'text', placeholder:'Street'},{required:true,valid:false},''),\r\n                zipCode: new Orderfield('input',{type:'text', placeholder:'ZIP Code'}, zipCodeValidation,''),\r\n                country: new Orderfield('input',{type:'text', placeholder:'Country'},{required:true,valid:false},''),\r\n                email: new Orderfield('email',{type:'email', placeholder:'Email'},{required:true,valid:false},''),\r\n                deliveryMethod:new Orderfield('select',deliveryConfig,{required:true,valid:true},'fastest')   \r\n            },\r\n            loading: false\r\n        }\r\n        \r\n\r\n       \r\n\r\n        this.orderHandler = this.orderHandler.bind(this);\r\n        this.inputChangedHandler = this.inputChangedHandler.bind(this);\r\n        this.submitScreen = this.submitScreen.bind(this);\r\n\r\n    }\r\n    \r\n\r\n\r\n    inputChangedHandler(event){\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[event.target.name]\r\n        }\r\n\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.validation.valid = this.validate(updatedFormElement.value,updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[event.target.name] = updatedFormElement; \r\n        this.setState({orderForm: updatedOrderForm});\r\n\r\n\r\n    }\r\n\r\n    orderHandler(event){\r\n        event.preventDefault();\r\n        this.setState({loading: true})\r\n        const formData = {};\r\n        for (let formElement in this.state.orderForm){\r\n            formData[formElement] = this.state.orderForm[formElement].value;\r\n        }\r\n    \r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n\r\n        axios.post('/orders.json',order)\r\n            .then(response => {\r\n                this.setState({loading: false})\r\n                this.props.history.replace('/');\r\n            })\r\n            .catch(error => {\r\n                this.setState({loading: false})\r\n            });\r\n    \r\n    }\r\n\r\n    validate(value,rules){\r\n\r\n        const isValid = [\r\n            rules.required? (value.trim() !== '') : true,\r\n            rules.minLength? (value.length >= rules.minLength) : true,\r\n            rules.maxLength? (value.length <= rules.maxLength) : true \r\n        ].reduce((accumulator,currentValue) => accumulator && currentValue)\r\n\r\n        return isValid\r\n    }\r\n\r\n    submitScreen(){\r\n        const entries = {\r\n            ...this.state.orderForm\r\n        }\r\n\r\n        const validation = [\r\n            ...Object.keys(entries)\r\n            ].map(key => {\r\n                return entries[key].validation.valid\r\n            }).reduce((accumulator,currentValue) => {\r\n                return accumulator && currentValue\r\n            })\r\n        \r\n        return validation;\r\n    }\r\n \r\n    render(){\r\n        \r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n            });\r\n\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                    {formElementsArray.map(formElement => {\r\n                        return (\r\n                            <Input \r\n                                key={formElement.id}\r\n                                elementType={formElement.config.elementType}\r\n                                elementConfig={formElement.config.elementConfig}\r\n                                name={formElement.id}\r\n                                value={formElement.config.value}\r\n                                changed={this.inputChangedHandler}\r\n                                valid={formElement.config.validation.valid}\r\n                                touched={formElement.config.touched}\r\n                                />\r\n                        )\r\n                    })}\r\n                    <Button type='submit' btnType=\"Success\" clicked={this.orderHandler} disabled={!this.submitScreen()}>ORDER</Button>\r\n            </form>\r\n        );\r\n\r\n        if(this.state.loading){\r\n            form = <Spinner/>\r\n        }\r\n\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your contact data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.ingredients,\r\n        price: state.price\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ContactData);","import React, {Component} from 'react';\r\nimport CheckoutSummary from '../../components/CheckoutSummary/CheckoutSummary';\r\nimport {Route} from 'react-router-dom';\r\nimport ContactData from '../ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Checkout extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        // this.state={\r\n        //     ingredients: {},\r\n        //     totalPrice: 0\r\n        // }\r\n\r\n        this.checkoutCancelledHandler = this.checkoutCancelledHandler.bind(this);\r\n        this.checkoutContinuedHandler = this.checkoutContinuedHandler.bind(this);\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     const query = new URLSearchParams(this.props.location.search);\r\n    //     const ingredients = {};\r\n    //     let price = 0;\r\n    //     for (let entry of query.entries()){\r\n    //         if(entry[0] ==='price'){\r\n    //             price = entry[1];\r\n    //         }else{\r\n    //             ingredients[entry[0]] = +entry[1];\r\n    //         }\r\n    //     }\r\n\r\n    //     this.setState({ingredients: ingredients, totalPrice: price});\r\n    // }\r\n\r\n\r\n\r\n    checkoutCancelledHandler(){\r\n        this.props.history.replace('/');\r\n    }\r\n\r\n    checkoutContinuedHandler(){\r\n        this.props.history.replace('/checkout/contact-data')\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <CheckoutSummary \r\n                    ingredients={this.props.ings}\r\n                    checkoutCancelled={this.checkoutCancelledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler}\r\n                    />\r\n                \r\n                <Route \r\n                    path={this.props.match.path + '/contact-data'} \r\n                    component={ContactData}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.ingredients,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css'\r\n\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredient in props.ingredients){\r\n        ingredients.push({\r\n                name: ingredient,\r\n                amount: props.ingredients[ingredient]\r\n            }\r\n        )\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ingredient => {\r\n        return <span \r\n            key={ingredient.name}\r\n            style={{\r\n                textTransform: \"capitalize\",\r\n                display: 'inline-block',\r\n                margin: '0 .8rem',\r\n                border: '1px solid gray',\r\n                padding: '0.5rem'\r\n            }}\r\n            >{ingredient.name} : {ingredient.amount} </span>\r\n    })\r\n\r\n    return(\r\n        <div className={classes.Order}>\r\n            <p style={{marginBottom: '1.2rem'}}>Ingredients: {ingredientOutput}</p>\r\n            <p>Price : <strong>$ {props.price}</strong></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order;","import React, {Component} from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            orders: [],\r\n            loading: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data){\r\n                    fetchedOrders.unshift({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n\r\n                console.log(fetchedOrders);\r\n\r\n                this.setState({loading: false,orders:fetchedOrders})\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => {\r\n                this.setState({loading: false})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.orders.map(order => {\r\n                    return (\r\n                        <Order \r\n                            key={order.id}\r\n                            ingredients={order.ingredients}\r\n                            price={order.price}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withErrorHandler(Orders,axios);","import React, {Component} from 'react';\r\nimport Layout from '../Layout/Layout';\r\nimport BurgerBuilder from '../BurgerBuilder/BurgerBuilder';\r\nimport Checkout from '../Checkout/Checkout';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Orders from '../Orders/Orders';\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return(\r\n      <Layout>\r\n          <Switch>\r\n            <Route path=\"/checkout\" component={Checkout}/>\r\n            <Route path=\"/orders\" component={Orders}/>\r\n            <Route path=\"/\" exact component={BurgerBuilder}/>\r\n\r\n            {/* <BurgerBuilder/> */}\r\n            {/* <Checkout/> */}\r\n          </Switch>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actions from './actions';\r\n\r\nconst initialState = {\r\n    ingredients: {\r\n        salad: 0,\r\n        bacon: 0,\r\n        cheese: 0,\r\n        meat: 0\r\n    },\r\n\r\n    totalPrice: 4\r\n}\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n       \r\n        case actions.ADD_INGREDIENT:\r\n            const newStateAdd = deepClone(state);\r\n            newStateAdd.ingredients[action.ingredient] ++;  \r\n            newStateAdd.totalPrice += INGREDIENT_PRICES[action.ingredient];\r\n\r\n            return newStateAdd;\r\n\r\n        case actions.REMOVE_INGREDIENT:\r\n            const newStateRemove = deepClone(state);\r\n            newStateRemove.ingredients[action.ingredient] --;   \r\n            newStateRemove.totalPrice -= INGREDIENT_PRICES[action.ingredient];        \r\n            return newStateRemove;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/index.css';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore} from 'redux';\r\nimport reducer from './store/reducer';\r\n\r\n\r\nconst store = createStore(reducer);\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter  basename=\"/burger-builder-dev\">\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {app}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}