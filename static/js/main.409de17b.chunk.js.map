{"version":3,"sources":["containers/Logo/Logo.js","containers/NavigationItems/NavigationItems.js","containers/DrawerToggle/DrawerToggle.js","containers/Toolbar/Toolbar.js","containers/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","containers/BuildControl/BuildControl.js","containers/BuildControls/BuildControls.js","containers/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Logout/Logout.js","experimental/Login/Login.js","containers/App/App.js","serviceWorker.js","store/reducers/buildBurger.js","store/reducers/placeOrder.js","store/reducers/fetchOrders.js","store/reducers/authenticate.js","index.js","store/actions/actions.js","store/actions/buildBurger.js","store/actions/placeOrder.js","store/actions/fetchOrders.js","axios/auth.js","store/actions/authenticate.js","axios/orders.js","recycle/Spinner/Spinner.js","containers/Backdrop/Backdrop.js","containers/Modal/Modal.js","containers/withErrorHandler/withErrorHandler.js","hooks/httpErrorHandler.js","containers/BurgerIngredient/BurgerIngredient.js","containers/Burger/Burger.js"],"names":["logo","props","className","NavigationItems","isAuthenticated","useSelector","state","authenticate","token","onClick","sideDrawerClose","to","exact","activeClassName","drawerToggle","clicked","Toolbar","DrawerToggle","drawerToggleClicked","Logo","sideDrawer","Backdrop","show","open","closed","side","Layout","useState","sideDrawerShown","showSideDrawer","SideDrawer","children","control","label","removed","disabled","added","controls","type","buildControls","buttonStatus","orderStatus","Object","keys","map","statusKey","reduce","overallStatus","currentButtonStatus","price","toFixed","BuildControl","key","ingredientAdded","ingredientRemoved","ordered","OrderSummary","continueHandler","loginHandler","ingredientSummary","ingredients","igKey","style","textTransform","cancelOrder","continueOrder","withErrorHandler","dispatch","useDispatch","onInitIngredients","useCallback","actions","onCanceledOrder","ings","buildBurger","totalPrice","placeOrder","error","useEffect","handleCancelPurchase","disabledInfo","orderSummary","burger","Spinner","Burger","BuildControls","ingName","history","replace","Modal","modalClosed","axios","Logout","onLogout","Login","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","min","onSubmit","values","alert","JSON","stringify","errorMessage","name","touched","errors","formErrors","length","handleSubmit","htmlFor","getFieldProps","Checkout","React","lazy","Orders","Auth","App","onPageLoadSignUp","fallback","path","component","BurgerBuilder","routes","Boolean","window","location","hostname","match","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","deepClone","object","parse","reducer","action","_","purchasing","ingredient","loading","purchased","orders","fetching","userId","authData","idToken","localId","composeEnhancers","compose","rootReducer","combineReducers","fetchOrders","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","ADD_INGREDIENT","REMOVE_INGREDIENT","INIT_ORDER","CANCELED_ORDER","CHECKOUT_BURGER","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","addIngredient","removeIngredient","initIngredients","get","response","data","initOrder","canceledOrder","checkoutBurger","purchaseBurger","orderData","post","purchaseBurgerFail","queryParams","res","fetchedOrders","unshift","id","err","instance","create","baseURL","authSuccess","checkAuthTimeout","expirationTime","setTimeout","logout","localStorage","removeItem","checkAuth","getItem","expirationDate","Date","expiry","getTime","auth","isSignUp","returnSecureToken","apiKey","endPoints","signUp","signIn","expiresIn","setItem","authFail","backdrop","memo","prevProps","nextProps","WrappedComponent","httpClient","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","eject","useHttpErrorHandler","confirmError","BurgerIngredient","transformedIngredients","Array","i","igArray","currentIg","concat"],"mappings":"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","file":"static/js/main.409de17b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './logo.scss';\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className={'logo'}>\r\n            {/* <img src={burgerLogo} alt=\"brand-logo\" className={'logo__img'} /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logo;","import React from 'react';\r\nimport './navigationitems.scss'\r\nimport {NavLink} from 'react-router-dom';\r\n// import NavigationItem from '../NavigationItem/NavigationItem';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nconst NavigationItems = (props) =>{\r\n    const isAuthenticated = useSelector(state => state.authenticate.token !== null)\r\n    // let navClass = props.side? 'navigation-items navigation-items--side': 'navigation-items';\r\n\r\n    \r\n    return(\r\n        <ul className='navigation-items'  onClick={props.sideDrawerClose}>\r\n            \r\n            <li className={'navigation-item'}>\r\n                <NavLink \r\n                    to='/'\r\n                    exact\r\n                    activeClassName={'active'}\r\n                >Burger Builder</NavLink>\r\n            </li>\r\n\r\n              \r\n            {isAuthenticated?<li className={'navigation-item'}>\r\n                <NavLink \r\n                    to='/orders'\r\n                    exact\r\n                    activeClassName={'active'}\r\n                >Orders</NavLink>\r\n            </li>: null}\r\n\r\n            \r\n            <li className={'navigation-item'}>\r\n                <NavLink \r\n                    to={isAuthenticated?'/logout' : '/login'}\r\n                    exact\r\n                    activeClassName={'active'}\r\n                >{isAuthenticated? 'Logout': 'Login'}</NavLink>\r\n            </li>\r\n\r\n        </ul>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport './drawertoggle.scss';\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        // <div onClick={props.clicked}>MENU</div>\r\n        <div onClick={props.clicked} className={'drawertoggle'}>\r\n            <div className={'drawertoggle__bar'}></div>\r\n            <div className={'drawertoggle__bar'}></div>\r\n            <div className={'drawertoggle__bar'}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport './toolbar.scss';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'; \r\nimport DrawerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst Toolbar = (props) => {\r\n\r\n    return (\r\n        <div className='toolbar'>\r\n            <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n            <Logo/>\r\n            <nav className='toolbar__nav'>\r\n                <NavigationItems/>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar;\r\n\r\n","import React from 'react';\r\nimport './sidedrawer.scss';\r\n\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props ) => {\r\n    return(\r\n        <>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={props.open? 'sidedrawer sidedrawer--open' : 'sidedrawer sidedrawer--close'}>\r\n                <nav>\r\n                    <NavigationItems side isAuthenticated={props.isAuthenticated} sideDrawerClose={props.closed}/> \r\n                </nav>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default sideDrawer;","import React, {useState} from 'react';\r\nimport './layout.scss';\r\nimport Toolbar from '../Toolbar/Toolbar'; \r\nimport SideDrawer from '../SideDrawer/SideDrawer';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst Layout = props => {\r\n    const isAuthenticated = useSelector(state => state.authenticate.token !== null)\r\n    const [sideDrawerShown, showSideDrawer] = useState(false)\r\n\r\n    const closeSideDrawer = () => {\r\n        showSideDrawer(false)\r\n    }\r\n\r\n    const toggleSideDrawer = () => {\r\n        showSideDrawer(!sideDrawerShown)\r\n    }\r\n\r\n    return(\r\n        <div className=\"app\">\r\n            <Toolbar \r\n                drawerToggleClicked={toggleSideDrawer}\r\n                isAuthenticated={isAuthenticated}/>\r\n            <SideDrawer \r\n                isAuthenticated={isAuthenticated}\r\n                open={sideDrawerShown} \r\n                closed={closeSideDrawer}/>\r\n            <main className='main'>\r\n                {props.children}\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Layout;","import React from 'react';\r\nimport '../../recycle/Button/button.scss'\r\nimport './build-control.scss';\r\n\r\nconst control = (props) => {\r\n    return(\r\n        <div className ='build-control'>\r\n            <div className='build-control__label'>{props.label}</div>\r\n            <button \r\n                className='button--less build-control__button' \r\n                onClick={props.removed}\r\n                disabled={props.disabled}\r\n            >\r\n            Less\r\n            </button>\r\n\r\n            <button \r\n                className='button--more build-control__button'\r\n                onClick={props.added}\r\n            >\r\n            More\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default control;","import React from 'react';\r\nimport '../../recycle/Button/button.scss';\r\nimport './build-controls.scss';\r\nimport BuildControl from '../BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\nconst buildControls = (props) => {\r\n\r\n    const buttonStatus = {...props.disabled}\r\n    const orderStatus = !(Object.keys(buttonStatus).map(statusKey=>{\r\n        return (!buttonStatus[statusKey])\r\n    }).reduce((overallStatus, currentButtonStatus)=>{\r\n        return (overallStatus || currentButtonStatus)\r\n    },false))\r\n\r\n    return (\r\n        <div className='build-controls'>\r\n            <p className='build-controls__price'>Current price: <span>${props.price.toFixed(2)}</span></p>\r\n            {controls.map(control => {\r\n                return (\r\n                <BuildControl \r\n                    key={control.label}\r\n                    label={control.label}\r\n                    added={()=>props.ingredientAdded(control.type)}\r\n                    removed={()=>props.ingredientRemoved(control.type)}\r\n                    disabled={props.disabled[control.type]}\r\n                />\r\n                )\r\n            })}\r\n            \r\n            \r\n            <button \r\n                className='button--success build-controls__order'\r\n                disabled={orderStatus} \r\n                onClick={props.ordered}>Order now!</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport './ordersummary.scss'\r\nimport '../../recycle/Button/button.scss'\r\n\r\n\r\nconst OrderSummary = props => {\r\n\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform:'capitalize'}}>\r\n                    {igKey}\r\n                </span> : {props.ingredients[igKey]}\r\n            </li>\r\n            )\r\n        })\r\n\r\n        const continueButton = function(isAuthenticated, continueHandler, loginHandler){\r\n            if(isAuthenticated){\r\n                return <button className='button--success ordersummary__button' onClick={continueHandler}>Continue</button>\r\n            }else{\r\n                return <button className='button--success ordersummary__button' onClick={loginHandler}>Login</button>\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div className={'ordersummary'}>\r\n                <h3 className={'ordersummary__heading'}>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients :</p>\r\n                <ul className={'ordersummary__items'}>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p className={'ordersummary__info'}><strong>Total Price: ${props.price.toFixed(2)}</strong></p>\r\n                {props.isAuthenticated?null : <p className={\"ordersummary__info\"}>Please login in to continue</p>}\r\n                <button type='button' className='button--failed ordersummary__button' onClick={props.cancelOrder}>Cancel</button>\r\n                {continueButton(props.isAuthenticated,props.continueOrder,props.loginHandler)}\r\n                {/* <Button btnType=\"Success\" clicked={props.continueOrder}>Continue</Button> */}\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nexport default OrderSummary;","import React, {useEffect,useCallback} from 'react';\r\nimport Burger from '../../containers/Burger/Burger';\r\nimport axios from '../../axios/orders';\r\nimport BuildControls from '../../containers/BuildControls/BuildControls';\r\nimport Modal from '../../containers/Modal/Modal';\r\nimport OrderSummary from '../../containers/OrderSummary/OrderSummary';\r\nimport Spinner from '../../recycle/Spinner/Spinner';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports';\r\n\r\nconst BurgerBuilder = props => {\r\n\r\n    const dispatch = useDispatch();\r\n    // eslint-disable-next-line\r\n    const onInitIngredients = useCallback(() => dispatch(actions.initIngredients()),[])\r\n    const onIngredientAdded = (ingName) => dispatch(actions.addIngredient(ingName))\r\n    const onIngredientRemoved = (ingName) => dispatch(actions.removeIngredient(ingName))\r\n    const onInitOrder = () => dispatch(actions.initOrder())\r\n    const onCanceledOrder = () => dispatch(actions.canceledOrder())\r\n\r\n        \r\n    const ings = useSelector(state => state.buildBurger.ingredients)\r\n    const price = useSelector(state => state.buildBurger.totalPrice)\r\n    const ordered = useSelector(state => state.placeOrder.ordered)\r\n    const error = useSelector(state => state.buildBurger.error)\r\n    const isAuthenticated = useSelector(state => state.authenticate.token !== null)\r\n\r\n    useEffect(() => {\r\n        onInitIngredients()\r\n    },[onInitIngredients])\r\n\r\n    const handlePurchase = () => {onInitOrder()}\r\n    const handleCancelPurchase = () => {onCanceledOrder()}\r\n    const handleContinuePurchase = () => {\r\n        onCanceledOrder(); //sets order status to false\r\n        props.history.replace('/checkout')\r\n    }\r\n\r\n    const handlePurchaseLogin = () => {props.history.replace('/auth')}\r\n\r\n    const disabledInfo = {\r\n        ...ings\r\n    }\r\n\r\n    for (let key in disabledInfo){\r\n        disabledInfo[key] = (disabledInfo[key] <= 0)\r\n    }\r\n\r\n    let orderSummary = null;\r\n    let burger = error ? <p>Ingredients can't be loaded :(</p> : <Spinner/>\r\n    if(ings){\r\n        burger = (\r\n            <>\r\n                <Burger ingredients={ings}/>\r\n                <BuildControls\r\n                    ingredientAdded={onIngredientAdded}\r\n                    ingredientRemoved={onIngredientRemoved}\r\n                    disabled={disabledInfo}\r\n                    price={price}\r\n                    ordered={handlePurchase}\r\n                />\r\n                \r\n            </>\r\n        )\r\n\r\n        orderSummary = (\r\n            <OrderSummary \r\n                cancelOrder={handleCancelPurchase}\r\n                ingredients={ings}\r\n                continueOrder={handleContinuePurchase}\r\n                loginHandler={handlePurchaseLogin}\r\n                price={price}\r\n                isAuthenticated={isAuthenticated}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={ordered} modalClosed={handleCancelPurchase}>\r\n                {orderSummary}\r\n            </Modal>\r\n\r\n            {burger}\r\n            \r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default withErrorHandler(BurgerBuilder,axios);","import React,{ useEffect,useCallback} from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport * as actions from '../../store/actions/exports'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst Logout = props => {\r\n    const dispatch = useDispatch();\r\n    const onLogout = useCallback(() => dispatch(actions.logout()),[dispatch])\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        onLogout()\r\n    },[onLogout])\r\n\r\n    return (\r\n        <Redirect to = '/' />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React from 'react';\r\nimport './login.scss';\r\nimport '../../recycle/Button/button.scss'\r\nimport '../../recycle/FormInput/form-input.scss';\r\nimport {useFormik} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst Login = props => {\r\n  // Notice that we have to initialize ALL of fields with values. These\r\n  // could come from props, but since we don't want to prefill this form,\r\n  // we just use an empty string. If you don't do this, React will yell\r\n  // at you.\r\n  const formik = useFormik ({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema: Yup.object ({\r\n      email: Yup.string ()\r\n        .email ('is invalid')\r\n        .required ('is required'),\r\n      password: Yup.string ()\r\n        .required ('is required')\r\n        .min (6, 'must be 6 characters atleast')\r\n    }),\r\n\r\n    onSubmit: values => {\r\n      alert (JSON.stringify (values, null, 2));\r\n    },\r\n  });\r\n\r\n  function errorMessage(name){\r\n    if(formik.touched[name] && formik.errors[name]){\r\n      return <span className='form-input__toolkit'>{formik.errors[name]}</span>\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  const formErrors = Object.keys(formik.errors).length;\r\n\r\n  return (\r\n    <div className='login'>\r\n      <form className='login__form' onSubmit={formik.handleSubmit}>\r\n\r\n          <div className='form-input'>\r\n            <label className='form-input__label' htmlFor=\"email\">Email Address {errorMessage('email')}</label>\r\n            <input className='form-input__field' name=\"email\" {...formik.getFieldProps ('email')} />\r\n          </div>\r\n\r\n          <div className='form-input'>\r\n            <label className='form-input__label' htmlFor=\"email\">Password {errorMessage('password')}</label>\r\n            <input className='form-input__field' name=\"password\" type=\"password\" {...formik.getFieldProps ('password')} />\r\n          </div>\r\n         \r\n        <button disabled={!formErrors <= 0} type=\"submit\" className=\"button--success login__submit\">Submit</button>\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, {useEffect, Suspense, useCallback} from 'react';\r\nimport Layout from '../Layout/Layout';\r\nimport BurgerBuilder from '../BurgerBuilder/BurgerBuilder';\r\nimport Logout from '../Logout/Logout';\r\nimport Login from '../../experimental/Login/Login';\r\nimport {Route, Switch,Redirect} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports'\r\nimport Spinner from '../../recycle/Spinner/Spinner'\r\n\r\nconst Checkout = React.lazy(() => {return import ('../Checkout/Checkout')})\r\nconst Orders = React.lazy(() => {return import ('../Orders/Orders')})\r\nconst Auth = React.lazy(() => {return import ('../Auth/Auth')})\r\n\r\n\r\nconst App = props => {\r\n\r\n  const dispatch = useDispatch();\r\n  const onPageLoadSignUp = useCallback(() => dispatch(actions.checkAuth()),[dispatch])\r\n  const isAuthenticated = useSelector(state => state.authenticate.token !== null)\r\n\r\n  useEffect(() => {\r\n    onPageLoadSignUp();\r\n  },[onPageLoadSignUp])\r\n\r\n  const routes = function (isAuthenticated){\r\n    if(isAuthenticated){\r\n      return (\r\n          <>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/checkout\" component={Checkout}/></Suspense>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/orders\" component={Orders}/></Suspense>\r\n            <Route path=\"/logout\" component={Logout}/>\r\n            <Route path=\"/\" exact component={BurgerBuilder}/>\r\n            <Redirect to =\"/\" />\r\n          </>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n          <Suspense fallback={<Spinner/>}><Route path=\"/auth\" component={Auth} /></Suspense>\r\n          <Route path=\"/login\" component={Login} />\r\n          {/* <Route path=\"/auth\" component={Auth} /> */}\r\n          <Route path=\"/\" exact component={BurgerBuilder}/>\r\n          <Redirect to = \"/login\"/>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Layout>\r\n      <Switch>\r\n          {routes(isAuthenticated)}\r\n      </Switch>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n}\r\n\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n\r\n        case actions.SET_INGREDIENTS:{\r\n            const _ = deepClone(state);\r\n            if(!_.ingredients){\r\n                _.ingredients = {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat\r\n                    }\r\n\r\n                _.error = false;\r\n                _.purchasing = false;\r\n                return _\r\n\r\n            } else {\r\n                _.error = false;\r\n                return _\r\n            }\r\n        }\r\n              \r\n        \r\n        case actions.FETCH_INGREDIENTS_FAILED:{\r\n            const _ = deepClone(state)\r\n            _.error = true;\r\n            return _;       \r\n        }\r\n\r\n        case actions.ADD_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] ++;  \r\n            _.totalPrice += INGREDIENT_PRICES[action.ingredient];\r\n\r\n            return _;\r\n        }\r\n\r\n        case actions.REMOVE_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] --;   \r\n            _.totalPrice -= INGREDIENT_PRICES[action.ingredient];        \r\n            return _;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    purchased: false,\r\n    ordered: false\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case actions.INIT_ORDER: {\r\n            const _ = deepClone(state)\r\n            _.ordered = true\r\n            return _\r\n            \r\n        }\r\n\r\n        case actions.CANCELED_ORDER: {\r\n            const _ = deepClone(state)\r\n            _.ordered = false\r\n            return _\r\n                \r\n        }\r\n\r\n        case actions.CHECKOUT_BURGER: {\r\n            const _ = deepClone(state);\r\n            _.purchased = false\r\n            return _\r\n        }\r\n\r\n        case actions.PURCHASE_BURGER_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            _.purchased = true;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_START:{\r\n            const _ = deepClone(state);\r\n            _.loading = true;\r\n            return _;\r\n        }\r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    fetching: true,\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        \r\n        case actions.FETCH_ORDERS_START:\r\n            const _ = deepClone(state);\r\n            _.fetching = true;\r\n            return _;\r\n\r\n\r\n        case actions.FETCH_ORDERS_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.orders = action.orders;\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.FETCH_ORDERS_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n        \r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actions.AUTH_START:{\r\n            const _ = deepClone(state);\r\n            _.loading = true;\r\n            _.error = null;\r\n            return _;\r\n        }\r\n\r\n        case actions.AUTH_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.token = action.authData.idToken\r\n            _.userId = action.authData.localId\r\n            _.error = null\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.AUTH_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.error = action.error\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.AUTH_LOGOUT:{\r\n            const _ = deepClone(state);\r\n            _.token = null\r\n            _.userId = null\r\n            return _;\r\n        }\r\n        \r\n        default: \r\n            return (state)\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/index.scss';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, combineReducers, compose} from 'redux';\r\n// import reducer from './store/reducer';\r\nimport buildBurger from './store/reducers/buildBurger'\r\nimport placeOrder from './store/reducers/placeOrder'\r\nimport fetchOrders from './store/reducers/fetchOrders'\r\nimport authenticate from './store/reducers/authenticate'\r\nimport thunk from 'redux-thunk';\r\n\r\n//Basic redux setup\r\n// const store = createStore(burgerBuilderReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconst composeEnhancers = (process.env.NODE_ENV === 'development'? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  buildBurger: buildBurger,\r\n  placeOrder: placeOrder,\r\n  fetchOrders: fetchOrders,\r\n  authenticate: authenticate\r\n})\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n      applyMiddleware(thunk)\r\n    ));\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter  basename=\"/burgerbuilder\">\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>//disabled to show popUp :(\r\n    <>\r\n      {app}\r\n    </>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n\r\nexport const INIT_ORDER = 'INIT_ORDER';\r\nexport const CANCELED_ORDER = 'CANCELED_ORDER';\r\nexport const CHECKOUT_BURGER = 'CHECKOUT_BURGER';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDER_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDER_FAIL';\r\n\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actions.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nconst fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actions.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const addIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.ADD_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.REMOVE_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch  => (\r\n       axios.get('/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed())\r\n        })\r\n    )\r\n}","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\n\r\nconst purchaseBurgerStart = () => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_SUCCESS,\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const initOrder = () => {\r\n    return {\r\n        type: actions.INIT_ORDER\r\n    }\r\n}\r\n\r\n\r\nexport const canceledOrder = () => {\r\n    return {\r\n        type: actions.CANCELED_ORDER\r\n    }\r\n}\r\n\r\nexport const checkoutBurger = () => {\r\n    return {\r\n        type: actions.CHECKOUT_BURGER\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData,token) => {\r\n    return dispatch => {\r\n        \r\n        dispatch(purchaseBurgerStart())\r\n        axios.post('/orders.json?auth=' + token,orderData)\r\n        .then(response => {\r\n            dispatch(purchaseBurgerSuccess())\r\n        })\r\n        .catch(error => {\r\n            dispatch(purchaseBurgerFail(error))\r\n        })\r\n    }\r\n}","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\nconst fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\n\r\nconst fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nconst fetchOrdersStart = () => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const fetchOrders = (token,userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart())\r\n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\r\n        axios.get(`/orders.json${queryParams}`)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data){\r\n                    fetchedOrders.unshift({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err))\r\n            })\r\n    }\r\n}","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE'\r\n});\r\n\r\n\r\nexport default instance;","import * as actions from './actions';\r\nimport axios from '../../axios/auth'\r\n\r\nconst authStart = () => {\r\n    return {\r\n        type: actions.AUTH_START\r\n    }\r\n}\r\n\r\n\r\nconst authSuccess = (authData) => {\r\n    return {\r\n        type: actions.AUTH_SUCCESS,\r\n        authData: authData\r\n    }\r\n}\r\n\r\n\r\nconst authFail = (error) => {\r\n    return {\r\n        type: actions.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\nconst checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        },expirationTime * 900)\r\n    }\r\n}\r\n\r\n\r\n//exports\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId')\r\n    return {\r\n        type: actions.AUTH_LOGOUT\r\n    }\r\n};\r\n\r\n\r\nexport const checkAuth = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n            \r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n\r\n            if (expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess({idToken: token, localId: userId}))\r\n                const expiry = (expirationDate.getTime() - new Date().getTime())/1000;\r\n                dispatch(checkAuthTimeout(expiry))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\nexport const auth = (email,password,isSignUp) =>{\r\n    return dispatch => {\r\n        dispatch(authStart())\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        const apiKey = 'AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE';\r\n\r\n        const endPoints = {\r\n            signUp : `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`,\r\n            signIn : `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`\r\n        }\r\n    \r\n        axios.post((isSignUp? endPoints.signUp : endPoints.signIn), authData)\r\n            .then(response => {\r\n                const expirationDate = new Date( new Date().getTime() + new Date(response.data.expiresIn*1000).getTime())\r\n                localStorage.setItem('token',response.data.idToken)\r\n                localStorage.setItem('expirationDate',expirationDate)\r\n                localStorage.setItem('userId',response.data.localId)\r\n\r\n                dispatch(checkAuthTimeout(response.data.expiresIn))\r\n                dispatch(authSuccess(response.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(authFail(error.response.data.error))\r\n            })\r\n    }\r\n}","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-builder-12ae6.firebaseio.com'\r\n});\r\n\r\n\r\nexport default instance;","import React from 'react';\r\nimport './spinner.scss'\r\n\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='spinner'>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Spinner ;","import React from 'react';\r\nimport './backdrop.scss';\r\n\r\n\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        props.show ? <div className='backdrop' onClick={props.clicked}></div> : null\r\n    )\r\n}\r\n\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport './modal.scss'\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n\r\nconst Modal = props => {\r\n    return(\r\n        <>\r\n            <Backdrop show={props.show} clicked={props.modalClosed}/>\r\n            <div \r\n                className={props.show? 'modal modal--show': 'modal'}\r\n            >\r\n                {props.children}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction memoCondition(prevProps,nextProps){\r\n    const result = (nextProps.show === prevProps.show ) && (nextProps.children === prevProps.children)\r\n    return result\r\n    \r\n}\r\n\r\nexport default React.memo(Modal,memoCondition);","import React from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport useHttpErrorHandler from '../../hooks/httpErrorHandler'\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return props => {\r\n      const [error, confirmError] = useHttpErrorHandler(axios);\r\n        return(\r\n            <>\r\n               <Modal \r\n                    show={error}\r\n                    modalClosed={confirmError}\r\n               >\r\n                   {error ? error.message : null}\r\n               </Modal>\r\n               <WrappedComponent {...props}/>\r\n           </>\r\n            )\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","\r\nimport {useState,useEffect} from 'react';\r\n\r\nexport default httpClient => {\r\n    const [error, setError] = useState(null)\r\n\r\n        const reqInterceptor = httpClient.interceptors.request.use(req => {\r\n            setError(null)\r\n            return req;\r\n        })\r\n        const resInterceptor = httpClient.interceptors.response.use(res => res, err => {\r\n            setError(err)\r\n        })\r\n\r\n        useEffect(() => {\r\n            //....\r\n            return () => {\r\n                httpClient.interceptors.request.eject(reqInterceptor);\r\n                httpClient.interceptors.response.eject(resInterceptor);\r\n            }\r\n        // eslint-disable-next-line\r\n        },[reqInterceptor,resInterceptor]) \r\n\r\n        const confirmError = () => {\r\n            setError(null)\r\n        }\r\n\r\n    return [error,confirmError]\r\n}","import React from 'react';\r\nimport './burger-ingredient.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BurgerIngredient = props => {\r\n    let ingredient = null;\r\n\r\n        switch(props.type){\r\n            case('bread-bottom'):\r\n                ingredient = <div className='bread-bottom'></div>;\r\n                break;\r\n            \r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className='bread-top'>\r\n                        <div className='seeds1'></div>\r\n                        <div className='seeds2'></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            \r\n            case('meat'):\r\n                ingredient = <div className='meat'></div>\r\n                break;\r\n            \r\n            case('cheese'):\r\n                ingredient = <div className='cheese'></div>\r\n                break;\r\n            \r\n            case('bacon'):\r\n                ingredient = <div className='bacon'></div>\r\n                break;\r\n            \r\n            case('salad'):\r\n                ingredient = <div className='salad'></div>\r\n                break;\r\n            \r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n}\r\n\r\n\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport './burger.scss';\r\nimport BurgerIngredient from '../BurgerIngredient/BurgerIngredient';\r\n\r\n\r\nconst burger = (props) =>{\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_,i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        })\r\n    })\r\n    .reduce((igArray,currentIg)=>{\r\n        return igArray.concat(currentIg)\r\n    },[]);\r\n\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients = <p className='burger__instruction'>FEEL FREE TO ADD INGREDIENTS</p>\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className='burger burger__scroll'>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default burger;"],"sourceRoot":""}