{"version":3,"sources":["store/actions/actions.js","store/actions/buildBurger.js","store/actions/placeOrder.js","store/actions/fetchOrders.js","axios/auth.js","store/actions/authenticate.js","axios/orders.js","recycle/Spinner/Spinner.js","containers/Backdrop/Backdrop.js","containers/Modal/Modal.js","containers/withErrorHandler/withErrorHandler.js","hooks/httpErrorHandler.js","containers/BurgerIngredient/BurgerIngredient.js","containers/Burger/Burger.js","containers/Logo/Logo.js","containers/NavigationItems/NavigationItems.js","containers/DrawerToggle/DrawerToggle.js","containers/Toolbar/Toolbar.js","containers/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","containers/BuildControl/BuildControl.js","containers/BuildControls/BuildControls.js","containers/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","containers/Logout/Logout.js","containers/App/App.js","serviceWorker.js","store/reducers/buildBurger.js","store/reducers/placeOrder.js","store/reducers/fetchOrders.js","store/reducers/authenticate.js","index.js"],"names":["SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","ADD_INGREDIENT","REMOVE_INGREDIENT","INIT_ORDER","CANCELED_ORDER","CHECKOUT_BURGER","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","addIngredient","ingredient","type","actions","removeIngredient","initIngredients","dispatch","axios","get","then","response","ingredients","data","catch","error","initOrder","canceledOrder","checkoutBurger","purchaseBurger","orderData","token","post","purchaseBurgerFail","fetchOrders","userId","queryParams","res","orders","fetchedOrders","key","unshift","id","err","instance","create","baseURL","storeLoginData","authData","setLogoutTimer","expirationTime","setTimeout","logout","localStorage","removeItem","checkAuth","getItem","expirationDate","Date","idToken","localId","expiry","getTime","login","endPoint","returnSecureToken","expiresIn","setItem","authFail","Spinner","className","backdrop","props","show","onClick","clicked","React","memo","modalClosed","children","prevProps","nextProps","withErrorHandler","WrappedComponent","httpClient","useState","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","useEffect","eject","useHttpErrorHandler","confirmError","Modal","message","BurgerIngredient","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","igArray","currentIg","concat","length","logo","NavigationItems","isAuthenticated","useSelector","state","authenticate","sideDrawerClose","to","exact","activeClassName","drawerToggle","Toolbar","DrawerToggle","drawerToggleClicked","Logo","sideDrawer","Backdrop","open","closed","side","Layout","sideDrawerShown","showSideDrawer","SideDrawer","control","label","removed","disabled","added","controls","buildControls","buttonStatus","orderStatus","statusKey","overallStatus","currentButtonStatus","price","toFixed","BuildControl","ingredientAdded","ingredientRemoved","ordered","OrderSummary","continueHandler","loginHandler","ingredientSummary","style","textTransform","cancelOrder","continueOrder","useDispatch","onCanceledOrder","ings","buildBurger","totalPrice","placeOrder","handleCancelPurchase","disabledInfo","orderSummary","Burger","BuildControls","ingName","history","replace","Logout","onLogout","useCallback","Checkout","lazy","Orders","Login","App","fallback","path","component","BurgerBuilder","routes","Boolean","window","location","hostname","match","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","deepClone","object","JSON","parse","stringify","reducer","action","purchasing","loading","purchased","fetching","composeEnhancers","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.1719757e.chunk.js","sourcesContent":["export const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\n\r\nexport const INIT_ORDER = 'INIT_ORDER';\r\nexport const CANCELED_ORDER = 'CANCELED_ORDER';\r\nexport const CHECKOUT_BURGER = 'CHECKOUT_BURGER';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDER_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDER_FAIL';\r\n\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actions.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nconst fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actions.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const addIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.ADD_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (ingredient) => {\r\n    return {\r\n        type: actions.REMOVE_INGREDIENT,\r\n        ingredient: ingredient\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch  => (\r\n       axios.get('/ingredients.json')\r\n        .then(response => {\r\n            dispatch(setIngredients(response.data))\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngredientsFailed())\r\n        })\r\n    )\r\n}","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\n\r\nconst purchaseBurgerStart = () => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_SUCCESS,\r\n    }\r\n}\r\n\r\n\r\nconst purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actions.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const initOrder = () => {\r\n    return {\r\n        type: actions.INIT_ORDER\r\n    }\r\n}\r\n\r\n\r\nexport const canceledOrder = () => {\r\n    return {\r\n        type: actions.CANCELED_ORDER\r\n    }\r\n}\r\n\r\nexport const checkoutBurger = () => {\r\n    return {\r\n        type: actions.CHECKOUT_BURGER\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData,token) => {\r\n    return dispatch => {\r\n        \r\n        dispatch(purchaseBurgerStart())\r\n        axios.post('/orders.json?auth=' + token,orderData)\r\n        .then(response => {\r\n            dispatch(purchaseBurgerSuccess())\r\n        })\r\n        .catch(error => {\r\n            dispatch(purchaseBurgerFail(error))\r\n        })\r\n    }\r\n}","import * as actions from './actions';\r\nimport axios from '../../axios/orders';\r\n\r\n\r\n\r\nconst fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\n\r\nconst fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nconst fetchOrdersStart = () => {\r\n    return {\r\n        type: actions.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\n//EXPORTS\r\n\r\nexport const fetchOrders = (token,userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart())\r\n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\r\n        axios.get(`/orders.json${queryParams}`)\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for (let key in res.data){\r\n                    fetchedOrders.unshift({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders))\r\n            })\r\n            .catch(err => {\r\n                dispatch(fetchOrdersFail(err))\r\n            })\r\n    }\r\n}","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE'\r\n});\r\n\r\n\r\nexport default instance;","import * as actions from './actions';\r\nimport axios from '../../axios/auth'\r\n\r\nconst authStart = () => {\r\n    return {\r\n        type: actions.AUTH_START\r\n    }\r\n}\r\n\r\n\r\nconst storeLoginData = (authData) => {\r\n    return {\r\n        type: actions.AUTH_SUCCESS,\r\n        authData: authData\r\n    }\r\n}\r\n\r\n\r\nconst authFail = (error) => {\r\n    return {\r\n        type: actions.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\nconst setLogoutTimer = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        },expirationTime * 900)\r\n    }\r\n}\r\n\r\n\r\n//exports\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId')\r\n    return {\r\n        type: actions.AUTH_LOGOUT\r\n    }\r\n};\r\n\r\n\r\nexport const checkAuth = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n            \r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n\r\n            if (expirationDate <= new Date()){\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(storeLoginData({idToken: token, localId: userId}))\r\n                const expiry = (expirationDate.getTime() - new Date().getTime())/1000;\r\n                dispatch(setLogoutTimer(expiry))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\nexport const login = authData =>{\r\n    return dispatch => {\r\n        dispatch(authStart())\r\n        \r\n\r\n        const apiKey = 'AIzaSyB9KjbBy3MryQYOKkZDjOXiYzScBLApRFE';\r\n        const endPoint = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`;\r\n        // {\r\n        //     // signUp : `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`,\r\n        //     signIn : `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`\r\n        // }\r\n    \r\n        axios.post(endPoint, {...authData,returnSecureToken: true})\r\n            .then(response => {\r\n                const expirationDate = new Date( new Date().getTime() + new Date(response.data.expiresIn*1000).getTime())\r\n                localStorage.setItem('token',response.data.idToken)\r\n                localStorage.setItem('expirationDate',expirationDate)\r\n                localStorage.setItem('userId',response.data.localId)\r\n\r\n                dispatch(setLogoutTimer(response.data.expiresIn))\r\n                dispatch(storeLoginData(response.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(authFail(error.response.data.error))\r\n            })\r\n    }\r\n}","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-builder-12ae6.firebaseio.com'\r\n});\r\n\r\n\r\nexport default instance;","import React from 'react';\r\nimport './spinner.scss'\r\n\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='spinner'>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Spinner ;","import React from 'react';\r\nimport './backdrop.scss';\r\n\r\n\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        props.show ? <div className='backdrop' onClick={props.clicked}></div> : null\r\n    )\r\n}\r\n\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport './modal.scss'\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n\r\nconst Modal = props => {\r\n    return(\r\n        <>\r\n            <Backdrop show={props.show} clicked={props.modalClosed}/>\r\n            <div \r\n                className={props.show? 'modal modal--show': 'modal'}\r\n            >\r\n                {props.children}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction memoCondition(prevProps,nextProps){\r\n    const result = (nextProps.show === prevProps.show ) && (nextProps.children === prevProps.children)\r\n    return result\r\n    \r\n}\r\n\r\nexport default React.memo(Modal,memoCondition);","import React from 'react';\r\nimport Modal from '../Modal/Modal';\r\nimport useHttpErrorHandler from '../../hooks/httpErrorHandler'\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return props => {\r\n      const [error, confirmError] = useHttpErrorHandler(axios);\r\n        return(\r\n            <>\r\n               <Modal \r\n                    show={error}\r\n                    modalClosed={confirmError}\r\n               >\r\n                   {error ? error.message : null}\r\n               </Modal>\r\n               <WrappedComponent {...props}/>\r\n           </>\r\n            )\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","\r\nimport {useState,useEffect} from 'react';\r\n\r\nexport default httpClient => {\r\n    const [error, setError] = useState(null)\r\n\r\n        const reqInterceptor = httpClient.interceptors.request.use(req => {\r\n            setError(null)\r\n            return req;\r\n        })\r\n        const resInterceptor = httpClient.interceptors.response.use(res => res, err => {\r\n            setError(err)\r\n        })\r\n\r\n        useEffect(() => {\r\n            //....\r\n            return () => {\r\n                httpClient.interceptors.request.eject(reqInterceptor);\r\n                httpClient.interceptors.response.eject(resInterceptor);\r\n            }\r\n        // eslint-disable-next-line\r\n        },[reqInterceptor,resInterceptor]) \r\n\r\n        const confirmError = () => {\r\n            setError(null)\r\n        }\r\n\r\n    return [error,confirmError]\r\n}","import React from 'react';\r\nimport './burger-ingredient.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BurgerIngredient = props => {\r\n    let ingredient = null;\r\n\r\n        switch(props.type){\r\n            case('bread-bottom'):\r\n                ingredient = <div className='bread-bottom'></div>;\r\n                break;\r\n            \r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className='bread-top'>\r\n                        <div className='seeds1'></div>\r\n                        <div className='seeds2'></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            \r\n            case('meat'):\r\n                ingredient = <div className='meat'></div>\r\n                break;\r\n            \r\n            case('cheese'):\r\n                ingredient = <div className='cheese'></div>\r\n                break;\r\n            \r\n            case('bacon'):\r\n                ingredient = <div className='bacon'></div>\r\n                break;\r\n            \r\n            case('salad'):\r\n                ingredient = <div className='salad'></div>\r\n                break;\r\n            \r\n            default:\r\n                ingredient = null;\r\n        }\r\n    \r\n        return ingredient;\r\n}\r\n\r\n\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport './burger.scss';\r\nimport BurgerIngredient from '../BurgerIngredient/BurgerIngredient';\r\n\r\n\r\nconst burger = (props) =>{\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_,i) => {\r\n            return <BurgerIngredient key={igKey + i} type={igKey} />\r\n        })\r\n    })\r\n    .reduce((igArray,currentIg)=>{\r\n        return igArray.concat(currentIg)\r\n    },[]);\r\n\r\n    if (transformedIngredients.length === 0){\r\n        transformedIngredients = <p className='burger__instruction'>FEEL FREE TO ADD INGREDIENTS</p>\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className='burger burger__scroll'>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default burger;","import React from 'react';\r\nimport './logo.scss';\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className={'logo'}>\r\n            {/* <img src={burgerLogo} alt=\"brand-logo\" className={'logo__img'} /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default logo;","import React  from 'react';\r\nimport './navigationitems.scss'\r\nimport {NavLink} from 'react-router-dom';\r\n// import NavigationItem from '../NavigationItem/NavigationItem';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nconst NavigationItems = (props) =>{\r\n    const token = useSelector(state => state.authenticate.token);\r\n    const isAuthenticated = token !== null;\r\n\r\n    return(\r\n        <ul className='navigation-items'  onClick={props.sideDrawerClose}>\r\n            \r\n            <li className={'navigation-item'}>\r\n                <NavLink \r\n                    to='/'\r\n                    exact\r\n                    activeClassName={'active'}\r\n                >Burger Builder</NavLink>\r\n            </li>\r\n\r\n              \r\n            {isAuthenticated?<li className={'navigation-item'}>\r\n                <NavLink \r\n                    to='/orders'\r\n                    exact\r\n                    activeClassName={'active'}\r\n                >Orders</NavLink>\r\n            </li>: null}\r\n\r\n            <li className={'navigation-item'}>\r\n                <NavLink \r\n                    to={isAuthenticated?'/logout' : '/login'}\r\n                    exact\r\n                    activeClassName={'active'}\r\n                >{isAuthenticated? 'Logout': 'Login'}</NavLink>\r\n            </li>\r\n\r\n        </ul>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport './drawertoggle.scss';\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        // <div onClick={props.clicked}>MENU</div>\r\n        <div onClick={props.clicked} className={'drawertoggle'}>\r\n            <div className={'drawertoggle__bar'}></div>\r\n            <div className={'drawertoggle__bar'}></div>\r\n            <div className={'drawertoggle__bar'}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport './toolbar.scss';\r\nimport Logo from '../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'; \r\nimport DrawerToggle from '../DrawerToggle/DrawerToggle';\r\n\r\nconst Toolbar = (props) => {\r\n\r\n    return (\r\n        <div className='toolbar'>\r\n            <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n            <Logo/>\r\n            <nav className='toolbar__nav'>\r\n                <NavigationItems/>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar;\r\n\r\n","import React from 'react';\r\nimport './sidedrawer.scss';\r\n\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props ) => {\r\n    return(\r\n        <>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={props.open? 'sidedrawer sidedrawer--open' : 'sidedrawer sidedrawer--close'}>\r\n                <nav>\r\n                    <NavigationItems side isAuthenticated={props.isAuthenticated} sideDrawerClose={props.closed}/> \r\n                </nav>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default sideDrawer;","import React, {useState} from 'react';\r\nimport './layout.scss';\r\nimport Toolbar from '../Toolbar/Toolbar'; \r\nimport SideDrawer from '../SideDrawer/SideDrawer';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst Layout = props => {\r\n    const isAuthenticated = useSelector(state => state.authenticate.token !== null)\r\n    const [sideDrawerShown, showSideDrawer] = useState(false)\r\n\r\n    const closeSideDrawer = () => {\r\n        showSideDrawer(false)\r\n    }\r\n\r\n    const toggleSideDrawer = () => {\r\n        showSideDrawer(!sideDrawerShown)\r\n    }\r\n\r\n    return(\r\n        <div className=\"app\">\r\n            <Toolbar \r\n                drawerToggleClicked={toggleSideDrawer}\r\n                isAuthenticated={isAuthenticated}/>\r\n            <SideDrawer \r\n                isAuthenticated={isAuthenticated}\r\n                open={sideDrawerShown} \r\n                closed={closeSideDrawer}/>\r\n            <main className='main'>\r\n                {props.children}\r\n            </main>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Layout;","import React from 'react';\r\nimport '../../recycle/Button/button.scss'\r\nimport './build-control.scss';\r\n\r\nconst control = (props) => {\r\n    return(\r\n        <div className ='build-control'>\r\n            <div className='build-control__label'>{props.label}</div>\r\n            <button \r\n                className='button--less build-control__button' \r\n                onClick={props.removed}\r\n                disabled={props.disabled}\r\n            >\r\n            Less\r\n            </button>\r\n\r\n            <button \r\n                className='button--more build-control__button'\r\n                onClick={props.added}\r\n            >\r\n            More\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default control;","import React from 'react';\r\nimport '../../recycle/Button/button.scss';\r\nimport './build-controls.scss';\r\nimport BuildControl from '../BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'}\r\n];\r\n\r\nconst buildControls = (props) => {\r\n\r\n    const buttonStatus = {...props.disabled}\r\n    const orderStatus = !(Object.keys(buttonStatus).map(statusKey=>{\r\n        return (!buttonStatus[statusKey])\r\n    }).reduce((overallStatus, currentButtonStatus)=>{\r\n        return (overallStatus || currentButtonStatus)\r\n    },false))\r\n\r\n    return (\r\n        <div className='build-controls'>\r\n            <p className='build-controls__price'>Current price: <span>${props.price.toFixed(2)}</span></p>\r\n            {controls.map(control => {\r\n                return (\r\n                <BuildControl \r\n                    key={control.label}\r\n                    label={control.label}\r\n                    added={()=>props.ingredientAdded(control.type)}\r\n                    removed={()=>props.ingredientRemoved(control.type)}\r\n                    disabled={props.disabled[control.type]}\r\n                />\r\n                )\r\n            })}\r\n            \r\n            \r\n            <button \r\n                className='button--success build-controls__order'\r\n                disabled={orderStatus} \r\n                onClick={props.ordered}>Order now!</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport './ordersummary.scss'\r\nimport '../../recycle/Button/button.scss'\r\n\r\n\r\nconst OrderSummary = props => {\r\n\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return (\r\n            <li key={igKey}>\r\n                <span style={{textTransform:'capitalize'}}>\r\n                    {igKey}\r\n                </span> : {props.ingredients[igKey]}\r\n            </li>\r\n            )\r\n        })\r\n\r\n        const continueButton = function(isAuthenticated, continueHandler, loginHandler){\r\n            if(isAuthenticated){\r\n                return <button className='button--success ordersummary__button' onClick={continueHandler}>Continue</button>\r\n            }else{\r\n                return <button className='button--success ordersummary__button' onClick={loginHandler}>Login</button>\r\n            }\r\n        }\r\n\r\n        return(\r\n            <div className={'ordersummary'}>\r\n                <h3 className={'ordersummary__heading'}>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients :</p>\r\n                <ul className={'ordersummary__items'}>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p className={'ordersummary__info'}><strong>Total Price: ${props.price.toFixed(2)}</strong></p>\r\n                {props.isAuthenticated?null : <p className={\"ordersummary__info\"}>Please login in to continue</p>}\r\n                <button type='button' className='button--failed ordersummary__button' onClick={props.cancelOrder}>Cancel</button>\r\n                {continueButton(props.isAuthenticated,props.continueOrder,props.loginHandler)}\r\n                {/* <Button btnType=\"Success\" clicked={props.continueOrder}>Continue</Button> */}\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\n\r\nexport default OrderSummary;","import React, {useEffect} from 'react';\r\nimport Burger from '../../containers/Burger/Burger';\r\nimport axios from '../../axios/orders';\r\nimport BuildControls from '../../containers/BuildControls/BuildControls';\r\nimport Modal from '../../containers/Modal/Modal';\r\nimport OrderSummary from '../../containers/OrderSummary/OrderSummary';\r\nimport Spinner from '../../recycle/Spinner/Spinner';\r\nimport withErrorHandler from '../withErrorHandler/withErrorHandler';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports';\r\n\r\nconst BurgerBuilder = props => {\r\n\r\n    const dispatch = useDispatch();\r\n    // eslint-disable-next-line\r\n    \r\n    const onIngredientAdded = (ingName) => dispatch(actions.addIngredient(ingName))\r\n    const onIngredientRemoved = (ingName) => dispatch(actions.removeIngredient(ingName))\r\n    const onInitOrder = () => dispatch(actions.initOrder())\r\n    const onCanceledOrder = () => dispatch(actions.canceledOrder())\r\n\r\n        \r\n    const ings = useSelector(state => state.buildBurger.ingredients)\r\n    const price = useSelector(state => state.buildBurger.totalPrice)\r\n    const ordered = useSelector(state => state.placeOrder.ordered)\r\n    const error = useSelector(state => state.buildBurger.error)\r\n    const isAuthenticated = useSelector(state => state.authenticate.token !== null)\r\n\r\n    useEffect(() => {\r\n        dispatch(actions.initIngredients())\r\n    },[dispatch])\r\n\r\n    const handlePurchase = () => {onInitOrder()}\r\n    const handleCancelPurchase = () => {onCanceledOrder()}\r\n    const handleContinuePurchase = () => {\r\n        onCanceledOrder(); //sets order status to false\r\n        props.history.replace('/checkout')\r\n    }\r\n\r\n    const handlePurchaseLogin = () => {props.history.replace('/login')}\r\n\r\n    const disabledInfo = {\r\n        ...ings\r\n    }\r\n\r\n    for (let key in disabledInfo){\r\n        disabledInfo[key] = (disabledInfo[key] <= 0)\r\n    }\r\n\r\n    let orderSummary = null;\r\n    let burger = error ? <p>Ingredients can't be loaded :(</p> : <Spinner/>\r\n    if(ings){\r\n        burger = (\r\n            <>\r\n                <Burger ingredients={ings}/>\r\n                <BuildControls\r\n                    ingredientAdded={onIngredientAdded}\r\n                    ingredientRemoved={onIngredientRemoved}\r\n                    disabled={disabledInfo}\r\n                    price={price}\r\n                    ordered={handlePurchase}\r\n                />\r\n                \r\n            </>\r\n        )\r\n\r\n        orderSummary = (\r\n            <OrderSummary \r\n                cancelOrder={handleCancelPurchase}\r\n                ingredients={ings}\r\n                continueOrder={handleContinuePurchase}\r\n                loginHandler={handlePurchaseLogin}\r\n                price={price}\r\n                isAuthenticated={isAuthenticated}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={ordered} modalClosed={handleCancelPurchase}>\r\n                {orderSummary}\r\n            </Modal>\r\n\r\n            {burger}\r\n            \r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default withErrorHandler(BurgerBuilder,axios);","import React,{ useEffect,useCallback} from 'react';\r\nimport {useDispatch} from 'react-redux'\r\nimport * as actions from '../../store/actions/exports'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nconst Logout = props => {\r\n    const dispatch = useDispatch();\r\n    const onLogout = useCallback(() => dispatch(actions.logout()),[dispatch])\r\n\r\n    useEffect(() => {\r\n        onLogout()\r\n    },[onLogout])\r\n\r\n    return (\r\n        <Redirect to = '/' />\r\n    );\r\n}\r\n\r\nexport default Logout;","import React, {Suspense} from 'react';\r\nimport Layout from '../Layout/Layout';\r\nimport BurgerBuilder from '../BurgerBuilder/BurgerBuilder';\r\nimport Logout from '../Logout/Logout';\r\n// import Login from '../../experimental/Login/Login';\r\nimport {Route, Switch,Redirect} from 'react-router-dom';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport * as actions from '../../store/actions/exports'\r\nimport Spinner from '../../recycle/Spinner/Spinner'\r\n\r\nconst Checkout = React.lazy(() => {return import ('../Checkout/Checkout')})\r\nconst Orders = React.lazy(() => {return import ('../Orders/Orders')})\r\nconst Login = React.lazy(() => {return import ('../Login/Login')})\r\n\r\n\r\nconst App = props => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(state => state.authenticate.token)\r\n  dispatch(actions.checkAuth(token))\r\n\r\n  const isAuthenticated = token !== null;\r\n\r\n\r\n  const routes = function (isAuthenticated){\r\n    if(isAuthenticated){\r\n      return (\r\n          <>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/checkout\" component={Checkout}/></Suspense>\r\n            <Suspense fallback={<Spinner/>}><Route path=\"/orders\" component={Orders}/></Suspense>\r\n            <Route path=\"/logout\" component={Logout}/>\r\n            <Route path=\"/\" exact component={BurgerBuilder}/>\r\n            <Redirect to =\"/\" />\r\n          </>\r\n      )\r\n    } else {\r\n      return (\r\n        <>\r\n          <Suspense fallback={<Spinner/>}><Route path=\"/login\" component={Login} /></Suspense>\r\n          {/* <Route path=\"/auth\" component={Auth} /> */}\r\n          <Route path=\"/\" exact component={BurgerBuilder}/>\r\n          <Redirect to = \"/\"/>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Layout>\r\n      <Switch>\r\n          {routes(isAuthenticated)}\r\n      </Switch>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n}\r\n\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n\r\n        case actions.SET_INGREDIENTS:{\r\n            const _ = deepClone(state);\r\n            if(!_.ingredients){\r\n                _.ingredients = {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat\r\n                    }\r\n\r\n                _.error = false;\r\n                _.purchasing = false;\r\n                return _\r\n\r\n            } else {\r\n                _.error = false;\r\n                return _\r\n            }\r\n        }\r\n              \r\n        \r\n        case actions.FETCH_INGREDIENTS_FAILED:{\r\n            const _ = deepClone(state)\r\n            _.error = true;\r\n            return _;       \r\n        }\r\n\r\n        case actions.ADD_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] ++;  \r\n            _.totalPrice += INGREDIENT_PRICES[action.ingredient];\r\n\r\n            return _;\r\n        }\r\n\r\n        case actions.REMOVE_INGREDIENT:{\r\n            const _ = deepClone(state);\r\n            _.ingredients[action.ingredient] --;   \r\n            _.totalPrice -= INGREDIENT_PRICES[action.ingredient];        \r\n            return _;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    purchased: false,\r\n    ordered: false\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case actions.INIT_ORDER: {\r\n            const _ = deepClone(state)\r\n            _.ordered = true\r\n            return _\r\n            \r\n        }\r\n\r\n        case actions.CANCELED_ORDER: {\r\n            const _ = deepClone(state)\r\n            _.ordered = false\r\n            return _\r\n                \r\n        }\r\n\r\n        case actions.CHECKOUT_BURGER: {\r\n            const _ = deepClone(state);\r\n            _.purchased = false\r\n            return _\r\n        }\r\n\r\n        case actions.PURCHASE_BURGER_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            _.purchased = true;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.loading = false;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.PURCHASE_BURGER_START:{\r\n            const _ = deepClone(state);\r\n            _.loading = true;\r\n            return _;\r\n        }\r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    fetching: true,\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        \r\n        case actions.FETCH_ORDERS_START:\r\n            const _ = deepClone(state);\r\n            _.fetching = true;\r\n            return _;\r\n\r\n\r\n        case actions.FETCH_ORDERS_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.orders = action.orders;\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n\r\n        \r\n        case actions.FETCH_ORDERS_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.fetching = true;\r\n            return _\r\n        }\r\n        \r\n        \r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actions from '../actions/actions';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\nfunction deepClone(object){\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actions.AUTH_START:{\r\n            const _ = deepClone(state);\r\n            _.loading = true;\r\n            _.error = null;\r\n            return _;\r\n        }\r\n\r\n        case actions.AUTH_SUCCESS:{\r\n            const _ = deepClone(state);\r\n            _.token = action.authData.idToken\r\n            _.userId = action.authData.localId\r\n            _.error = null\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.AUTH_FAIL:{\r\n            const _ = deepClone(state);\r\n            _.error = action.error\r\n            _.loading = false\r\n            return _;\r\n        }\r\n\r\n        case actions.AUTH_LOGOUT:{\r\n            const _ = deepClone(state);\r\n            _.token = null\r\n            _.userId = null\r\n            return _;\r\n        }\r\n        \r\n        default: \r\n            return (state)\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/index.scss';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, combineReducers, compose} from 'redux';\r\n// import reducer from './store/reducer';\r\nimport buildBurger from './store/reducers/buildBurger'\r\nimport placeOrder from './store/reducers/placeOrder'\r\nimport fetchOrders from './store/reducers/fetchOrders'\r\nimport authenticate from './store/reducers/authenticate'\r\nimport thunk from 'redux-thunk';\r\n\r\n//Basic redux setup\r\n// const store = createStore(burgerBuilderReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nconst composeEnhancers = (process.env.NODE_ENV === 'development'? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  buildBurger: buildBurger,\r\n  placeOrder: placeOrder,\r\n  fetchOrders: fetchOrders,\r\n  authenticate: authenticate\r\n})\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\r\n      applyMiddleware(thunk)\r\n    ));\r\n\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter  basename=\"/burgerbuilder\">\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>//disabled to show popUp :(\r\n    <>\r\n      {app}\r\n    </>,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}